(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Movai"] = factory();
	else
		root["Movai"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! exports provided: Authentication, Utils, Database */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_Authentication_Authentication__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Authentication/Authentication */ \"./src/Authentication/Authentication.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Authentication\", function() { return _src_Authentication_Authentication__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _src_Utils_Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Utils/Utils */ \"./src/Utils/Utils.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Utils\", function() { return _src_Utils_Utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _src_Database_Database__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Database/Database */ \"./src/Database/Database.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Database\", function() { return _src_Database_Database__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n\n\n\n\n\n//# sourceURL=webpack://Movai/./index.js?");

/***/ }),

/***/ "./node_modules/jwt-decode/lib/atob.js":
/*!*********************************************!*\
  !*** ./node_modules/jwt-decode/lib/atob.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill (input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n\n\n//# sourceURL=webpack://Movai/./node_modules/jwt-decode/lib/atob.js?");

/***/ }),

/***/ "./node_modules/jwt-decode/lib/base64_url_decode.js":
/*!**********************************************************!*\
  !*** ./node_modules/jwt-decode/lib/base64_url_decode.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var atob = __webpack_require__(/*! ./atob */ \"./node_modules/jwt-decode/lib/atob.js\");\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n\n\n//# sourceURL=webpack://Movai/./node_modules/jwt-decode/lib/base64_url_decode.js?");

/***/ }),

/***/ "./node_modules/jwt-decode/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/jwt-decode/lib/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar base64_url_decode = __webpack_require__(/*! ./base64_url_decode */ \"./node_modules/jwt-decode/lib/base64_url_decode.js\");\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token,options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;\n\n\n//# sourceURL=webpack://Movai/./node_modules/jwt-decode/lib/index.js?");

/***/ }),

/***/ "./node_modules/monet/dist/monet.js":
/*!******************************************!*\
  !*** ./node_modules/monet/dist/monet.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Monet.js 0.9.0-rc.1\n *\n * (c) 2012-2018 Chris Myers\n * @license Monet.js may be freely distributed under the MIT license.\n * For all details and documentation:\n * https://monet.github.io/monet.js/\n */\n(function(root, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n})(typeof self !== \"undefined\" ? self : this, function() {\n    \"use strict\";\n    function assignImp(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && source[key] !== undefined) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n    var assign = isFunction(Object.assign) ? Object.assign : assignImp;\n    var Monet = {\n        apply2: apply2,\n        assign: assign,\n        compose: compose,\n        curry: curry(swap(curry), [])([]),\n        idFunction: idFunction,\n        isFunction: isFunction,\n        noop: noop,\n        swap: swap\n    };\n    var TYPE_KEY = \"@@type\";\n    var LIB_NAME = \"monet.js\";\n    var TYPES_NAMES = {\n        Identity: \"Identity\",\n        Maybe: \"Maybe\",\n        Either: \"Either\",\n        Validation: \"Validation\",\n        List: \"List\",\n        NEL: \"NEL\",\n        IO: \"IO\",\n        MonadT: \"MonadT\",\n        Reader: \"Reader\",\n        Free: \"Free\"\n    };\n    function setType(target, typeName) {\n        target[TYPE_KEY] = LIB_NAME + \"/\" + typeName;\n    }\n    function isInstance(typeName) {\n        return function(target) {\n            return target[TYPE_KEY] || target.constructor[TYPE_KEY] === LIB_NAME + \"/\" + typeName;\n        };\n    }\n    function isOfType(typeName) {\n        return function(target) {\n            var targetType = target[TYPE_KEY] || target.constructor && target.constructor[TYPE_KEY];\n            return Boolean(targetType) && targetType.length >= typeName.length && targetType.indexOf(typeName) === targetType.length - typeName.length;\n        };\n    }\n    function isNothing(value) {\n        return value == null;\n    }\n    function noop() {}\n    function getArgs(args) {\n        return Array.prototype.slice.call(args);\n    }\n    function curry(fn, args) {\n        return function() {\n            var args1 = args.concat(getArgs(arguments));\n            return args1.length >= fn.length ? fn.apply(null, args1.slice(0, args1.length)) : curry(fn, args1);\n        };\n    }\n    function compose(f, g) {\n        return function(x) {\n            return f(g(x));\n        };\n    }\n    function isFunction(f) {\n        return Boolean(f && f.constructor && f.call && f.apply);\n    }\n    function idFunction(value) {\n        return value;\n    }\n    function trueFunction() {\n        return true;\n    }\n    function areEqual(a, b) {\n        if (a === b || a !== a && b !== b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        if (isFunction(a.equals) && isFunction(b.equals)) {\n            return a.equals(b);\n        }\n        return false;\n    }\n    function equals(a) {\n        return function(b) {\n            return areEqual(a, b);\n        };\n    }\n    function falseFunction() {\n        return false;\n    }\n    function swap(f) {\n        return function(a, b) {\n            return f(b, a);\n        };\n    }\n    function apply2(a1, a2, f) {\n        return a2.ap(a1.map(curry(f, [])));\n    }\n    function listEquals(list1, list2) {\n        var a = list1;\n        var b = list2;\n        while (!a.isNil && !b.isNil) {\n            if (!equals(a.head())(b.head())) {\n                return false;\n            }\n            a = a.tail();\n            b = b.tail();\n        }\n        return a.isNil && b.isNil;\n    }\n    function listMapC(fn, l) {\n        return l.isNil ? Return(l) : Suspend(function() {\n            return listMapC(fn, l.tail());\n        }).map(curry(cons, [])(fn(l.head())));\n    }\n    function listMap(fn, l) {\n        return listMapC(fn, l).run();\n    }\n    function listFilter(list, fn) {\n        return list.foldRight(Nil)(function(a, acc) {\n            return fn(a) ? cons(a, acc) : acc;\n        });\n    }\n    function listFindC(l, fn) {\n        if (l.isNil) {\n            return Return(None());\n        }\n        var h = l.head();\n        return fn(h) ? Return(Some(h)) : Suspend(function() {\n            return listFindC(l.tail(), fn);\n        });\n    }\n    function listFind(l, fn) {\n        return listFindC(l, fn).run();\n    }\n    function listContainsC(l, val) {\n        if (l.isNil) {\n            return Return(false);\n        }\n        var h = l.head();\n        return areEqual(h, val) ? Return(true) : Suspend(function() {\n            return listContainsC(l.tail(), val);\n        });\n    }\n    function listContains(l, val) {\n        return listContainsC(l, val).run();\n    }\n    function cons(head, tail) {\n        return tail.cons(head);\n    }\n    function List() {\n        switch (arguments.length) {\n          case 0:\n            return new List.fn.init();\n\n          case 1:\n            return new List.fn.init(arguments[0]);\n\n          default:\n            return new List.fn.init(arguments[0], arguments[1]);\n        }\n    }\n    Monet.List = List;\n    var listForEach = function(effectFn, l) {\n        if (!l.isNil) {\n            effectFn(l.head());\n            listForEach(effectFn, l.tail());\n        }\n    };\n    var foldLeft = function(fn, acc, list) {\n        function fL(innerAcc, innerList) {\n            return innerList.isNil ? Return(innerAcc) : Suspend(function() {\n                return fL(fn(innerAcc, innerList.head()), innerList.tail());\n            });\n        }\n        return fL(acc, list).run();\n    };\n    var foldRight = function(fn, list, acc) {\n        function fR(innerList, innerAcc) {\n            return innerList.isNil ? Return(innerAcc) : Suspend(function() {\n                return fR(innerList.tail(), innerAcc);\n            }).map(function(accumulated) {\n                return fn(innerList.head(), accumulated);\n            });\n        }\n        return fR(list, acc).run();\n    };\n    var append = function(self, other) {\n        function appendFree(listA, listB) {\n            return listA.isNil ? Return(listB) : Suspend(function() {\n                return appendFree(listA.tail(), listB).map(function(list) {\n                    return list.cons(listA.head());\n                });\n            });\n        }\n        return appendFree(self, other).run();\n    };\n    var sequence = function(list, type) {\n        return list.foldRight(type.of(Nil))(type.map2(cons));\n    };\n    var sequenceValidation = function(list) {\n        return list.foldLeft(Success(Nil))(function(acc, a) {\n            return acc.ap(a.map(function(v) {\n                return function(t) {\n                    return cons(v, t);\n                };\n            }));\n        }).map(listReverse);\n    };\n    var listReverse = function(list) {\n        return list.foldLeft(Nil)(swap(cons));\n    };\n    var listAp = function(list1, list2) {\n        return list1.bind(function(x) {\n            return list2.map(function(f) {\n                return f(x);\n            });\n        });\n    };\n    var Nil;\n    List.fn = List.prototype = {\n        init: function() {\n            var head = arguments[0];\n            var tail = arguments[1];\n            if (arguments.length === 0) {\n                this.isNil = true;\n                this.size_ = 0;\n            } else {\n                this.isNil = false;\n                this.head_ = head;\n                this.tail_ = tail || Nil;\n                this.size_ = this.tail_.size() + 1;\n            }\n            setType(this, TYPES_NAMES.List);\n        },\n        of: function(value) {\n            return new List(value);\n        },\n        size: function() {\n            return this.size_;\n        },\n        equals: function(other) {\n            return (List.isOfType(other) || NEL.isOfType(other)) && listEquals(this, other);\n        },\n        cons: function(head) {\n            return List(head, this);\n        },\n        snoc: function(element) {\n            return this.concat(List(element));\n        },\n        map: function(fn) {\n            return listMap(fn, this);\n        },\n        toArray: function() {\n            return foldLeft(function(acc, e) {\n                acc.push(e);\n                return acc;\n            }, [], this);\n        },\n        toSet: function() {\n            return new Set(this);\n        },\n        foldLeft: function(initialValue) {\n            var self = this;\n            return function(fn) {\n                return foldLeft(fn, initialValue, self);\n            };\n        },\n        foldRight: function(initialValue) {\n            var self = this;\n            return function(fn) {\n                return foldRight(fn, self, initialValue);\n            };\n        },\n        append: function(list2) {\n            return append(this, list2);\n        },\n        filter: function(fn) {\n            return listFilter(this, fn);\n        },\n        find: function(fn) {\n            return listFind(this, fn);\n        },\n        flatten: function() {\n            return foldRight(append, this, Nil);\n        },\n        flattenMaybe: function() {\n            return this.flatMap(Maybe.toList);\n        },\n        reverse: function() {\n            return listReverse(this);\n        },\n        bind: function(fn) {\n            return this.map(fn).flatten();\n        },\n        forEach: function(effectFn) {\n            listForEach(effectFn, this);\n        },\n        contains: function(val) {\n            return listContains(this, val);\n        },\n        sequenceMaybe: function() {\n            return sequence(this, Maybe);\n        },\n        sequenceValidation: function() {\n            return sequenceValidation(this);\n        },\n        sequenceEither: function() {\n            return sequence(this, Either);\n        },\n        sequenceIO: function() {\n            return sequence(this, IO);\n        },\n        sequenceReader: function() {\n            return sequence(this, Reader);\n        },\n        sequence: function(monadType) {\n            return sequence(this, monadType);\n        },\n        head: function() {\n            return this.head_;\n        },\n        headMaybe: function() {\n            return this.isNil ? None() : Some(this.head_);\n        },\n        tail: function() {\n            return this.isNil ? Nil : this.tail_;\n        },\n        tails: function() {\n            return this.isNil ? List(Nil, Nil) : this.tail().tails().cons(this);\n        },\n        ap: function(list) {\n            return listAp(this, list);\n        },\n        isNEL: falseFunction,\n        toString: function() {\n            return this.isNil ? \"Nil\" : \"List(\" + this.toArray().join(\", \") + \")\";\n        },\n        inspect: function() {\n            return this.toString();\n        }\n    };\n    List.fn.init.prototype = List.fn;\n    setType(List, TYPES_NAMES.List);\n    setType(List.fn.init, TYPES_NAMES.List);\n    List.isInstance = isInstance(TYPES_NAMES.List);\n    List.isOfType = isOfType(TYPES_NAMES.List);\n    List.prototype.empty = function() {\n        return Nil;\n    };\n    List.fromArray = function(array) {\n        return array.reduceRight(function(acc, next) {\n            return acc.cons(next);\n        }, Nil);\n    };\n    List.from = function(iterable) {\n        return List.fromArray(Array.from(iterable));\n    };\n    List.of = function(a) {\n        return new List(a, Nil);\n    };\n    List.prototype.each = List.prototype.forEach;\n    Nil = Monet.Nil = new List.fn.init();\n    function emptyNELError(head) {\n        return new Error(\"Cannot create an empty Non-Empty List. Passed head is \" + head + \".\");\n    }\n    function NEL(head, tail) {\n        if (isNothing(head)) {\n            throw emptyNELError(head);\n        }\n        return new NEL.fn.init(head, tail);\n    }\n    Monet.NEL = Monet.NonEmptyList = NEL;\n    NEL.of = function(a) {\n        return NEL(a, Nil);\n    };\n    NEL.fn = NEL.prototype = {\n        init: function(head, tail) {\n            if (isNothing(head)) {\n                throw emptyNELError(head);\n            } else {\n                this.isNil = false;\n                this.head_ = head;\n                this.tail_ = isNothing(tail) ? Nil : tail;\n                this.size_ = this.tail_.size() + 1;\n            }\n            setType(this, TYPES_NAMES.NEL);\n        },\n        equals: function(other) {\n            return List.isOfType(other) || NEL.isOfType(other) && listEquals(this, other);\n        },\n        cons: function(head) {\n            return NEL(head, this.toList());\n        },\n        snoc: function(element) {\n            return this.concat(NEL(element));\n        },\n        map: function(fn) {\n            return NEL(fn(this.head_), listMap(fn, this.tail_));\n        },\n        bind: function(fn) {\n            var p = fn(this.head_);\n            if (!p.isNEL()) {\n                throw new Error(\"NEL.fn.bind: Passed function must return a NonEmptyList.\");\n            }\n            var list = this.tail().foldLeft(Nil.snoc(p.head()).append(p.tail()))(function(acc, e) {\n                var list2 = fn(e).toList();\n                return acc.snoc(list2.head()).append(list2.tail());\n            });\n            return new NEL(list.head(), list.tail());\n        },\n        head: function() {\n            return this.head_;\n        },\n        tail: function() {\n            return this.tail_;\n        },\n        tails: function() {\n            var listsOfNels = this.toList().tails().map(NEL.fromList).flattenMaybe();\n            return NEL(listsOfNels.head(), listsOfNels.tail());\n        },\n        toList: function() {\n            return List(this.head_, this.tail_);\n        },\n        reverse: function() {\n            if (this.tail().isNil) {\n                return this;\n            }\n            var reversedTail = this.tail().reverse();\n            return NEL(reversedTail.head(), reversedTail.tail().append(List(this.head())));\n        },\n        foldLeft: function(initialValue) {\n            return this.toList().foldLeft(initialValue);\n        },\n        foldRight: function(initialValue) {\n            return this.toList().foldRight(initialValue);\n        },\n        reduceLeft: function(fn) {\n            return this.tail().foldLeft(this.head())(fn);\n        },\n        filter: function(fn) {\n            return listFilter(this.toList(), fn);\n        },\n        find: function(fn) {\n            return listFind(this.toList(), fn);\n        },\n        flatten: function() {\n            return foldRight(append, this.toList().map(function(l) {\n                return l.isNEL() ? l.toList() : l;\n            }), Nil);\n        },\n        flattenMaybe: function() {\n            return this.toList().flatMap(Maybe.toList);\n        },\n        contains: function(val) {\n            return listContains(this.toList(), val);\n        },\n        append: function(list2) {\n            return NEL.fromList(this.toList().append(list2.toList())).some();\n        },\n        cobind: function(fn) {\n            return this.cojoin().map(fn);\n        },\n        size: function() {\n            return this.size_;\n        },\n        forEach: function(fn) {\n            return this.toList().forEach(fn);\n        },\n        isNEL: trueFunction,\n        toString: function() {\n            return \"NEL(\" + this.toArray().join(\", \") + \")\";\n        },\n        inspect: function() {\n            return this.toString();\n        }\n    };\n    NEL.fromList = function(list) {\n        return list.isNil ? None() : Some(NEL(list.head(), list.tail()));\n    };\n    NEL.fromArray = function(array) {\n        return NEL.fromList(List.fromArray(array));\n    };\n    NEL.from = function(iterable) {\n        return NEL.fromList(List.from(iterable));\n    };\n    NEL.fn.init.prototype = NEL.fn;\n    setType(NEL, TYPES_NAMES.NEL);\n    setType(NEL.fn.init, TYPES_NAMES.NEL);\n    NEL.isInstance = isInstance(TYPES_NAMES.NEL);\n    NEL.isOfType = isOfType(TYPES_NAMES.NEL);\n    NEL.prototype.toArray = List.prototype.toArray;\n    NEL.prototype.toSet = List.prototype.toSet;\n    NEL.prototype.extract = NEL.prototype.copure = NEL.prototype.head;\n    NEL.prototype.cojoin = NEL.prototype.tails;\n    NEL.prototype.coflatMap = NEL.prototype.mapTails = NEL.prototype.cobind;\n    NEL.prototype.ap = List.prototype.ap;\n    var Maybe = Monet.Maybe = {};\n    Maybe.fromFalsy = function(val) {\n        return !val ? Maybe.None() : Maybe.Some(val);\n    };\n    Maybe.fromNull = function(val) {\n        return isNothing(val) ? Maybe.None() : Maybe.Some(val);\n    };\n    Maybe.fromUndefined = function(val) {\n        return val === undefined ? Maybe.None() : Maybe.Some(val);\n    };\n    Maybe.of = function(a) {\n        return Some(a);\n    };\n    var Some = Maybe.Just = Maybe.Some = Maybe.some = Monet.Some = Monet.Just = function(val) {\n        return new Maybe.fn.init(true, val);\n    };\n    var None = Maybe.Nothing = Maybe.None = Maybe.none = Monet.None = Monet.Nothing = function() {\n        return new Maybe.fn.init(false, null);\n    };\n    Maybe.toList = function(maybe) {\n        return maybe.toList();\n    };\n    Maybe.fn = Maybe.prototype = {\n        init: function(isValue, val) {\n            this.isValue = isValue;\n            if (isValue && isNothing(val)) {\n                throw new Error(\"Can not create Some with illegal value: \" + val + \".\");\n            }\n            this.val = val;\n            setType(this, TYPES_NAMES.Maybe);\n        },\n        isSome: function() {\n            return this.isValue;\n        },\n        isNone: function() {\n            return !this.isSome();\n        },\n        bind: function(bindFn) {\n            return this.isValue ? bindFn(this.val) : this;\n        },\n        some: function() {\n            if (this.isValue) {\n                return this.val;\n            }\n            throw new Error(\"Cannot call .some() on a None.\");\n        },\n        orSome: function(otherValue) {\n            return this.isValue ? this.val : otherValue;\n        },\n        orLazy: function(getOtherValue) {\n            return this.cata(getOtherValue, idFunction);\n        },\n        orNull: function() {\n            return this.orSome(null);\n        },\n        orUndefined: function() {\n            return this.orSome(undefined);\n        },\n        orElse: function(maybe) {\n            return this.catchMap(function() {\n                return maybe;\n            });\n        },\n        ap: function(maybeWithFunction) {\n            var value = this.val;\n            return this.isValue ? maybeWithFunction.map(function(fn) {\n                return fn(value);\n            }) : this;\n        },\n        equals: function(other) {\n            return Maybe.isOfType(other) && this.cata(function() {\n                return other.isNone();\n            }, function(val) {\n                return other.fold(false)(equals(val));\n            });\n        },\n        toArray: function() {\n            return this.map(function(val) {\n                return [ val ];\n            }).orLazy(function() {\n                return [];\n            });\n        },\n        toSet: function() {\n            return new Set(this);\n        },\n        toList: function() {\n            return this.map(List).orLazy(function() {\n                return Nil;\n            });\n        },\n        toEither: function(failVal) {\n            return this.isSome() ? Right(this.val) : Left(failVal);\n        },\n        toValidation: function(failVal) {\n            return this.isSome() ? Success(this.val) : Fail(failVal);\n        },\n        fold: function(defaultValue) {\n            var self = this;\n            return function(fn) {\n                return self.isSome() ? fn(self.val) : defaultValue;\n            };\n        },\n        foldLeft: function(initialValue) {\n            return this.toList().foldLeft(initialValue);\n        },\n        foldRight: function(initialValue) {\n            return this.toList().foldRight(initialValue);\n        },\n        cata: function(none, some) {\n            return this.isSome() ? some(this.val) : none();\n        },\n        catchMap: function(fn) {\n            return this.isSome() ? this : fn();\n        },\n        filter: function(fn) {\n            var self = this;\n            return self.flatMap(function(a) {\n                return fn(a) ? self : None();\n            });\n        },\n        orNoneIf: function(bool) {\n            return bool ? None() : this;\n        },\n        contains: function(val) {\n            return this.isSome() ? areEqual(this.val, val) : false;\n        },\n        forEach: function(fn) {\n            this.cata(noop, fn);\n        },\n        orElseRun: function(fn) {\n            this.cata(fn, noop);\n        },\n        toString: function() {\n            return this.isSome() ? \"Just(\" + this.val + \")\" : \"Nothing\";\n        },\n        inspect: function() {\n            return this.toString();\n        }\n    };\n    Maybe.prototype.orJust = Maybe.prototype.getOrElse = Maybe.prototype.orSome;\n    Maybe.prototype.just = Maybe.prototype.some;\n    Maybe.prototype.isJust = Maybe.prototype.isSome;\n    Maybe.prototype.isNothing = Maybe.prototype.isNone;\n    Maybe.prototype.orNothingIf = Maybe.prototype.orNoneIf;\n    Maybe.fn.init.prototype = Maybe.fn;\n    setType(Maybe, TYPES_NAMES.Maybe);\n    setType(Maybe.fn.init, TYPES_NAMES.Maybe);\n    Maybe.isInstance = isInstance(TYPES_NAMES.Maybe);\n    Maybe.isOfType = isOfType(TYPES_NAMES.Maybe);\n    var Validation = Monet.Validation = {};\n    var Success = Validation.Success = Validation.success = Monet.Success = function(val) {\n        return new Validation.fn.init(val, true);\n    };\n    var Fail = Validation.Fail = Validation.fail = Monet.Fail = function(error) {\n        return new Validation.fn.init(error, false);\n    };\n    Validation.of = function(v) {\n        return Success(v);\n    };\n    Validation.fn = Validation.prototype = {\n        init: function(val, success) {\n            this.val = val;\n            this.isSuccessValue = success;\n            setType(this, TYPES_NAMES.Validation);\n        },\n        success: function() {\n            if (this.isSuccess()) {\n                return this.val;\n            }\n            throw new Error(\"Cannot call success() on a Fail.\");\n        },\n        isSuccess: function() {\n            return this.isSuccessValue;\n        },\n        isFail: function() {\n            return !this.isSuccessValue;\n        },\n        fail: function() {\n            if (this.isSuccess()) {\n                throw new Error(\"Cannot call fail() on a Success.\");\n            }\n            return this.val;\n        },\n        bind: function(fn) {\n            return this.isSuccess() ? fn(this.val) : this;\n        },\n        ap: function(validationWithFn) {\n            var value = this.val;\n            return this.isSuccess() ? validationWithFn.map(function(fn) {\n                return fn(value);\n            }) : validationWithFn.isFail() ? Validation.Fail(Semigroup.append(value, validationWithFn.fail())) : this;\n        },\n        acc: function() {\n            var x = function() {\n                return x;\n            };\n            return this.isSuccessValue ? Validation.success(x) : this;\n        },\n        foldLeft: function(initialValue) {\n            return this.toMaybe().toList().foldLeft(initialValue);\n        },\n        foldRight: function(initialValue) {\n            return this.toMaybe().toList().foldRight(initialValue);\n        },\n        cata: function(fail, success) {\n            return this.isSuccessValue ? success(this.val) : fail(this.val);\n        },\n        catchMap: function(fn) {\n            return this.isSuccess() ? this : fn(this.val);\n        },\n        swap: function() {\n            return this.isSuccess() ? Fail(this.val) : Success(this.val);\n        },\n        failMap: function(fn) {\n            return this.isFail() ? Fail(fn(this.val)) : this;\n        },\n        bimap: function(fail, success) {\n            return this.isSuccessValue ? this.map(success) : this.failMap(fail);\n        },\n        forEach: function(fn) {\n            this.cata(noop, fn);\n        },\n        forEachFail: function(fn) {\n            this.cata(fn, noop);\n        },\n        equals: function(other) {\n            return Validation.isOfType(other) && this.cata(function(fail) {\n                return other.cata(equals(fail), falseFunction);\n            }, function(success) {\n                return other.cata(falseFunction, equals(success));\n            });\n        },\n        toMaybe: function() {\n            return this.isSuccess() ? Some(this.val) : None();\n        },\n        toEither: function() {\n            return (this.isSuccess() ? Right : Left)(this.val);\n        },\n        toString: function() {\n            return (this.isSuccess() ? \"Success(\" : \"Fail(\") + this.val + \")\";\n        },\n        inspect: function() {\n            return this.toString();\n        }\n    };\n    Validation.prototype.fold = Validation.prototype.cata;\n    Validation.fn.init.prototype = Validation.fn;\n    setType(Validation, TYPES_NAMES.Validation);\n    setType(Validation.fn.init, TYPES_NAMES.Validation);\n    Validation.isInstance = isInstance(TYPES_NAMES.Validation);\n    Validation.isOfType = isOfType(TYPES_NAMES.Validation);\n    var Semigroup = Monet.Semigroup = {\n        append: function(a, b) {\n            if (isFunction(a.concat)) {\n                return a.concat(b);\n            }\n            throw new Error(\"Couldn't find a semigroup appender in the environment, \" + \"please specify your own append function\");\n        }\n    };\n    var MonadT = Monet.monadTransformer = Monet.MonadT = Monet.monadT = function(monad) {\n        return new MonadT.fn.init(monad);\n    };\n    MonadT.of = function(m) {\n        return MonadT(m);\n    };\n    MonadT.fn = MonadT.prototype = {\n        init: function(monad) {\n            this.monad = monad;\n            setType(Validation, TYPES_NAMES.MonadT);\n        },\n        map: function(fn) {\n            return MonadT(this.monad.map(function(v) {\n                return v.map(fn);\n            }));\n        },\n        bind: function(fn) {\n            return MonadT(this.monad.map(function(v) {\n                return v.flatMap(fn);\n            }));\n        },\n        ap: function(monadWithFn) {\n            return MonadT(this.monad.flatMap(function(v) {\n                return monadWithFn.perform().map(function(v2) {\n                    return v.ap(v2);\n                });\n            }));\n        },\n        perform: function() {\n            return this.monad;\n        }\n    };\n    MonadT.fn.init.prototype = MonadT.fn;\n    var IO = Monet.IO = Monet.io = function(effectFn) {\n        return new IO.fn.init(effectFn);\n    };\n    IO.of = function(a) {\n        return IO(function() {\n            return a;\n        });\n    };\n    IO.fn = IO.prototype = {\n        init: function(effectFn) {\n            if (!isFunction(effectFn)) {\n                throw new Error(\"IO requires a function.\");\n            }\n            this.effectFn = effectFn;\n            setType(Validation, TYPES_NAMES.IO);\n        },\n        map: function(fn) {\n            var self = this;\n            return IO(function() {\n                return fn(self.effectFn());\n            });\n        },\n        bind: function(fn) {\n            var self = this;\n            return IO(function() {\n                return fn(self.effectFn()).run();\n            });\n        },\n        ap: function(ioWithFn) {\n            var self = this;\n            return ioWithFn.map(function(fn) {\n                return fn(self.effectFn());\n            });\n        },\n        run: function() {\n            return this.effectFn();\n        }\n    };\n    IO.fn.init.prototype = IO.fn;\n    setType(IO, TYPES_NAMES.IO);\n    setType(IO.fn.init, TYPES_NAMES.IO);\n    IO.isInstance = isInstance(TYPES_NAMES.IO);\n    IO.isOfType = isOfType(TYPES_NAMES.IO);\n    IO.prototype.perform = IO.prototype.performUnsafeIO = IO.prototype.run;\n    var Either = Monet.Either = {};\n    Either.of = function(a) {\n        return Right(a);\n    };\n    var Right = Either.Right = Either.right = Monet.Right = function(val) {\n        return new Either.fn.init(val, true);\n    };\n    var Left = Either.Left = Either.left = Monet.Left = function(val) {\n        return new Either.fn.init(val, false);\n    };\n    Either.fn = Either.prototype = {\n        init: function(val, isRightValue) {\n            this.isRightValue = isRightValue;\n            this.value = val;\n            setType(this, TYPES_NAMES.Either);\n        },\n        bind: function(fn) {\n            return this.isRightValue ? fn(this.value) : this;\n        },\n        ap: function(eitherWithFn) {\n            var self = this;\n            return this.isRightValue ? eitherWithFn.map(function(fn) {\n                return fn(self.value);\n            }) : this;\n        },\n        leftMap: function(fn) {\n            return this.isLeft() ? Left(fn(this.value)) : this;\n        },\n        isRight: function() {\n            return this.isRightValue;\n        },\n        isLeft: function() {\n            return !this.isRight();\n        },\n        right: function() {\n            if (this.isRightValue) {\n                return this.value;\n            }\n            throw new Error(\"Cannot call right() on a Left.\");\n        },\n        left: function() {\n            if (this.isRightValue) {\n                throw new Error(\"Cannot call left() on a Right.\");\n            }\n            return this.value;\n        },\n        foldLeft: function(initialValue) {\n            return this.toMaybe().toList().foldLeft(initialValue);\n        },\n        foldRight: function(initialValue) {\n            return this.toMaybe().toList().foldRight(initialValue);\n        },\n        cata: function(leftFn, rightFn) {\n            return this.isRightValue ? rightFn(this.value) : leftFn(this.value);\n        },\n        catchMap: function(fn) {\n            return this.isRight() ? this : fn(this.value);\n        },\n        swap: function() {\n            return this.isRight() ? Left(this.value) : Right(this.value);\n        },\n        forEach: function(fn) {\n            this.cata(noop, fn);\n        },\n        forEachLeft: function(fn) {\n            this.cata(fn, noop);\n        },\n        equals: function(other) {\n            return Either.isOfType(other) && this.cata(function(left) {\n                return other.cata(equals(left), falseFunction);\n            }, function(right) {\n                return other.cata(falseFunction, equals(right));\n            });\n        },\n        bimap: function(leftFn, rightFn) {\n            return this.isRightValue ? this.map(rightFn) : this.leftMap(leftFn);\n        },\n        toMaybe: function() {\n            return this.isRight() ? Some(this.value) : None();\n        },\n        toValidation: function() {\n            return this.isRight() ? Success(this.value) : Fail(this.value);\n        },\n        toString: function() {\n            return this.cata(function(left) {\n                return \"Left(\" + left + \")\";\n            }, function(right) {\n                return \"Right(\" + right + \")\";\n            });\n        },\n        inspect: function() {\n            return this.toString();\n        }\n    };\n    Either.prototype.fold = Either.prototype.cata;\n    Either.fn.init.prototype = Either.fn;\n    setType(Either, TYPES_NAMES.Either);\n    setType(Either.fn.init, TYPES_NAMES.Either);\n    Either.isInstance = isInstance(TYPES_NAMES.Either);\n    Either.isOfType = isOfType(TYPES_NAMES.Either);\n    var Reader = Monet.Reader = function(fn) {\n        return new Reader.fn.init(fn);\n    };\n    Reader.of = function(x) {\n        return Reader(function(_) {\n            return x;\n        });\n    };\n    Reader.ask = function() {\n        return Reader(idFunction);\n    };\n    Reader.fn = Reader.prototype = {\n        init: function(fn) {\n            this.f = fn;\n            setType(this, TYPES_NAMES.Reader);\n        },\n        run: function(config) {\n            return this.f(config);\n        },\n        bind: function(fn) {\n            var self = this;\n            return Reader(function(config) {\n                return fn(self.run(config)).run(config);\n            });\n        },\n        ap: function(readerWithFn) {\n            var self = this;\n            return readerWithFn.bind(function(fn) {\n                return Reader(function(config) {\n                    return fn(self.run(config));\n                });\n            });\n        },\n        map: function(fn) {\n            var self = this;\n            return Reader(function(config) {\n                return fn(self.run(config));\n            });\n        },\n        local: function(fn) {\n            var self = this;\n            return Reader(function(c) {\n                return self.run(fn(c));\n            });\n        }\n    };\n    Reader.fn.init.prototype = Reader.fn;\n    setType(Reader, TYPES_NAMES.Reader);\n    setType(Reader.fn.init, TYPES_NAMES.Reader);\n    Reader.isInstance = isInstance(TYPES_NAMES.Reader);\n    Reader.isOfType = isOfType(TYPES_NAMES.Reader);\n    var Free = Monet.Free = {};\n    var Suspend = Free.Suspend = Monet.Suspend = function(functor) {\n        return new Free.fn.init(functor, true);\n    };\n    var Return = Free.Return = Monet.Return = function(val) {\n        return new Free.fn.init(val, false);\n    };\n    Free.of = function(a) {\n        return Return(a);\n    };\n    Free.liftF = function(functor) {\n        return isFunction(functor) ? Suspend(compose(Return, functor)) : Suspend(functor.map(Return));\n    };\n    Free.fn = Free.prototype = {\n        init: function(val, isSuspend) {\n            this.isSuspend = isSuspend;\n            if (isSuspend) {\n                this.functor = val;\n            } else {\n                this.val = val;\n            }\n            setType(this, TYPES_NAMES.Free);\n        },\n        run: function() {\n            return this.go(function(f) {\n                return f();\n            });\n        },\n        bind: function(fn) {\n            return this.isSuspend ? isFunction(this.functor) ? Suspend(compose(function(free) {\n                return free.bind(fn);\n            }, this.functor)) : Suspend(this.functor.map(function(free) {\n                return free.bind(fn);\n            })) : fn(this.val);\n        },\n        ap: function(ff) {\n            return this.bind(function(x) {\n                return ff.map(function(f) {\n                    return f(x);\n                });\n            });\n        },\n        resume: function() {\n            return this.isSuspend ? Left(this.functor) : Right(this.val);\n        },\n        go1: function(f) {\n            function go2(t) {\n                return t.resume().cata(function(functor) {\n                    return go2(f(functor));\n                }, idFunction);\n            }\n            return go2(this);\n        },\n        go: function(f) {\n            var result = this.resume();\n            while (result.isLeft()) {\n                var next = f(result.left());\n                result = next.resume();\n            }\n            return result.right();\n        }\n    };\n    Free.fn.init.prototype = Free.fn;\n    setType(Free, TYPES_NAMES.Free);\n    setType(Free.fn.init, TYPES_NAMES.Free);\n    Free.isInstance = isInstance(TYPES_NAMES.Free);\n    Free.isOfType = isOfType(TYPES_NAMES.Free);\n    function Identity(a) {\n        return new Identity.fn.init(a);\n    }\n    Monet.Identity = Identity;\n    Identity.of = function(a) {\n        return new Identity(a);\n    };\n    Identity.fn = Identity.prototype = {\n        init: function(val) {\n            this.val = val;\n            setType(this, TYPES_NAMES.Identity);\n        },\n        bind: function(fn) {\n            return fn(this.val);\n        },\n        get: function() {\n            return this.val;\n        },\n        forEach: function(fn) {\n            fn(this.val);\n        },\n        equals: function(other) {\n            return Identity.isOfType(other) && equals(this.get())(other.get());\n        },\n        contains: function(val) {\n            return areEqual(this.val, val);\n        },\n        toString: function() {\n            return \"Identity(\" + this.val + \")\";\n        },\n        inspect: function() {\n            return this.toString();\n        },\n        ap: function(applyWithFunction) {\n            var value = this.val;\n            return applyWithFunction.map(function(fn) {\n                return fn(value);\n            });\n        },\n        toArray: function() {\n            return [ this.get() ];\n        },\n        toList: function() {\n            return List(this.get(), Nil);\n        },\n        toSet: function() {\n            return new Set(this);\n        }\n    };\n    Identity.fn.init.prototype = Identity.fn;\n    setType(Identity, TYPES_NAMES.Identity);\n    setType(Identity.fn.init, TYPES_NAMES.Identity);\n    Identity.isInstance = isInstance(TYPES_NAMES.Identity);\n    Identity.isOfType = isOfType(TYPES_NAMES.Identity);\n    function addFantasyLandAliases(type) {\n        [ \"equals\", \"map\", \"ap\", \"chain\" ].filter(function(method) {\n            return isFunction(type.prototype[method]);\n        }).forEach(function(method) {\n            type.prototype[\"fantasy-land/\" + method] = type.prototype[method];\n        });\n    }\n    function addAliases(type) {\n        type.prototype.flatMap = type.prototype.chain = type.prototype.bind;\n        type.pure = type.unit = type.of;\n        type.prototype.of = type.of;\n        if (isFunction(type.prototype.append)) {\n            type.prototype.concat = type.prototype.append;\n        }\n        type.prototype.point = type.prototype.pure = type.prototype.unit = type.prototype.of;\n    }\n    function addFilterNot(type) {\n        if (isFunction(type.prototype.filter)) {\n            type.prototype.filterNot = function(fn) {\n                return this.filter(function(a) {\n                    return !fn(a);\n                });\n            };\n        }\n    }\n    function addMonadOps(type) {\n        type.prototype.join = function() {\n            return this.flatMap(idFunction);\n        };\n        type.map2 = function(fn) {\n            return function(ma, mb) {\n                return ma.flatMap(function(a) {\n                    return mb.map(function(b) {\n                        return fn(a, b);\n                    });\n                });\n            };\n        };\n    }\n    function addFunctorOps(type) {\n        if (!isFunction(type.prototype.map)) {\n            type.prototype.map = function(fn) {\n                return this.bind(compose(this.of, fn));\n            };\n        }\n    }\n    function addApplicativeOps(type) {\n        type.prototype.takeLeft = function(m) {\n            return apply2(this, m, function(a, b) {\n                return a;\n            });\n        };\n        type.prototype.takeRight = function(m) {\n            return apply2(this, m, function(a, b) {\n                return b;\n            });\n        };\n    }\n    function addCollectionPredicates(type) {\n        if (isFunction(type.prototype.toArray)) {\n            type.prototype.every = type.prototype.forall = function(fn) {\n                return this.toArray().every(fn);\n            };\n            type.prototype.exists = function(fn) {\n                return this.toArray().some(fn);\n            };\n        }\n    }\n    function makeIterable(type) {\n        if (isFunction(type.prototype.toArray)) {\n            type.prototype[Symbol.iterator] = function() {\n                return this.toArray()[Symbol.iterator]();\n            };\n        }\n    }\n    function addToOperator(type) {\n        if (isFunction(type.prototype.toArray)) {\n            type.prototype.to = function(ctor) {\n                return ctor(this);\n            };\n        }\n    }\n    function decorate(type) {\n        addAliases(type);\n        addFilterNot(type);\n        addMonadOps(type);\n        addFunctorOps(type);\n        addApplicativeOps(type);\n        addCollectionPredicates(type);\n        addFantasyLandAliases(type);\n        makeIterable(type);\n        addToOperator(type);\n    }\n    decorate(MonadT);\n    decorate(Either);\n    decorate(Maybe);\n    decorate(IO);\n    decorate(NEL);\n    decorate(List);\n    decorate(Validation);\n    decorate(Reader);\n    decorate(Free);\n    decorate(Identity);\n    return Monet;\n});\n\n//# sourceURL=webpack://Movai/./node_modules/monet/dist/monet.js?");

/***/ }),

/***/ "./src/Authentication/Authentication.js":
/*!**********************************************!*\
  !*** ./src/Authentication/Authentication.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jwt-decode */ \"./node_modules/jwt-decode/lib/index.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jwt_decode__WEBPACK_IMPORTED_MODULE_0__);\n\nvar REST_API = \"http://localhost:5004\";\nvar Authentication = {};\n\nAuthentication.AuthException = function (message) {\n  this.message = message;\n  this.name = \"AuthException\";\n};\n\nAuthentication.getToken = function () {\n  var token = window.localStorage.getItem(\"movai.token\");\n  return token ? token : false;\n};\n\nAuthentication.getRefreshToken = function () {\n  var refreshToken = window.localStorage.getItem(\"movai.refreshToken\");\n  return refreshToken ? refreshToken : false;\n};\n\nAuthentication.getTokenData = function () {\n  var token = getToken();\n  var message = jwt_decode__WEBPACK_IMPORTED_MODULE_0___default()(token).message;\n  var tokenData = {\n    message: message,\n    auth_token: false,\n    refresh_token: getRefreshToken(),\n    error: false,\n    access_token: token\n  };\n  return tokenData;\n};\n\nAuthentication.login = function _callee(username, password, remember) {\n  var headers, url, response, status, data;\n  return regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // Cleanup...\n          window.localStorage.removeItem(\"movai.token\");\n          window.localStorage.removeItem(\"movai.refreshToken\");\n          window.localStorage.removeItem(\"movai.tokenRemember\");\n          window.sessionStorage.removeItem(\"movai.session\");\n          headers = {};\n          headers[\"Content-Type\"] = \"application/json\";\n          url = \"\".concat(REST_API, \"/token-auth/\");\n          _context.prev = 7;\n          _context.next = 10;\n          return regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n              username: username,\n              password: password,\n              remember: remember\n            })\n          }));\n\n        case 10:\n          response = _context.sent;\n          status = response.status;\n          _context.next = 14;\n          return regeneratorRuntime.awrap(response.json());\n\n        case 14:\n          data = _context.sent;\n\n          if (status === 200) {\n            window.localStorage.setItem(\"movai.token\", data[\"access_token\"]);\n            window.localStorage.setItem(\"movai.refreshToken\", data[\"refresh_token\"]);\n            window.localStorage.setItem(\"movai.tokenRemember\", remember == \"undefined\" ? false : remember);\n            window.sessionStorage.setItem(\"movai.session\", true);\n          }\n\n          return _context.abrupt(\"return\", data);\n\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](7);\n          throw _context.t0;\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[7, 19]]);\n};\n\nAuthentication.logout = function () {\n  window.localStorage.removeItem(\"movai.token\");\n  window.localStorage.removeItem(\"movai.refreshToken\");\n  window.localStorage.removeItem(\"movai.tokenRemember\");\n  window.sessionStorage.removeItem(\"movai.session\");\n};\n\nAuthentication.checkLogin = function _callee2() {\n  var token, refreshToken, tokenRemember, sessionFlag, tokenData, refreshTokenData, url, headers, response, status, data;\n  return regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          token = window.localStorage.getItem(\"movai.token\");\n          refreshToken = window.localStorage.getItem(\"movai.refreshToken\");\n          tokenRemember = window.localStorage.getItem(\"movai.tokenRemember\");\n          sessionFlag = window.sessionStorage.getItem(\"movai.session\");\n\n          if (!(token === null || refreshToken === null)) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", false);\n\n        case 6:\n          tokenData = null;\n          _context2.prev = 7;\n          tokenData = jwt_decode__WEBPACK_IMPORTED_MODULE_0___default()(token);\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](7);\n          return _context2.abrupt(\"return\", false);\n\n        case 14:\n          if (!(tokenData[\"exp\"] > new Date().getTime() / 1000)) {\n            _context2.next = 16;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", true);\n\n        case 16:\n          if (!(tokenRemember == \"false\" && sessionFlag === null)) {\n            _context2.next = 19;\n            break;\n          }\n\n          logout();\n          return _context2.abrupt(\"return\", false);\n\n        case 19:\n          if (!refreshToken) {\n            _context2.next = 41;\n            break;\n          }\n\n          _context2.prev = 20;\n          // Refresh Token\n          refreshTokenData = jwt_decode__WEBPACK_IMPORTED_MODULE_0___default()(refreshToken);\n\n          if (!(refreshTokenData[\"exp\"] < new Date().getTime() / 1000)) {\n            _context2.next = 24;\n            break;\n          }\n\n          throw \"refresh token has expired\";\n\n        case 24:\n          url = \"\".concat(REST_API, \"/token-refresh/\");\n          headers = {\n            \"Content-Type\": \"application/json\"\n          };\n          _context2.next = 28;\n          return regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n              token: refreshToken\n            })\n          }));\n\n        case 28:\n          response = _context2.sent;\n          status = response.status;\n          _context2.next = 32;\n          return regeneratorRuntime.awrap(response.json());\n\n        case 32:\n          data = _context2.sent;\n\n          if (!(status === 200)) {\n            _context2.next = 37;\n            break;\n          }\n\n          window.localStorage.setItem(\"movai.token\", data[\"access_token\"]);\n          window.localStorage.setItem(\"movai.refreshToken\", data[\"refresh_token\"]);\n          return _context2.abrupt(\"return\", true);\n\n        case 37:\n          _context2.next = 41;\n          break;\n\n        case 39:\n          _context2.prev = 39;\n          _context2.t1 = _context2[\"catch\"](20);\n\n        case 41:\n          return _context2.abrupt(\"return\", false);\n\n        case 42:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[7, 11], [20, 39]]);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Authentication);\n\n//# sourceURL=webpack://Movai/./src/Authentication/Authentication.js?");

/***/ }),

/***/ "./src/Database/Database.js":
/*!**********************************!*\
  !*** ./src/Database/Database.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Authentication_Authentication__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Authentication/Authentication */ \"./src/Authentication/Authentication.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar getToken = _Authentication_Authentication__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getToken,\n    AuthException = _Authentication_Authentication__WEBPACK_IMPORTED_MODULE_0__[\"default\"].AuthException,\n    checkLogin = _Authentication_Authentication__WEBPACK_IMPORTED_MODULE_0__[\"default\"].checkLogin;\n\nvar Database = function Database() {\n  var _this = this;\n\n  _classCallCheck(this, Database);\n\n  _defineProperty(this, \"connect\", function () {\n    checkLogin().then(function (res) {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      var wsUrl = \"\".concat(_this.WS_API, \"?token=\").concat(getToken());\n      _this.websocket = new WebSocket(wsUrl);\n\n      _this.websocket.onopen = function (evt) {\n        return _this.onOpen(evt);\n      };\n\n      _this.websocket.onclose = function (evt) {\n        return _this.onClose(evt);\n      };\n\n      _this.websocket.onmessage = function (evt) {\n        return _this.onMessage(evt);\n      };\n\n      _this.websocket.onerror = function (evt) {\n        return _this.onError(evt);\n      };\n    });\n  });\n\n  _defineProperty(this, \"onOpen\", function (evt) {\n    _this.dispatch(\"onopen\", undefined);\n  });\n\n  _defineProperty(this, \"onClose\", function (evt) {\n    _this.dispatch(\"onclose\", undefined);\n\n    if (evt.code !== 1000) {\n      window.setTimeout(_this.connect(), _this.timeout);\n    }\n  });\n\n  _defineProperty(this, \"onMessage\", function (evt) {\n    checkLogin().then(function (res) {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      var data;\n\n      try {\n        data = JSON.parse(evt.data);\n      } catch (err) {\n        console.error(err);\n        return;\n      }\n\n      if (data.error) {\n        console.error(data.error);\n        return;\n      }\n\n      var patterns = data.patterns;\n      var is_pattern = true;\n      var one_shot = false;\n\n      if ([\"list\", \"unsubscribe\", \"subscribe\"].includes(data.event)) {\n        patterns = patterns.map(function (p) {\n          if (data.event === \"unsubscribe\") {\n            delete _this.callbacks[JSON.stringify(p)];\n          }\n\n          return data.event + \"/\" + JSON.stringify(p);\n        });\n\n        if (data.event === \"list\") {\n          patterns = [\"list\"];\n        }\n\n        is_pattern = false;\n        one_shot = true;\n      }\n\n      patterns.map(function (pattern) {\n        _this.dispatch(pattern, data, is_pattern, one_shot);\n      });\n    });\n  });\n\n  _defineProperty(this, \"checkTest\", function (pattern, data, is_pattern, one_shot) {\n    return new Promise(function (resolve, reject) {\n      _this.dispatch(pattern, data, is_pattern, one_shot);\n\n      if (true) {\n        resolve(\"DONE\");\n      }\n    });\n  });\n\n  _defineProperty(this, \"onError\", function (evt) {\n    _this.dispatch(\"onerror\", undefined);\n  });\n\n  _defineProperty(this, \"onEvent\", function (event_name) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    _this.evt_callbacks[event_name] = _this.evt_callbacks[event_name] || [];\n\n    _this.evt_callbacks[event_name].push(callback);\n  });\n\n  _defineProperty(this, \"close\", function () {\n    return _this.websocket.close();\n  });\n\n  _defineProperty(this, \"subscribe\", function (_pattern) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    var evt_callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    var message = {\n      event: \"subscribe\",\n      pattern: _pattern\n    };\n    var pattern = JSON.stringify(_pattern);\n    _this.callbacks[pattern] = _this.callbacks[pattern] || [];\n\n    _this.callbacks[pattern].push(callback);\n\n    if (evt_callback) {\n      _this.evt_callbacks[\"subscribe/\" + pattern] = _this.evt_callbacks[\"subscribe\" + pattern] || [];\n\n      _this.evt_callbacks[\"subscribe/\" + pattern].push(evt_callback);\n    }\n\n    _this._send(message);\n  });\n\n  _defineProperty(this, \"unsubscribe\", function (_pattern) {\n    var evt_callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    console.log(\"Unsubscribe called \" + JSON.stringify(_pattern));\n    var message = {\n      event: \"unsubscribe\",\n      pattern: _pattern\n    };\n    var pattern = JSON.stringify(_pattern);\n\n    if (evt_callback) {\n      _this.evt_callbacks[\"unsubscribe/\" + pattern] = _this.evt_callbacks[\"unsubscribe/\" + pattern] || [];\n\n      _this.evt_callbacks[\"unsubscribe/\" + pattern].push(evt_callback);\n    }\n\n    _this._send(message);\n  });\n\n  _defineProperty(this, \"list\", function () {\n    var evt_callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    var message = {\n      event: \"list\"\n    };\n    _this.evt_callbacks[\"list\"] = _this.evt_callbacks[\"list\"] || [];\n\n    _this.evt_callbacks[\"list\"].push(evt_callback);\n\n    _this._send(message);\n  });\n\n  _defineProperty(this, \"_send\", function (message) {\n    var self = _this;\n\n    try {\n      _this.websocket.send(JSON.stringify(message));\n    } catch (err) {\n      var sub_interval = undefined;\n      sub_interval = setInterval(function () {\n        if (self.websocket.readyState === 1) {\n          clearInterval(sub_interval);\n          self.websocket.send(JSON.stringify(message));\n        }\n      }, 200, sub_interval);\n    }\n  });\n\n  _defineProperty(this, \"dispatch\", function (_pattern, message) {\n    var is_pattern = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var one_shot = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    /*if is_pattern is false then pattern is an event thus trigger evt_callbacks */\n    var _callbacks = undefined;\n    var pattern = _pattern;\n\n    if (is_pattern === true) {\n      pattern = JSON.stringify(_pattern);\n      _callbacks = _this.callbacks[pattern];\n    } else {\n      _callbacks = _this.evt_callbacks[pattern];\n    }\n\n    if (_callbacks === undefined) return;\n\n    for (var i = 0; i < _callbacks.length; i++) {\n      if (typeof _callbacks[i] === \"function\") {\n        _callbacks[i](message);\n      }\n    }\n\n    if (_callbacks) {\n      if (one_shot === true) {\n        _callbacks = [];\n      } else {//NOTHING\n      }\n    }\n  });\n\n  _defineProperty(this, \"getVar\", function (key) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    var scope = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"global\";\n\n    if (![\"global\", \"fleet\"].includes(scope)) {\n      throw \"Only fleet and global scopes available.\";\n    }\n\n    if (scope === \"fleet\") {\n      // key format: robot_name@key_name\n      if (key.split(\"@\").length < 2) {\n        throw \"Wrong key format (robot_name@key_name)\";\n      }\n    }\n\n    var url = _this.REST_API + \"Var/\" + scope + \"/\" + key + \"/\";\n    checkLogin().then(function (res) {\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (callback) {\n          callback(data);\n        } else {//NOTHING\n        }\n      });\n    });\n  });\n\n  _defineProperty(this, \"setVar\", function (key, value) {\n    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    var scope = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"global\";\n\n    if (![\"global\", \"fleet\"].includes(scope)) {\n      throw \"Only fleet and global scopes available.\";\n    }\n\n    if (scope === \"fleet\") {\n      // key format: robot_name@key_name\n      var values = key.split(\"@\");\n\n      if (key.split(\"@\").length < 2) {\n        throw \"Wrong key format (robot_name@key_name)\";\n      }\n    }\n\n    var data = {\n      key: key,\n      scope: scope,\n      value: value\n    };\n    var url = _this.REST_API + \"Var/\";\n    checkLogin().then(function (res) {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(getToken())\n        }\n      }).then(function (res) {\n        if (callback) {\n          callback(res);\n        }\n      });\n    });\n  });\n\n  _defineProperty(this, \"post\", function (scope, name, key, value) {\n    var callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n    var url = _this.REST_API + scope + \"/\" + name + \"/\";\n\n    if (name === undefined) {\n      url = _this.REST_API + scope + \"/\";\n    }\n\n    checkLogin().then(function (res) {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          key: key,\n          data: value\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(getToken())\n        }\n      }).then(function (res) {\n        if (callback) {\n          res.json().then(function (data) {\n            callback(data, res);\n          });\n        }\n      });\n    });\n  });\n\n  _defineProperty(this, \"upload\", function (packageName, key, value) {\n    var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    var url = \"\".concat(_this.REST_API, \"upload/\").concat(packageName, \"/\");\n    var formData = new FormData();\n    formData.append(\"name\", key);\n    formData.append(\"data\", value);\n    fetch(url, {\n      method: \"POST\",\n      body: formData\n    }).then(function (res) {\n      return res.json();\n    }).then(callback);\n  });\n\n  _defineProperty(this, \"put\", function (scope, name, value) {\n    var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    var url = _this.REST_API + scope + \"/\" + name + \"/\";\n    console.log(\"database put\", url);\n\n    if (name === undefined) {\n      url = _this.REST_API + scope + \"/\";\n    }\n\n    checkLogin().then(function (res) {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"PUT\",\n        body: JSON.stringify(value),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(getToken())\n        }\n      }).then(function (res) {\n        if (callback) {\n          res.json().then(function (data) {\n            callback(data, res);\n          })[\"catch\"](function (e) {\n            callback(undefined, res);\n\n            if (true) {\n              alert(\"Development Mode \\n\" + \"Status: \" + res.status + \"\\n\" + \"Error: \" + res.statusText);\n            }\n          });\n        }\n      });\n    });\n  });\n\n  _defineProperty(this, \"delete\", function (scope, name) {\n    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var url = _this.REST_API + scope + \"/\" + name + \"/\";\n\n    if (name === undefined) {\n      url = _this.REST_API + scope + \"/\";\n      return;\n    }\n\n    checkLogin().then(function (res) {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"DELETE\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(getToken())\n        }\n      }).then(function (res) {\n        if (callback) {\n          res.json().then(function (data) {\n            callback(data, res);\n          })[\"catch\"](function (e) {\n            callback(undefined, res);\n\n            if (true) {\n              alert(\"Development Mode \\n\" + \"Status: \" + res.status + \"\\n\" + \"Error: \" + res.statusText);\n            }\n          });\n        }\n      });\n    });\n  });\n\n  _defineProperty(this, \"cloudFunction\", function (cloudFunction) {\n    var func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    var args = arguments.length > 2 ? arguments[2] : undefined;\n    var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    checkLogin().then(function (res) {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      var url = _this.REST_API + \"function/\" + cloudFunction + \"/\";\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          func: func,\n          args: args\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(getToken())\n        }\n      }).then(function (res) {\n        if (callback) {\n          res.json().then(function (data) {\n            return callback(data);\n          });\n        }\n      });\n    });\n  });\n\n  _defineProperty(this, \"postTabs\", function (name, value) {\n    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    var scope = \"User\";\n    var url = _this.REST_API + scope + \"/\" + name + \"/\";\n\n    if (name === undefined) {\n      url = _this.REST_API + scope + \"/\";\n      return;\n    }\n\n    var newValue = value.map(function (obj) {\n      return {\n        componentName: obj.componentName,\n        name: obj.name\n      };\n    });\n    var key_workspace = {\n      Workspace: \"*\"\n    };\n    checkLogin().then(function (res) {\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          key: key_workspace,\n          data: newValue\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(getToken())\n        }\n      }).then(function (res) {\n        if (callback) {\n          res.json().then(function (data) {\n            callback(data, res);\n          })[\"catch\"](function (e) {\n            callback(undefined, res);\n\n            if (true) {\n              alert(\"Development Mode \\n\" + \"Status: \" + res.status + \"\\n\" + \"Error: \" + res.statusText);\n            }\n          });\n        }\n      });\n    });\n  });\n\n  this.host = \"\".concat(window.location.hostname, \":\").concat(window.location.port);\n  this.WS_API = \"ws://\" + this.host + \"/ws/subscriber\";\n  this.REST_API = \"http://\" + this.host + \"/api/v1/\";\n  this.callbacks = {};\n  this.evt_callbacks = {};\n  this.timeout = 3000;\n  this.websocket = undefined;\n  this.connect();\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Database);\n\n//# sourceURL=webpack://Movai/./src/Database/Database.js?");

/***/ }),

/***/ "./src/Utils/Utils.js":
/*!****************************!*\
  !*** ./src/Utils/Utils.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var monet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! monet */ \"./node_modules/monet/dist/monet.js\");\n/* harmony import */ var monet__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(monet__WEBPACK_IMPORTED_MODULE_0__);\n\nvar Utils = {};\n\nUtils.ofNull = function (x) {\n  return monet__WEBPACK_IMPORTED_MODULE_0__[\"Maybe\"].fromNull(x);\n};\n\nUtils.range = function (init, end) {\n  var ans = [];\n\n  for (var i = 0; i < end; i++) {\n    ans.push(i);\n  }\n\n  return ans;\n};\n\nUtils.randomInt = function (a, b) {\n  return Math.floor(Utils.random(a, b));\n};\n\nUtils.random = function (a, b) {\n  return a + (b - a) * Math.random();\n};\n\nUtils.normalizeStr = function (str) {\n  // from https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n  return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n};\n/**\n *\n * @param {*} array\n * @param {*} groupFunction : function x => group class;\n *\n * Usage example:\n *\n * groupBy([1,2,3,4,5,6,7,8,9], x => x % 3) // {0: [3,6,9], 1:[1,4,7], 2:[2,5,8]}\n */\n\n\nUtils.groupBy = function (array, groupFunction) {\n  var ans = {};\n  array.forEach(function (x) {\n    var key = groupFunction(x);\n    if (!ans[key]) ans[key] = [];\n    ans[key].push(x);\n  });\n  return ans;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Utils);\n\n//# sourceURL=webpack://Movai/./src/Utils/Utils.js?");

/***/ })

/******/ });
});