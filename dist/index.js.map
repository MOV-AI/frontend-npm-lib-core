{"version":3,"sources":["webpack://Movai/webpack/universalModuleDefinition","webpack://Movai/webpack/bootstrap","webpack://Movai/external \"@babel/runtime/helpers/esm/defineProperty\"","webpack://Movai/external \"@babel/runtime/helpers/esm/classCallCheck\"","webpack://Movai/external \"@babel/runtime/helpers/esm/createClass\"","webpack://Movai/external \"@babel/runtime/regenerator\"","webpack://Movai/external \"lodash\"","webpack://Movai/external \"@babel/runtime/helpers/esm/assertThisInitialized\"","webpack://Movai/external \"@babel/runtime/helpers/esm/asyncToGenerator\"","webpack://Movai/external \"rxjs\"","webpack://Movai/external \"@babel/runtime/helpers/esm/slicedToArray\"","webpack://Movai/external \"jwt-decode\"","webpack://Movai/external \"monet\"","webpack://Movai/external \"@babel/runtime/helpers/esm/getPrototypeOf\"","webpack://Movai/external \"@babel/runtime/helpers/esm/typeof\"","webpack://Movai/external \"@babel/runtime/helpers/esm/inherits\"","webpack://Movai/external \"@babel/runtime/helpers/esm/possibleConstructorReturn\"","webpack://Movai/./src/Authentication/Authentication.js","webpack://Movai/./src/Utils/constants.js","webpack://Movai/./src/Utils/Utils.js","webpack://Movai/./src/BroadcastChannel/BroadcastChannel.js","webpack://Movai/./src/AuthWebSocket/AuthWebSocket.js","webpack://Movai/./src/Database/WSSub.js","webpack://Movai/./src/Database/MasterDB.js","webpack://Movai/./src/Rest/RestBase.js","webpack://Movai/./src/Rest/WithAuth.js","webpack://Movai/./src/Rest/Rest.js","webpack://Movai/./src/RobotManager/Robot.js","webpack://Movai/./src/RobotManager/RobotManager.js","webpack://Movai/./src/Database/Database.js","webpack://Movai/./src/Style/Style.js","webpack://Movai/./resources/fonts/icomoon.woff","webpack://Movai/./src/UndoManager/UndoManager.js","webpack://Movai/./src/Clipboard/Clipboard.js","webpack://Movai/./src/User/User.js","webpack://Movai/./src/Database/Models/BaseModel.js","webpack://Movai/./src/Database/Manager/DataManagerBase.js","webpack://Movai/./src/Document/DocumentV1.js","webpack://Movai/./src/Document/DocumentV2.js","webpack://Movai/./src/Document/Document.js","webpack://Movai/./src/Workspace/Workspace.js","webpack://Movai/./src/Snapshot/Snapshot.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Authentication","message","this","statusText","token","localStorage","getItem","refreshToken","getToken","jwtDecode","auth_token","refresh_token","getRefreshToken","error","access_token","login","username","password","remember","a","removeItem","sessionStorage","headers","fetch","method","body","JSON","stringify","response","status","contentType","includes","json","data","setItem","toString","logout","redirect","location","replace","origin","checkLogin","tokenRemember","sessionFlag","tokenData","Date","getTime","BROADCAST_EVENTS","ISOPEN","RPL_ISOPEN","OPENDOC","RPL_OPENDOC","LOGGER_STATUS","Utils","x","Maybe","fromNull","prop","obj","f","g","dot","ofNull","init","end","map","e","orSome","ans","j","push","b","Math","floor","random","str","normalize","toLowerCase","array","groupFunction","forEach","charAt","toUpperCase","slice","prefix","keys","reduce","acc","k","pre","length","assign","flattenObject","BroadcastChannel","appName","event","callback","subscribed_events","console","log","target","instance","postMessage","msgId","randomGuid","source","close","messageData","onmessage","_onMessage","AuthException","AuthWebSocket","url","wsUrl","onOpen","onClose","onError","onMessage","connectionHandler","evt","connected","socket","timerId","clearTimeout","setTimeout","createSocket","_onOpen","_onClose","_onError","_connectionHandler","sock","then","res","URL","params","URLSearchParams","search","set","WebSocket","onopen","onerror","onclose","send","self","sub_interval","undefined","setInterval","readyState","clearInterval","WSSUB_STATES","CONNECTION","WSSub","options","timeout","Promise","race","_","reject","Error","websocket","CLOSED","onAuthError","connect","CONNECTING","RECONN_TIMEOUT","pattern","getOrCreate","pushCallback","sub_callbacks","command","_sufix","_pattern","evt_callbacks","retry","RETRIES","getState","OPEN","RESEND_TIMEOUT","is_command","_map","_callbacks","cb","reSubscribe","dispatch","code","NORMAL_CLOSE_EVT","reConnect","msg","parse","values","commands","LIST","EXECUTE","patterns","_prefix","onOnline","onOffline","connectionCheckTimeout","checkConnection","RECONN_VALIDATION_TIMEOUT","connectionPromise","connectionState","err","evt_callback","SUBSCRIBE","fmtMessage","initSocket","addSubscriberCallback","addEventCallback","Array","from","UNSUBSCRIBE","remote_callback","is_pattern","one_shot","resolve","scope","split","REST_API","Authorization","fetchTimeout","packageName","formData","FormData","append","cloudFunction","func","args","result","newValue","componentName","key_workspace","Workspace","isHttps","protocol","host","hostname","port","Map","MasterDB","RestBase","output","entries","encodeURIComponent","path","encodeURI","customHeaders","requestUrl","getUrl","payload","ok","_request","post","cbName","fn","validScope","validKey","validateVar","Rest","props","handler","__checkLogin","Reflect","Proxy","withAuth","Robot","id","ip","logs","logger","time","logSubscriptions","onGetIPCallback","propValue","onLoad","onUpdate","subscribe","Scope","SCOPE","Name","update","unsubscribe","_loadIP","_getLogs","subscriptionId","Util","startLogger","stopLogger","_enqueueNextRequest","robot","IP","RobotManager","randomId","robots","cachedRobots","subscribeToRedis","RobotName","newRobot","cached","Database","WS_API","callbacks","event_name","_send","Style","UndoManager","size","undoStack","Queue","redoStack","undoAbleAction","doAction","paramsObject","pop","undoAction","UndoAbleActionBuilder","_doAction","_undoAction","lambda","some","queue","el","shift","Clipboard","_data","copyKey","inst","write","read","User","baseUrl","currTime","timestamp","TIMEOUT","getData","Superuser","getTokenData","BaseModel","manager","model","database","_subscribe","db","_onDataChange","_onDataLoad","default_pattern","_patterns","isArray","_cache","add","new_obj","lodash","isEmpty","omit","up_path","removeEmpty","join","entry","_get_or_create","remove","merge","_subject","next","nr_patterns","db_state","db_states","ready","_subject_state","freeze","loading","Subject","BehaviorSubject","_db_state","_validatePatterns","_initialize","complete","DataManagerBase","models","_subscribeModelsReady","onReady","_setModelReady","isReady","subscribeTo","DocumentV1","type","workspace","version","_parseArgs","subscriber","_workspace","_type","_name","_version","apiVersion","put","resubscribe","readOnly","destroy","_init","Label","DocumentV2","trgWorkspace","Snapshot","srcWorkspace","getAll","_scope","_id","withDocVersion","docVersion","v1","v2","Document","_path","dtype","spl","_create","src","createByRef"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,IARlB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,I,gBClFrDtC,EAAOD,QAAUwC,QAAQ,8C,cCAzBvC,EAAOD,QAAUwC,QAAQ,8C,cCAzBvC,EAAOD,QAAUwC,QAAQ,2C,cCAzBvC,EAAOD,QAAUwC,QAAQ,+B,cCAzBvC,EAAOD,QAAUwC,QAAQ,W,cCAzBvC,EAAOD,QAAUwC,QAAQ,qD,cCAzBvC,EAAOD,QAAUwC,QAAQ,gD,cCAzBvC,EAAOD,QAAUwC,QAAQ,S,cCAzBvC,EAAOD,QAAUwC,QAAQ,6C,cCAzBvC,EAAOD,QAAUwC,QAAQ,e,cCAzBvC,EAAOD,QAAUwC,QAAQ,U,cCAzBvC,EAAOD,QAAUwC,QAAQ,8C,cCAzBvC,EAAOD,QAAUwC,QAAQ,sC,cCAzBvC,EAAOD,QAAUwC,QAAQ,wC,cCAzBvC,EAAOD,QAAUwC,QAAQ,yD,y4BCEnBC,EAAiB,CAEvBA,cAA+B,SAAUC,GACvCC,KAAKD,QAAUA,EACfC,KAAKC,WAAaF,EAClBC,KAAK5B,KAAO,iBAGd0B,SAA0B,WACxB,IAAMI,EAAQzC,OAAO0C,aAAaC,QAAQ,eAC1C,OAAOF,IAAgB,GAGzBJ,gBAAiC,WAC/B,IAAMO,EAAe5C,OAAO0C,aAAaC,QAAQ,sBACjD,OAAOC,IAA8B,GAGvCP,aAA8B,WAC5B,IACE,IAAMI,EAAQJ,EAAeQ,WAW7B,MARkB,CAChBP,QAHcQ,IAAUL,GAAOH,QAI/BS,YAAY,EACZC,cAAeX,EAAeY,kBAC9BC,OAAO,EACPC,aAAcV,GAIhB,MAAOS,GACP,MAAO,CACLZ,QAAS,GACTY,OAAO,MAKbb,EAAee,MAAf,+BAAuB,WAAOC,EAAUC,EAAUC,GAA3B,uBAAAC,EAAA,6DAErBxD,OAAO0C,aAAae,WAAW,eAC/BzD,OAAO0C,aAAae,WAAW,sBAC/BzD,OAAO0C,aAAae,WAAW,uBAC/BzD,OAAO0D,eAAeD,WAAW,kBAE7BE,EAAU,IACN,gBAAkB,mBARL,kCAaIC,MAbJ,eAae,CAChCC,OAAQ,OACRF,UACAG,KAAMC,KAAKC,UAAU,CACnBX,SAAUA,EACVC,SAAUA,EACVC,SAAUA,MAnBK,WAabU,EAba,OAuBXC,EAAWD,EAAXC,OACFC,EAAcF,EAASN,QAAQ1C,IAAI,kBACtBkD,GAAeA,EAAYC,SAAS,qBAzBpC,kCA4BPH,EAASI,OA5BF,iDA6Bb,CAAEnB,MAAOe,EAASzB,YA7BL,eA0Bf8B,EA1Be,KA+BJ,MAAXJ,IACFlE,OAAO0C,aAAa6B,QAAQ,cAAeD,EAAI,cAC/CtE,OAAO0C,aAAa6B,QAAQ,qBAAsBD,EAAI,eACtDtE,OAAO0C,aAAa6B,QAClB,sBACY,aAAZhB,GAAkCA,GAEpCvD,OAAO0D,eAAea,QAAQ,iBAAiB,IAtC9B,kBAyCZD,GAzCY,2DA4CZ,CAAEpB,MAAO,KAAEsB,aA5CC,0DAAvB,0DAgDAnC,EAAeoC,OAAS,SAAAC,GACtB1E,OAAO0C,aAAae,WAAW,eAC/BzD,OAAO0C,aAAae,WAAW,sBAC/BzD,OAAO0C,aAAae,WAAW,uBAC/BzD,OAAO0D,eAAeD,WAAW,iBACjCzD,OAAO2E,SAASC,QAAQF,GAAY1E,OAAO2E,SAASE,SAGtDxC,EAAeyC,WAAf,cAA4B,8CAAAtB,EAAA,yDACpBf,EAAQzC,OAAO0C,aAAaC,QAAQ,eACpCC,EAAe5C,OAAO0C,aAAaC,QAAQ,sBAC3CoC,EAAgB/E,OAAO0C,aAAaC,QAAQ,uBAC5CqC,EAAchF,OAAO0D,eAAef,QAAQ,iBAEpC,OAAVF,GAAmC,OAAjBG,EANI,0CAOjB,GAPiB,OAUtBqC,EAAY,KAVU,SAYxBA,EAAYnC,IAAUL,GAZE,4EAcjB,GAdiB,aAkBtBwC,EAAS,KAAU,IAAIC,MAAOC,UAAY,KAlBpB,2CAmBjB,GAnBiB,WAuBL,SAAjBJ,GAA4C,OAAhBC,EAvBN,wBAwBxB3C,EAAeoC,SAxBS,mBAyBjB,GAzBiB,YA6BtB7B,EA7BsB,gCAiCGE,IAAUF,GACf,KAAU,IAAIsC,MAAOC,UAAY,KAlC/B,sBAmCd,4BAnCc,gCAuChBxB,EAAU,CAAE,eAAgB,oBAvCZ,UAwCCC,MAxCD,kBAwCY,CAChCC,OAAQ,OACRF,UACAG,KAAMC,KAAKC,UAAU,CAAEvB,MAAOG,MA3CV,WAwChBqB,EAxCgB,OA8CdC,EAAWD,EAAXC,OACFC,EAAcF,EAASN,QAAQ1C,IAAI,kBACtBkD,GAAeA,EAAYC,SAAS,qBAhDjC,kCAmDVH,EAASI,OAnDC,iDAoDhB,KApDgB,WAiDlBC,EAjDkB,KAsDP,MAAXJ,IAAkBI,EAtDA,wBAuDpBtE,OAAO0C,aAAa6B,QAAQ,cAAeD,EAAI,cAC/CtE,OAAO0C,aAAa6B,QAClB,qBACAD,EAAI,eA1Dc,mBA4Db,GA5Da,6FAmEnB,GAnEmB,kEAsEbjC,QCvKF+C,EAAmB,CAC9BC,OAAQ,SACRC,WAAY,aACZC,QAAS,UACTC,YAAa,eAIFC,EACL,EADKA,EAEF,EAFEA,EAGH,E,yDCVJC,EAAQ,CAEdA,OAAe,SAAAC,GAAC,OAAIC,QAAMC,SAASF,IAEnCD,OAAe,SAAAI,GAAI,OAAI,SAAAC,GAAG,OAAIA,EAAID,KAElCJ,IAAY,SAAAM,GAAC,OAAI,SAAAC,GAAC,OAAI,SAAAN,GAAC,OAAIK,EAAEC,EAAEN,OAE/BD,SAAiB,SAAAI,GAAI,OAAIJ,EAAMQ,IAAIR,EAAMS,OAAhBT,CAAwBA,EAAM9E,OAAOkF,KAE9DJ,MAAc,SAACU,EAAMC,GAKnB,IAJA,MAAiBT,QAAMC,SAASQ,GAC7BC,KAAI,SAAAX,GAAC,MAAK,CAAEvF,EAAGgG,EAAMG,EAAGF,MACxBG,OAAO,CAAEpG,EAAG,EAAGmG,EAAGH,IAFbhG,EAAR,EAAQA,EAAGmG,EAAX,EAAWA,EAGLE,EAAM,GACHC,EAAItG,EAAGsG,EAAIH,EAAGG,IAAKD,EAAIE,KAAKD,GACrC,OAAOD,GAGTf,UAAkB,SAAClC,EAAGoD,GAAJ,OAAUC,KAAKC,MAAMpB,EAAMqB,OAAOvD,EAAGoD,KAEvDlB,OAAe,SAAClC,EAAGoD,GACjB,MAAsBhB,QAAMC,SAASe,GAClCN,KAAI,SAAAX,GAAC,MAAK,CAAES,KAAM5C,EAAG6C,IAAKO,MAC1BJ,OAAO,CAAEJ,KAAM,EAAGC,IAAK7C,IAFlB4C,EAAR,EAAQA,KAGR,OAAOA,GAHP,EAAcC,IAGOD,GAAQS,KAAKE,UAGpCrB,aAAqB,SAAAsB,GAEnB,OAAOA,EACJC,UAAU,OACVrC,QAAQ,mBAAoB,IAC5BsC,eAYLxB,QAAgB,SAACyB,EAAOC,GACtB,IAAMX,EAAM,GAMZ,OALAU,EAAME,SAAQ,SAAA1B,GACZ,IAAMhE,EAAMyF,EAAczB,GACrBc,EAAI9E,KAAM8E,EAAI9E,GAAO,IAC1B8E,EAAI9E,GAAKgF,KAAKhB,MAETc,GAITf,WAAmB,SAAAvD,GACjB,MAAiB,iBAANA,EAAuB,GAC3BA,EAAEmF,OAAO,GAAGC,cAAgBpF,EAAEqF,MAAM,IAM7C9B,IAAY,SAACC,EAAG9D,GAAJ,OAAY8D,EAAI9D,EAAKA,GAAKA,GAMtC6D,cAAsB,SAACK,GAAD,IAAM0B,EAAN,uDAAe,GAAf,OACpB3G,OAAO4G,KAAK3B,GAAK4B,QAAO,SAACC,EAAKC,GAC5B,IAAMC,EAAML,EAAOM,OAASN,EAAS,IAAM,GAM3C,MAJsB,WAAlB,IAAO1B,EAAI8B,IACb/G,OAAOkH,OAAOJ,EAAKlC,EAAMuC,cAAclC,EAAI8B,GAAIC,EAAMD,IAClDD,EAAIE,EAAMD,GAAK9B,EAAI8B,GAEjBD,IACN,KAOLlC,WAAmB,WACjB,MAAO,uCAAuCd,QAAQ,SAAS,SAAUnE,GAEvE,IAAIS,EAAqB,GAAhB2F,KAAKE,SAAiB,EAE/B,OADY,MAANtG,EAAYS,EAAS,EAAJA,EAAW,GACzBsD,SAAS,SAIPkB,IClBAwC,EA5Eb,WAAYC,GAAS,6CAeT,SAACC,EAAOC,GACd,EAAKC,kBAAkBrG,eAAemG,KAC1C,EAAKE,kBAAkBF,GAASC,EAChCE,QAAQC,IAAI,gCAAiCJ,OAlB1B,wBA0BP,SAAAA,GACP,EAAKE,kBAAkBrG,eAAemG,YACpC,EAAKE,kBAAkBF,GAC9BG,QAAQC,IAAI,kCAAmCJ,OA7B5B,wBAuCP,YAA6B,IAA1BA,EAA0B,EAA1BA,MAAOK,EAAmB,EAAnBA,OAAQnE,EAAW,EAAXA,KAC9BiE,QAAQC,IAAI,kCAAmCC,GAC/C,EAAKC,SAASC,YAAY,CACxBC,MAAOlD,EAAMmD,aACbT,MAAOA,EACPU,OAAQ,EAAKX,QACbM,OAAQA,EACRnE,KAAMA,GAAQ,QA9CG,kBAqDb,WACN,EAAKoE,SAASK,QACdR,QAAQC,IAAI,6BAA8B,EAAKL,YAvD5B,uBAgER,SAAA7F,GACX,IAAM0G,EAAc1G,EAAQgC,KAEvB,EAAKgE,kBAAkBrG,eAAe+G,EAAYZ,QAEnDY,EAAYP,SAAW,EAAKN,UAEhC,EAAKG,kBAAkBU,EAAYZ,OAAOY,GAC1CT,QAAQC,IAAI,oCAAqCQ,EAAYF,YAvE7DvG,KAAK4F,QAAUA,EACf5F,KAAK+F,kBAAoB,GACzB/F,KAAKmG,SAAW,IAAI1I,OAAOkI,iBAAiB,WAC5C3F,KAAKmG,SAASO,UAAY1G,KAAK2G,WAC/BX,QAAQC,IAAI,6BAA8BjG,KAAK4F,U,gBCN3CrD,EAAwCzC,EAAxCyC,WAAYjC,EAA4BR,EAA5BQ,SAAUsG,EAAkB9G,EAAlB8G,cAETC,E,WACnB,cAOG,eANDC,WAMC,MANK9G,KAAK+G,MAMV,MALDC,cAKC,MALQ,KAKR,MAJDC,eAIC,MAJS,KAIT,MAHDC,eAGC,MAHS,KAGT,MAFDC,iBAEC,MAFW,KAEX,MADDC,yBACC,MADmB,KACnB,kCAcO,SAAAC,GACRrB,QAAQC,IAAI,gBAAiBoB,MAf5B,qBAkBQ,SAAAA,GACTrB,QAAQC,IAAI,iBAAkBoB,GAE9B,EAAKC,WAAY,EAGjB,EAAKC,OAAS,KACV,EAAKC,SACPC,aAAa,EAAKD,SAEpB,EAAKA,QAAUE,YAAW,WACxB,EAAKC,iBACJ,QA9BF,qBAiCQ,SAAAN,GACT,EAAKC,WAAY,EACjBtB,QAAQC,IAAI,iBAAkBoB,MAnC7B,uBAsCU,SAAAA,GACXrB,QAAQC,IAAI,mBAAoBoB,MAvC/B,+BA0CkB,SAAAvI,GACnBkH,QAAQC,IAAI,wCAAyCnH,MA1CrDkB,KAAKgH,OAAoB,OAAXA,EAAkBhH,KAAK4H,QAAUZ,EAC/ChH,KAAKiH,QAAsB,OAAZA,EAAmBjH,KAAK6H,SAAWZ,EAClDjH,KAAKkH,QAAsB,OAAZA,EAAmBlH,KAAK8H,SAAWZ,EAClDlH,KAAKmH,UAA0B,OAAdA,EAAqBnH,KAAK2G,WAAaQ,EACxDnH,KAAKoH,kBACmB,OAAtBA,EAA6BpH,KAAK+H,mBAAqBX,EAEzDpH,KAAK+G,MAAQD,EACb9G,KAAKuH,QAAS,EACdvH,KAAKwH,SAAU,EACfxH,KAAKsH,WAAY,E,wCAmCnB,WAA0B,WAAbR,EAAa,wDACpBkB,GAAO,EAEXzF,IACG0F,MAAK,SAAAC,GACJ,IAAKA,EACH,MAAM,IAAItB,EAAc,eAG1BE,GAAc,IAARA,EAAgBA,EAAM,EAAKC,MAGjC,IAAIA,EAAQ,IAAIoB,IAAIrB,GAChBsB,EAAS,IAAIC,gBAAgBtB,EAAMuB,OAAOrD,MAAM,IACpDmD,EAAOG,IAAI,QAASjI,KACpByG,EAAMuB,OAASF,GAEfJ,EAAO,IAAIQ,UAAUzB,EAAM9E,aACtBwG,OAAS,EAAKzB,OACnBgB,EAAKU,QAAU,EAAKxB,QACpBc,EAAKW,QAAU,EAAK1B,QACpBe,EAAKtB,UAAY,EAAKS,UAEtB,EAAKI,OAASS,KApBlB,OAsBS,SAAAhE,GACU,kBAAXA,EAAE5F,MACJ,EAAKgJ,mBAAkB,Q,kBAK/B,SAAKrF,GAAM,WACTQ,IACG0F,MAAK,SAAAC,GACJ,IAAKA,EACH,MAAM,IAAItB,EAAc,eAG1B,EAAKW,OAAOqB,KAAK7G,MANrB,OAQS,SAAAiC,GACL,OAAQA,EAAE5F,MACR,IAAK,gBACH,EAAKgJ,mBAAkB,GACvB,MAEF,IAAK,oBAEH,IAAIyB,EAAO,EACPC,OAAeC,EACnBD,EAAeE,aACb,WACiC,IAA3BH,EAAKtB,OAAO0B,aACdC,cAAcJ,GACdD,EAAKtB,OAAOqB,KAAK7G,MAGrB,IACA+G,S,mBAOZ,WACM9I,KAAKuH,SACPvH,KAAKuH,OAAOf,QACZiB,aAAazH,KAAKwH,SAClBxH,KAAKsH,WAAY,O,mOC9HvB,IAAQhH,EAAwCR,EAAxCQ,SAAUsG,EAA8B9G,EAA9B8G,cAAerE,EAAezC,EAAfyC,WAE3B4G,EAEE,EAFFA,EAGQ,EAHRA,EAIE,EAJFA,EAKI,EAGJC,EACI,EADJA,EAEK,EAgxBIC,EAzwBb,aAAc,gDA+BC,SAACvC,EAAKwC,GAA4B,IAAnBC,EAAmB,uDAAT,IACtC,OAAOC,QAAQC,KAAK,CAClBpI,MAAMyF,EAAKwC,GACX,IAAIE,SAAQ,SAACE,EAAGC,GAAJ,OACVjC,YAAW,WACTiC,EAAO,IAAIC,MAAM,cAChBL,WArCK,qBA8CH,WAAM,QACf,OAAO,YAAKM,iBAAL,mBAAgBtC,cAAhB,eAAwB0B,aAAcT,UAAUsB,UA/C3C,uBAsDD,WACX,GAAI,EAAKD,UAAW,OAAO,EAC3B,EAAKlI,OAASwH,EAEd,IAAQrC,EAA0D,EAA1DA,IAAKE,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,UAAW4C,EAAgB,EAAhBA,YAalD,OAVA,EAAKF,UAAY,IAAIhD,EAAc,CACjCC,MACAE,SACAC,UACAC,UACAC,YACAC,kBAAmB2C,IAGrB,EAAKC,UACE,KAvEK,oBA6EJ,WAIR,OAHA,EAAKrI,OAASwH,EACd,EAAKU,UAAUlC,eAER,KAjFK,sBAuFF,WACV,IAAQsC,EAAqBd,EAEzB,CAACc,EAFwBd,GAENtH,SAAS,EAAKF,UAErC,EAAKA,OAASsI,EAEdvC,WAAW,EAAKsC,QAAS,EAAKE,oBA9FlB,wBAwGA,SAACnG,EAAKoG,GAClB,OAAOpG,EAAIrF,IAAIyL,IAAYpG,EAAIwE,IAAI4B,EAAS,IAAIzL,IAAIyL,MAzGxC,yBAkHC,SAACpG,EAAKoG,EAASrE,GAG5B,OAFA,EAAKsE,YAAYrG,EAAKoG,GAAS/F,KAAK0B,GAE7B,KArHK,kCA6HU,SAACA,EAAUqE,GACjC,MAAwB,mBAAbrE,EAAgC,EAEpC,EAAKuE,aAAa,EAAKC,cAAeH,EAASrE,MAhI1C,6BAyIK,SAACyE,EAASzE,EAAUqE,GACrC,GAAwB,mBAAbrE,EAAyB,OAAO,EAE3C,IAAM0E,EAASL,EAAU,IAAH,OAAOA,GAAY,GACnCM,EAAW,GAAH,OAAMF,GAAN,OAAgBC,GAE9B,OAAO,EAAKH,aAAa,EAAKK,cAAeD,EAAU3E,MA/I3C,iBAsJP,SAAC/F,GAAuB,IAAd4K,EAAc,uDAAN,EACvB,IAEE,GAAIA,GAAS,EAAKC,QAAS,MAAM,IAAIhB,MAAM,2BAG3C,EAAKiB,aAAerC,UAAUsC,KAC1BpD,WAAW,EAAKkB,KAAM,EAAKmC,eAAgBhL,EAAS4K,EAAQ,GAC5D,EAAKd,UAAUjB,KAAKpH,KAAKC,UAAU1B,IACvC,MAAOY,GACPqF,QAAQrF,MAAMA,OAhKJ,qBA0KH,SAACwJ,GAAwC,IAA/Ba,IAA+B,yDAAZjL,EAAY,uCAC5CkL,EAAOD,EAAa,EAAKN,cAAgB,EAAKJ,cAC9CY,EAAaD,EAAKvM,IAAIyL,IAAY,GAExCe,EAAWpG,SAAQ,SAAAqG,GACjBzD,WAAWyD,EAAI,EAAGpL,MAGhBiL,GAAYC,EAAI,OAAQd,MAlLhB,uBA0LD,SAACtE,EAAOsE,GAAR,MAAqB,CAAEtE,QAAOsE,cA1L7B,mBA+LL,SAAA9C,GACP,EAAK1F,OAASwH,EAGd,EAAKiC,cACL,EAAKC,SAAS,aApMF,oBA0MJ,SAAAhE,GACR,EAAKgE,SAAS,WACd,EAAK1J,OAASwH,EAGV9B,EAAIiE,OAAS,EAAKC,kBACpB,EAAKC,eAhNK,oBAuNJ,SAAAnE,GACR,EAAKgE,SAAS,cAxNF,wBA8NA,WAEZ,EAAKG,eAhOO,sBAsOF,SAAAC,GACV,IACE,IAAM1J,EAAOP,KAAKkK,MAAMD,EAAI1J,MAC5B,GAAIA,EAAKpB,MAAO,MAAM,IAAIiJ,MAAM7H,EAAKpB,OAErC,IAAQkF,EAAU9D,EAAV8D,MACFmF,EAAazM,OAAOoN,OAAO,EAAKC,UAAU/J,SAASgE,GACzD,EAA0B,EAAK+F,UAEV,CAFrB,EAAQC,KAAR,EAAcC,SAEuBjK,SAASgE,GAC1C,CAACA,GACD9D,EAAKgK,UAEIjH,SAAQ,SAAAqF,GACnB,IAAM6B,EAAUhB,EAAa,GAAH,OAAMnF,EAAN,KAAiB,GACrC4E,EAAW,GAAH,OAAMuB,GAAN,OAAgBxK,KAAKC,UAAU0I,IAE7C,EAAKkB,SAASZ,EAAUO,EAAYjJ,MAEtC,MAAOpB,GACPqF,QAAQrF,MAAMA,OA1PJ,8BAuQM,YAGd,QAFJsL,gBAEI,MAFO,EAAKA,SAEZ,MADJC,iBACI,MADQ,EAAKA,UACb,EAUJ,OATA,EAAKD,SAAWA,EAChB,EAAKC,UAAYA,EAEjBhD,cAAc,EAAKiD,wBACnB,EAAKA,uBAAyBnD,YAC5B,EAAKoD,gBACL,EAAKC,2BAGA,KApRK,4BA2RI,WAEhB,IAAMC,EAAoB,EAAKF,kBAQ/B,OANAlD,cAAc,EAAKiD,wBACnB,EAAKA,uBAAyBnD,YAC5B,EAAKoD,gBACL,EAAKC,2BAGAC,KArSK,4BA4SI,WAChB,OAAOjL,MAAM,iBAAkB,CAC7BC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEvB,MAAO,OAE7B+H,MAAK,SAAAC,GACA,EAAKqE,kBAAoBnD,IAC7B,EAAKmD,gBAAkBnD,EACvB,EAAK6C,eAPF,OASE,SAAAO,GACD,EAAKD,kBAAoBnD,IAC7B,EAAKmD,gBAAkBnD,EACvB,EAAK8C,mBAzTG,sBAoUF,SAAC/B,EAASrE,EAAU2G,GAC9B,IAAQC,EAAc,EAAKd,SAAnBc,UACF3M,EAAU,EAAK4M,WAAWD,EAAWvC,GACrCM,EAAWjJ,KAAKC,UAAU0I,GAEhC,EAAKyC,aACFC,sBAAsB/G,EAAU2E,GAChCqC,iBAAiBJ,EAAWD,EAAchC,GAC1C7B,KAAK7I,MA5UI,wBAkVA,WACZ,IAAQ2M,EAAc,EAAKd,SAAnBc,UAERK,MAAMC,KAAK,EAAK1C,cAAcnF,QAAQL,SAAQ,SAAA1F,GAC5C,IAAMW,EAAU,EAAK4M,WAAWD,EAAWlL,KAAKkK,MAAMtM,IACtD,EAAKwJ,KAAK7I,SAvVA,wBAiWA,SAACoK,EAASrE,GACtB,IAAQmH,EAAgB,EAAKrB,SAArBqB,YACFlN,EAAU,EAAK4M,WAAWM,EAAa9C,GACvCM,EAAWjJ,KAAKC,UAAU0I,GAEhC,EAAKyC,aACFE,iBAAiBG,EAAanH,EAAU2E,GACxC7B,KAAK7I,MAxWI,iBA+WP,SAAA0M,GACL,IAAQZ,EAAS,EAAKD,SAAdC,KACF9L,EAAU,EAAK4M,WAAWd,GAEhC,EAAKe,aAAaE,iBAAiBjB,EAAMY,GAAc7D,KAAK7I,MAnXhD,oBA4XJ,SAACmN,EAAiBnL,EAAM0K,GAChC,IAAQX,EAAY,EAAKF,SAAjBE,QACF/L,E,iWAAU,CAAH,CAAK8F,MAAOiG,EAAShG,SAAUoH,GAAoBnL,GAEhE,EAAK6K,aAAaE,iBAAiBhB,EAASW,GAAc7D,KAAK7I,MAhYnD,oBAwYJ,SAAC8F,EAAOC,GAChB,EAAK8G,aAAaE,iBAAiBjH,EAAOC,MAzY9B,kBA+YN,WACN,EAAK+D,UAAUrD,QACf,EAAKqD,UAAY,QAjZL,sBA0ZF,SAACM,EAASpI,EAAMoL,EAAYC,GACtC,OAAO,IAAI5D,SAAQ,SAAC6D,EAAS1D,GAC3B,EAAK0B,SAASlB,EAASpI,EAAMoL,EAAYC,GAEvCC,EAAQ,cA9ZA,mBAoaL,SAACjO,GAAgD,IAA3C0G,EAA2C,4DAAhCiD,EAAWuE,EAAqB,uDAAb,SAC3C,IAAK,CAAC,SAAU,SAASzL,SAASyL,GAChC,KAAM,0CAER,GAAc,UAAVA,GAEElO,EAAImO,MAAM,KAAK/H,OAAS,EAC1B,KAAM,yCAGV,IAAMsB,EAAM,EAAK0G,SAAW,YAAcF,EAAQ,IAAMlO,EAAM,IAE9DmD,IAAa0F,MAAK,SAAAC,GAChB7G,MAAMyF,GACHmB,MAAK,SAAAvG,GAAQ,OAAIA,EAASI,UAE1BmG,MAAK,SAAAlG,GACA+D,GACFA,EAAS/D,MALf,OAUS,SAAAiC,GACLgC,QAAQC,IAAIjC,YA5bN,mBAkcL,SAAC5E,EAAKN,GAAkD,IAA3CgH,EAA2C,4DAAhCiD,EAAWuE,EAAqB,uDAAb,SAClD,IAAK,CAAC,SAAU,SAASzL,SAASyL,GAChC,KAAM,0CAER,GAAc,UAAVA,EAAmB,CAENlO,EAAImO,MAAM,KACzB,GAAInO,EAAImO,MAAM,KAAK/H,OAAS,EAC1B,KAAM,yCAGV,IAAMzD,EAAO,CAAE3C,IAAKA,EAAKkO,MAAOA,EAAOxO,MAAOA,GACxCgI,EAAM,EAAK0G,SAAW,YAE5BjL,IAAa0F,MAAK,SAAAC,GAChB,IAAKA,EACH,MAAM,IAAItB,EAAc,eAG1BvF,MAAMyF,EAAK,CACTxF,OAAQ,OACRC,KAAMC,KAAKC,UAAUM,GACrBX,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,QAE1B2H,MAAK,SAAAC,GACFpC,GACFA,EAASoC,YA9dH,8CA0eR,WAAOpB,GAAP,2BAAA7F,EAAA,sDAAY6E,EAAZ,oCAAuBiD,EAC3BxG,IAAa0F,KAAb,+BAAkB,WAAMC,GAAN,SAAAjH,EAAA,yDACXiH,EADW,sBAER,IAAItB,EAAc,eAFV,OAIhB,EAAK8G,aAAa5G,EAAK,CACrBxF,OAAQ,MACRF,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,QAG1B2H,MAAK,SAAAC,GACApC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GACJ+D,EAAS/D,EAAMmG,MAHnB,OAKS,SAAAlE,GACL8B,OAASiD,EAAW/E,SAf9B,OAmBS,SAAAA,GAAC,OAAI8B,OAASiD,EAAW/E,MAvBlB,2CAAlB,uDADI,2CA1eQ,wEA+gBP,SAACsJ,EAAOlP,EAAMgB,EAAKN,GAAgC,IAAzBgH,EAAyB,4DAAdiD,EACtCjC,EAAM,EAAK0G,SAAWF,EAAQ,IAAMlP,EAAO,SAClC2K,IAAT3K,IACF0I,EAAM,EAAK0G,SAAWF,EAAQ,KAGhC/K,IAAa0F,MAAK,SAAAC,GAChB,IAAKA,EACH,MAAM,IAAItB,EAAc,eAG1BvF,MAAMyF,EAAK,CACTxF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAErC,IAAKA,EAAK2C,KAAMjD,IACvCsC,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,QAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GACJ+D,EAAS/D,EAAMmG,MAHnB,OAKS,SAAAlE,GACL8B,OAASiD,EAAW/E,eAziBlB,mBAgjBL,SAAC2J,EAAavO,EAAKN,GAAgC,IAAzBgH,EAAyB,4DAAdiD,EACtCjC,EAAM,GAAH,OAAM,EAAK0G,SAAX,kBAA6BG,EAA7B,KACHC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ1O,GACxBwO,EAASE,OAAT,OAAwBhP,GACxBuC,MAAMyF,EAAK,CACTxF,OAAQ,OACRC,KAAMqM,EACNxM,QAAS,CACPqM,cAAe,UAAF,OAAYnN,QAG1B2H,MAAK,SAAAC,GAAG,OAAIA,EAAIpG,UAChBmG,KAAKnC,MA7jBI,gBAwkBR,SAACwH,EAAOlP,EAAMU,GAAgC,IAAzBgH,EAAyB,4DAAdiD,EAChCjC,EAAM,EAAK0G,SAAWF,EAAQ,IAAMlP,EAAO,SAElC2K,IAAT3K,IACF0I,EAAM,EAAK0G,SAAWF,EAAQ,KAGhC/K,IAAa0F,MAAK,SAAAC,GAChB,IAAKA,EACH,MAAM,IAAItB,EAAc,eAG1BvF,MAAMyF,EAAK,CACTxF,OAAQ,MACRC,KAAMC,KAAKC,UAAU3C,GACrBsC,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,QAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GACJ+D,EAAS/D,EAAMmG,MAHnB,OAKS,SAAAlE,GACL8B,OAASiD,EAAWb,eAnmBlB,mBA8nBL,SAACoF,EAAOlP,GAA0C,IAApC0H,EAAoC,4DAAzBiD,EAAWhH,EAAc,uDAAP,GAC9C+E,EAAM,EAAK0G,SAAWF,EAAQ,IAAMlP,EAAO,SAClC2K,IAAT3K,EAKJmE,IAAa0F,MAAK,SAAAC,GAChB,IAAKA,EACH,MAAM,IAAItB,EAAc,eAG1BvF,MAAMyF,EAAK,CACTxF,OAAQ,SACRC,KAAMC,KAAKC,UAAUM,GACrBX,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,QAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GACJ+D,EAAS/D,EAAMmG,MAHnB,OAKS,SAAAlE,GACL8B,OAASiD,EAAWb,YAxB5BpB,EAAM,EAAK0G,SAAWF,EAAQ,OAjoBpB,0BAmrBE,SAACS,GAAyD,IAA1CC,EAA0C,uDAAnC,GAAIC,EAA+B,uCAAzBnI,EAAyB,4DAAdiD,EAC1D,OAAOxG,IAAa0F,MAAK,SAAAC,GACvB,IAAKA,EACH,MAAM,IAAItB,EAAc,eAG1B,IAAME,EAAM,EAAK0G,SAAW,YAAcO,EAAgB,IAC1D,OAAO1M,MAAMyF,EAAK,CAChBxF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEuM,KAAMA,EAAMC,KAAMA,IACzC7M,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,QAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GAAI,OAAI+D,EAAS/D,MAFzB,OAGS,SAAAiC,GACLgC,QAAQC,IAAI,sBAAuBjC,GACnC8B,EAAS,CAAEoI,QAAQ,EAAOvN,MAAOqD,gBAxsB/B,qBAwtBH,SAAC5F,EAAMU,GAAgC,IAAzBgH,EAAyB,4DAAdiD,EAC9BuE,EAAQ,OACRxG,EAAM,EAAK0G,SAAWF,EAAQ,IAAMlP,EAAO,IAC/C,QAAa2K,IAAT3K,EAAJ,CAIA,IAAI+P,EAAWrP,EAAMiF,KAAI,SAAAP,GACvB,MAAO,CAAE4K,cAAe5K,EAAI4K,cAAehQ,KAAMoF,EAAIpF,SAEjDiQ,EAAgB,CACpBC,UAAW,KAGb/L,IAAa0F,MAAK,SAAAC,GAChB7G,MAAMyF,EAAK,CACTxF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAErC,IAAKiP,EAAetM,KAAMoM,IACjD/M,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,QAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GACJ+D,EAAS/D,EAAMmG,MAHnB,OAKS,SAAAlE,GACL8B,OAASiD,EAAWb,iBA1B5BpB,EAAM,EAAK0G,SAAWF,EAAQ,OA3tBhC,IAAMiB,EAAuC,WAA7B9Q,OAAO2E,SAASoM,SAChCxO,KAAKyO,KAAL,UAAehR,OAAO2E,SAASsM,SAA/B,YAA2CjR,OAAO2E,SAASuM,MAC3D3O,KAAK8G,IAAL,UAAcyH,EAAU,MAAQ,KAAhC,cAA0CvO,KAAKyO,KAA/C,kBACAzO,KAAKwN,SAAL,UAAmB/P,OAAO2E,SAASoM,SAAnC,aAAgDxO,KAAKyO,KAArD,YACAzO,KAAKkK,eAAiB,IACtBlK,KAAKqM,0BAA4B,IACjCrM,KAAK+K,eAAiB,IACtB/K,KAAK4K,QAAU,EACf5K,KAAKuL,iBAAmB,IAGxBvL,KAAK4L,SAAW,CACdc,UAAW,YACXO,YAAa,cACbpB,KAAM,OACNC,QAAS,WAGX9L,KAAKiM,SAAW,aAChBjM,KAAKkM,UAAY,aACjBlM,KAAKuM,gBAAkBnD,EAEvBpJ,KAAK6J,UAAY,KAEjB7J,KAAKsK,cAAgB,IAAIsE,IAEzB5O,KAAK0K,cAAgB,IAAIkE,KC3CdC,EADE,IAAIxF,E,gBCJfyF,EAAW,CAMjBA,UAAqB,SAAA/M,GAEnB,IADA,IAAMgN,EAAS,GACf,MAA2BxQ,OAAOyQ,QAAQjN,GAA1C,eAAiD,CAA5C,kBAAO3C,EAAP,KAAYN,EAAZ,KACHiQ,EAAO3P,GAAO6P,mBAAmBnQ,GAEnC,OAAOiQ,GAOTD,OAAkB,YAA2B,IAAxBI,EAAwB,EAAxBA,KAAwB,IAAlB5G,cAAkB,MAAT,GAAS,EACrCmG,EAAO,GAAH,OAAMhR,OAAO2E,SAASsM,SAAtB,YAAkCjR,OAAO2E,SAASuM,MAEtDvG,EAAS,IAAIC,gBAAgByG,EAASK,UAAU7G,IAEtD,gBACE7K,OAAO2E,SAASoM,SADlB,aAEKC,EAFL,gBAEiBS,EAFjB,YAEyB9G,EAAOnG,aASlC6M,SAAoB,YAOd,IANJhI,EAMI,EANJA,IACAoI,EAKI,EALJA,KAKI,IAJJ5N,cAII,MAJK,MAIL,MAHJC,YAGI,MAHG,GAGH,EAFJ+G,EAEI,EAFJA,OAEI,IADJ8G,cAEMhO,OADF,MADY,GACZ,EAEEiO,EAAavI,GAAYgI,EAASQ,OAAO,CAAEJ,OAAM5G,WAGjDiH,EAAU,CACdjO,SACAF,WAKF,MATiB,CAAC,OAAQ,OAOZS,SAASP,KAASiO,EAAQhO,KAAOC,KAAKC,UAAUF,IAEvDF,MAAMgO,EAAYE,GAAStH,MAAK,SAAAvG,GACrC,OAAKA,EAAS8N,GAGP9N,EAASI,OAFP0H,QAAQG,OAAOjI,OAY5BoN,IAAe,YAA+C,IAA5ChI,EAA4C,EAA5CA,IAAKoI,EAAuC,EAAvCA,KAAM5G,EAAiC,EAAjCA,OAAiC,IAAzB8G,qBAAyB,MAAT,GAAS,EAC5D,OAAON,EAASW,SAAS,CAAE3I,MAAKoI,OAAM5G,SAAQ8G,mBAQhDN,KAAgB,YAA6C,IAA1ChI,EAA0C,EAA1CA,IAAKoI,EAAqC,EAArCA,KAAM3N,EAA+B,EAA/BA,KAA+B,IAAzB6N,qBAAyB,MAAT,GAAS,EAG3D,OAAON,EAASW,SAAS,CAAE3I,MAAKoI,OAAM5N,OAFvB,OAE+BC,OAAM6N,mBAQtDN,IAAe,YAA6C,IAA1ChI,EAA0C,EAA1CA,IAAKoI,EAAqC,EAArCA,KAAM3N,EAA+B,EAA/BA,KAA+B,IAAzB6N,qBAAyB,MAAT,GAAS,EAG1D,OAAON,EAASW,SAAS,CAAE3I,MAAKoI,OAAM5N,OAFvB,MAE+BC,OAAM6N,mBAOtDN,OAAkB,YAA6C,IAA1ChI,EAA0C,EAA1CA,IAAKoI,EAAqC,EAArCA,KAAM3N,EAA+B,EAA/BA,KAA+B,IAAzB6N,qBAAyB,MAAT,GAAS,EAG7D,OAAON,EAASW,SAAS,CAAE3I,MAAKoI,OAAM5N,OAFvB,SAE+BC,OAAM6N,mBAStDN,OAAkB,YAAqD,IAAlDnB,EAAkD,EAAlDA,YAAavO,EAAqC,EAArCA,IAAKN,EAAgC,EAAhCA,MAAgC,IAAzBsQ,qBAAyB,MAAT,GAAS,EAC/DF,EAAO,aAAH,OAAgBvB,EAAhB,KACJpM,EAAO,IAAIsM,SAIjB,OAHAtM,EAAKuM,OAAO,OAAQ1O,GACpBmC,EAAKuM,OAAO,OAAQhP,GAEbgQ,EAASY,KAAK,CAAER,OAAM3N,OAAM6N,mBASrCN,cAAyB,YAAqD,IAAlDa,EAAkD,EAAlDA,OAAkD,IAA1C3B,YAA0C,MAAnC,GAAmC,EAA/BC,EAA+B,EAA/BA,KAA+B,IAAzBmB,qBAAyB,MAAT,GAAS,EACtEF,EAAO,eAAH,OAAkBS,EAAlB,KACJpO,EAAO,CAAEyM,OAAMC,QAErB,OAAOa,EAASY,KAAK,CAAER,OAAM3N,OAAM6N,kBAAiBnH,MAAK,SAAAvG,GAAQ,OAC/DA,EAASI,WAIbgN,WAAsB,SAAAxB,GAAK,MAAI,CAAC,SAAU,SAASzL,SAASyL,IAC5DwB,SAAoB,SAAA1P,GAAG,OAAIA,EAAImO,MAAM,MAAQ,GAC7CuB,YAAuB,SAAC1P,EAAKkO,GACR,CACjB,CACEsC,GAAI,SAAAtC,GAAK,OAAIwB,EAASe,WAAWvC,IACjC3M,MAAO,iBAET,CACEiP,GAAI,SAAAxQ,GAAG,OAAI0P,EAASgB,SAAS1Q,IAC7BuB,MAAO,iDAIAmE,SAAQ,SAAAtB,GACjB,IAAKA,EAAIoM,KACP,MAAM,IAAIhG,MAAMpG,EAAI7C,WAK1BmO,OAAkB,YAAmD,IAAhD1P,EAAgD,EAAhDA,IAAgD,IAA3CkO,aAA2C,MAAnC,SAAmC,MAAzB8B,qBAAyB,MAAT,GAAS,EACnEN,EAASiB,YAAY3Q,EAAKkO,GAE1B,IAAM4B,EAAO,eAAH,OAAkB5B,EAAlB,YAA2BlO,EAA3B,KAEV,OAAO0P,EAASpQ,IAAI,CAAEwQ,OAAME,kBAAiBnH,MAAK,SAAAvG,GAAQ,OACxDA,EAASI,WAIbgN,OAAkB,YAA0D,IAAvD1P,EAAuD,EAAvDA,IAAKN,EAAkD,EAAlDA,MAAkD,IAA3CwO,aAA2C,MAAnC,SAAmC,MAAzB8B,qBAAyB,MAAT,GAAS,EAC1EN,EAASiB,YAAY3Q,EAAKkO,GAE1B,IACM/L,EAAO,CAAEnC,MAAKkO,QAAOxO,SAE3B,OAAOgQ,EAASY,KAAK,CAAER,KAHV,eAGgB3N,OAAM6N,kBAAiBnH,MAAK,SAAAvG,GAAQ,OAC/DA,EAASI,YAIEgN,I,ikBC9Kf,IAAQvM,EAAwCzC,EAAxCyC,WAAYqE,EAA4B9G,EAA5B8G,cAAetG,EAAaR,EAAbQ,SCIpB0P,EDFE,SAACxM,GAAoB,IAAfyM,EAAe,uDAAP,GACvBC,EAAU,CACdC,aAAc,SAACjK,EAAQ3C,GACrB,OAAO,SAAA0K,GAAI,OACT1L,IAAa0F,MAAK,SAAAC,GAEhB,IAAKA,EACH,MAAM,IAAItB,EAAc,eAI1B,IAAMwI,EAAgB,CACpB,eAAgB,mBAChB3B,cAAe,UAAF,OAAYnN,MAI3B,OAAO8P,QAAQ1R,IAAIwH,EAAQ3C,EAApB6M,CAAA,GAA4BhB,iBAAkBnB,SAI3DvP,IAAK,SAAUwH,EAAQ3C,GACrB,OAAOvD,KAAKmQ,aAAajK,EAAQ3C,KAIrC,OAAO,IAAI8M,MAAM9R,OAAOkH,OAAOjC,EAAKyM,GAAQC,GC1BjCI,CAASxB,GCEhByB,E,WACJ,WAAYC,GAAwB,IAApBC,EAAoB,uDAAf,GAAIrS,EAAW,uDAAJ,GAAI,YAClC4B,KAAKwQ,GAAKA,EACVxQ,KAAKyQ,GAAKA,EACVzQ,KAAK5B,KAAOA,EACZ4B,KAAK0Q,KAAO,GACZ1Q,KAAK2Q,OAAS,CACZhP,OAAQuB,EACRqG,QAAS,KACTqH,KAAM,KAER5Q,KAAK6Q,iBAAmB,GACxB7Q,KAAK8Q,gBAAkB,a,qCAiBzB,YAKG,IAJDtR,EAIC,EAJDA,SAIC,IAHDuR,iBAGC,MAHW,IAGX,MAFDC,cAEC,MAFQ,aAER,MADDC,gBACC,MADU,aACV,EACDpC,EAASqC,UAAT,KAEIC,MAAOZ,EAAMa,MACbC,KAAMrR,KAAKwQ,IACVhR,EAAWuR,IAEd,SAAAO,GAAM,OAAIL,EAASK,MACnB,SAAAvP,GAAI,OAAIiP,EAAOjP,Q,yBAUnB,YAA2C,IAA7BvC,EAA6B,EAA7BA,SAA6B,IAAnBuR,iBAAmB,MAAP,IAAO,EACzClC,EAAS0C,YAAT,KACEJ,MAAOZ,EAAMa,MACbC,KAAMrR,KAAKwQ,IACVhR,EAAWuR,M,mBAShB,WAA2B,IAArBjL,EAAqB,uDAAV,aACf,GAAgB,KAAZ9F,KAAKyQ,GAAW,OAAOzQ,KAAKyQ,GAEhCzQ,KAAK8Q,gBAAkBhL,EACvB9F,KAAKkR,UAAU,KAAMlR,KAAKwR,QAAQxR,S,yBAMpC,WACEA,KAAK2Q,OAAOhP,OAASuB,EACrBlD,KAAKyR,a,wBAMP,WACEzR,KAAK2Q,OAAOhP,OAASuB,EACrBuE,aAAazH,KAAK2Q,OAAOpH,W,6BAQ3B,SAAgBzD,GACd,IAAM4L,EAAiBC,EAAKrL,aAI5B,OAHAtG,KAAK6Q,iBAAiBa,GAAkB,CAAE9I,KAAM9C,GAC5C9F,KAAK2Q,OAAOhP,SAAWuB,EAAuBlD,KAAK4R,cAC9C5R,KAAK0Q,MAAM5K,EAAS9F,KAAK0Q,MAC3BgB,I,+BAQT,SAAkBA,GACXA,GAAmB1R,KAAK6Q,iBAAiBa,YACvC1R,KAAK6Q,iBAAiBa,GACqB,IAA9CnT,OAAO4G,KAAKnF,KAAK6Q,kBAAkBrL,QAAcxF,KAAK6R,gB,sBAY5D,WAAW,WACT,GAAkD,IAA9CtT,OAAO4G,KAAKnF,KAAK6Q,kBAAkBrL,QACnCxF,KAAK2Q,OAAOhP,SAAWuB,GACtBlD,KAAKyQ,GAAV,CAEA,IAAM3J,EAAM,UAAH,OAAa9G,KAAKyQ,GAAlB,oEACTT,EAAKtR,IAAI,CAAEoI,QACRmB,MAAK,SAAAvG,GACJ,GAAKA,GAAaA,EAASK,MAASL,EAASK,KAAKyD,OAAlD,CAGA,IAAK,IAAMpG,KADX,EAAKsR,KAAOhP,EAASK,KACH,EAAK8O,iBACrB,EAAKA,iBAAiBzR,GAAKwJ,KAAKlH,EAASK,MAG3C,EAAK+P,0BATT,OAWS,SAAAtF,GAEL,EAAKmE,OAAOC,MAAQ,IACpB,EAAKkB,4B,iCAOX,WAAsB,WACpBrK,aAAazH,KAAK2Q,OAAOpH,SACzBvJ,KAAK2Q,OAAOpH,QAAU7B,YAAW,kBAAM,EAAK+J,aAAYzR,KAAK2Q,OAAOC,Q,qBAQtE,SAAQmB,GACN,OAAO,SAAAhQ,GACDA,EAAKjD,OACPiT,EAAMtB,GAAK1O,EAAKjD,MAAMyR,MAAMwB,EAAMvB,IAAIwB,GACtCD,EAAMjB,gBAAgBiB,EAAMtB,KAGzBsB,EAAMtB,GAAK,U,SArKhBF,E,QAkLW,SAGFA,SCtLT0B,G,WACJ,aACE,GADY,YACR9L,GAAU,OAAOA,GACrBnG,KAAKkS,SAAWP,EAAKrL,aACrBtG,KAAKmS,OAAS,GACdnS,KAAKoS,aAAe,GACpBpS,KAAKqS,mBACLlM,GAAWnG,K,4CAGb,WAAmB,WACjB6O,EAASqC,UACP,CAAEC,MAAO,QAASmB,UAAW,IAAKN,GAAI,MACtC,eACA,SAAAjQ,GACMA,EAAKjD,QACP,EAAKsT,aAAerQ,EAAKjD,MAAMyR,Y,oBAMvC,WACE,OAAOvQ,KAAKoS,e,sBAGd,SAAS5B,GACP,GAAIxQ,KAAKmS,OAAO3B,GAAK,OAAOxQ,KAAKmS,OAAO3B,GACxC,IAAI+B,EACEC,EAASxS,KAAKoS,aAAa5B,GAWjC,OARE+B,EADEC,EACS,IAAIjC,GAAMC,EAAIgC,EAAOR,GAAIQ,EAAOF,WAIhC,IAAI/B,GAAMC,GAGvBxQ,KAAKmS,OAAO3B,GAAM+B,EACXA,M,KAIPpM,GAAW,KACA8L,MC/CP3R,GAAwCR,EAAxCQ,SAAUsG,GAA8B9G,EAA9B8G,cAAerE,GAAezC,EAAfyC,WAugBlBkQ,GApgBb,aAAc,2CAYJ,WACR,EAAK5I,UAAY,IAAIhD,EAAc,CACjCC,IAAK,EAAK4L,OACV1L,OAAQ,EAAKA,OACbC,QAAS,EAAKA,QACdC,QAAS,EAAKA,QACdC,UAAW,EAAKA,UAChBC,kBAAmB,OAErB,EAAKyC,UAAUlC,kBArBH,mBAwBL,SAAAN,GACP,EAAKgE,SAAS,cAAUtC,MAzBZ,oBA4BJ,SAAA1B,GACR,EAAKgE,SAAS,eAAWtC,GACR,MAAb1B,EAAIiE,MACN7N,OAAOiK,WAAW,EAAKsC,UAAW,EAAKT,YA/B7B,sBAmCF,SAAAlC,GACV,IAAItF,EACJ,IACEA,EAAOP,KAAKkK,MAAMrE,EAAItF,MACtB,MAAOyK,GAEP,YADAxG,QAAQrF,MAAM6L,GAGhB,GAAIzK,EAAKpB,MACPqF,QAAQrF,MAAMoB,EAAKpB,WADrB,CAIA,IAAIoL,EAAWhK,EAAKgK,SAChBoB,GAAa,EACbC,GAAW,EACX,CAAC,OAAQ,cAAe,aAAavL,SAASE,EAAK8D,SACrDkG,EAAWA,EAAShI,KAAI,SAAApE,GAItB,MAHmB,gBAAfoC,EAAK8D,cACA,EAAK8M,UAAUnR,KAAKC,UAAU9B,IAEhCoC,EAAK8D,MAAQ,IAAMrE,KAAKC,UAAU9B,MAExB,SAAfoC,EAAK8D,QACPkG,EAAW,CAAC,SAGdoB,GAAa,EACbC,GAAW,GAGbrB,EAAShI,KAAI,SAAAoG,GACX,EAAKkB,SAASlB,EAASpI,EAAMoL,EAAYC,UAlE/B,sBAuEF,SAACjD,EAASpI,EAAMoL,EAAYC,GACtC,OAAO,IAAI5D,SAAQ,SAAC6D,EAAS1D,GAC3B,EAAK0B,SAASlB,EAASpI,EAAMoL,EAAYC,GAEvCC,EAAQ,cA3EA,oBAgFJ,SAAAhG,GACR,EAAKgE,SAAS,eAAWtC,MAjFb,oBAqFJ,SAAC6J,GAAqC,IAAzB9M,EAAyB,4DAAdiD,EAChC,EAAK2B,cAAckI,GAAc,EAAKlI,cAAckI,IAAe,GACnE,EAAKlI,cAAckI,GAAYxO,KAAK0B,MAvFxB,kBA0FN,kBAAM,EAAK+D,UAAUrD,WA1Ff,sBA6FF,SAACiE,GAA6D,IAAnD3E,EAAmD,4DAAxCiD,EAAW0D,EAA6B,4DAAd1D,EACpDhJ,EAAU,CAAE8F,MAAO,YAAasE,QAASM,GAC3CN,EAAU3I,KAAKC,UAAUgJ,GAC7B,EAAKkI,UAAUxI,GAAW,EAAKwI,UAAUxI,IAAY,GACrD,EAAKwI,UAAUxI,GAAS/F,KAAK0B,GACzB2G,IACF,EAAK/B,cAAc,aAAeP,GAChC,EAAKO,cAAc,YAAcP,IAAY,GAC/C,EAAKO,cAAc,aAAeP,GAAS/F,KAAKqI,IAElD,EAAKoG,MAAM9S,MAvGC,wBA0GA,SAAC0K,GAAuC,IAA7BgC,EAA6B,4DAAd1D,EACtC/C,QAAQC,IAAI,sBAAwBzE,KAAKC,UAAUgJ,IACnD,IAAM1K,EAAU,CAAE8F,MAAO,cAAesE,QAASM,GAC7CN,EAAU3I,KAAKC,UAAUgJ,GACzBgC,IACF,EAAK/B,cAAc,eAAiBP,GAClC,EAAKO,cAAc,eAAiBP,IAAY,GAClD,EAAKO,cAAc,eAAiBP,GAAS/F,KAAKqI,IAEpD,EAAKoG,MAAM9S,MAnHC,iBAuHP,WAA8B,IAA7B0M,EAA6B,4DAAd1D,EACfhJ,EAAU,CAAE8F,MAAO,QACzB,EAAK6E,cAAL,KAA6B,EAAKA,cAAL,MAA8B,GAC3D,EAAKA,cAAL,KAA2BtG,KAAKqI,GAChC,EAAKoG,MAAM9S,MA3HC,kBA8HN,SAAAA,GACN,EAAK8J,UAAUjB,KAAKpH,KAAKC,UAAU1B,OA/HvB,qBAmIH,SAAC0K,EAAU1K,GAAkD,IAAzCoN,EAAyC,wDAArBC,EAAqB,wDAElElC,OAAanC,EACboB,EAAUM,EAQd,IAPmB,IAAf0C,GACFhD,EAAU3I,KAAKC,UAAUgJ,GACzBS,EAAa,EAAKyH,UAAUxI,IAE5Be,EAAa,EAAKR,cAAcP,QAGfpB,IAAfmC,EAAJ,CACA,IAAK,IAAIrN,EAAI,EAAGA,EAAIqN,EAAW1F,OAAQ3H,IACR,mBAAlBqN,EAAWrN,IACpBqN,EAAWrN,GAAGkC,GAGdmL,IACe,IAAbkC,IACFlC,EAAa,QAtJL,mBAkKL,SAAC9L,GAAgD,IAA3C0G,EAA2C,4DAAhCiD,EAAWuE,EAAqB,uDAAb,SAC3C,IAAK,CAAC,SAAU,SAASzL,SAASyL,GAChC,KAAM,0CAER,GAAc,UAAVA,GAEElO,EAAImO,MAAM,KAAK/H,OAAS,EAC1B,KAAM,yCAGV,IAAMsB,EAAM,EAAK0G,SAAW,YAAcF,EAAQ,IAAMlO,EAAM,IAE9DmD,KAAa0F,MAAK,SAAAC,GAChB7G,MAAMyF,GACHmB,MAAK,SAAAvG,GAAQ,OAAIA,EAASI,UAC1BmG,MAAK,SAAAlG,GACA+D,GACFA,EAAS/D,MAJf,OASS,SAAAiC,GACLgC,QAAQC,IAAIjC,YAzLN,mBA+LL,SAAC5E,EAAKN,GAAkD,IAA3CgH,EAA2C,4DAAhCiD,EAAWuE,EAAqB,uDAAb,SAClD,IAAK,CAAC,SAAU,SAASzL,SAASyL,GAChC,KAAM,0CAER,GAAc,UAAVA,EAAmB,CAENlO,EAAImO,MAAM,KACzB,GAAInO,EAAImO,MAAM,KAAK/H,OAAS,EAC1B,KAAM,yCAGV,IAAMzD,EAAO,CAAE3C,IAAKA,EAAKkO,MAAOA,EAAOxO,MAAOA,GACxCgI,EAAM,EAAK0G,SAAW,YAE5BjL,KAAa0F,MAAK,SAAAC,GAChB,IAAKA,EACH,MAAM,IAAItB,GAAc,eAG1BvF,MAAMyF,EAAK,CACTxF,OAAQ,OACRC,KAAMC,KAAKC,UAAUM,GACrBX,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,SAE1B2H,MAAK,SAAAC,GACFpC,GACFA,EAASoC,MATb,OAWS,SAAAlE,GACPgC,QAAQC,IAAIjC,YA9NJ,gBAyOR,SAAC8C,GAA8B,IAAzBhB,EAAyB,4DAAdiD,EACrBxG,KAAa0F,MAAK,SAAAC,GAChB,IAAKA,EACH,MAAM,IAAItB,GAAc,eAG1BvF,MAAMyF,EAAK,CACTxF,OAAQ,MACRF,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,SAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GACJ+D,EAAS/D,EAAMmG,MAHnB,OAKS,SAAAlE,GACL8B,OAASiD,EAAW/E,eA7PlB,iBA6QP,SAACsJ,EAAOlP,EAAMgB,EAAKN,GAAgC,IAAzBgH,EAAyB,4DAAdiD,EACtCjC,EAAM,EAAK0G,SAAWF,EAAQ,IAAMlP,EAAO,SAClC2K,IAAT3K,IACF0I,EAAM,EAAK0G,SAAWF,EAAQ,KAGhC/K,KAAa0F,MAAK,SAAAC,GAChB,IAAKA,EACH,MAAM,IAAItB,GAAc,eAG1BvF,MAAMyF,EAAK,CACTxF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAErC,IAAKA,EAAK2C,KAAMjD,IACvCsC,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,SAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GACJ+D,EAAS/D,EAAMmG,MAHnB,OAKS,SAAAlE,GACL8B,OAASiD,EAAW/E,eAvSlB,mBA8SL,SAAC2J,EAAavO,EAAKN,GAAgC,IAAzBgH,EAAyB,4DAAdiD,EACtCjC,EAAM,GAAH,OAAM,EAAK0G,SAAX,kBAA6BG,EAA7B,KACHC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ1O,GACxBwO,EAASE,OAAT,OAAwBhP,GACxBuC,MAAMyF,EAAK,CAAExF,OAAQ,OAAQC,KAAMqM,IAChC3F,MAAK,SAAAC,GAAG,OAAIA,EAAIpG,UAChBmG,KAAKnC,GAFR,OAGS,SAAA9B,GACLgC,QAAQC,IAAI,eAAgBjC,GAC5B8B,OAASiD,SAxTD,gBAoUR,SAACuE,EAAOlP,EAAMU,GAAgC,IAAzBgH,EAAyB,4DAAdiD,EAChCjC,EAAM,EAAK0G,SAAWF,EAAQ,IAAMlP,EAAO,IAC/C4H,QAAQC,IAAI,eAAgBa,QACfiC,IAAT3K,IACF0I,EAAM,EAAK0G,SAAWF,EAAQ,KAGhC/K,KAAa0F,MAAK,SAAAC,GAChB,IAAKA,EACH,MAAM,IAAItB,GAAc,eAG1BvF,MAAMyF,EAAK,CACTxF,OAAQ,MACRC,KAAMC,KAAKC,UAAU3C,GACrBsC,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,SAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GACJ+D,EAAS/D,EAAMmG,MAHnB,OAKS,SAAAlE,GACL8B,OAASiD,EAAWb,eA/VlB,mBA0XL,SAACoF,EAAOlP,GAA0C,IAApC0H,EAAoC,4DAAzBiD,EAAWhH,EAAc,uDAAP,GAC9C+E,EAAM,EAAK0G,SAAWF,EAAQ,IAAMlP,EAAO,SAClC2K,IAAT3K,EAKJmE,KAAa0F,MAAK,SAAAC,GAChB,IAAKA,EACH,MAAM,IAAItB,GAAc,eAG1BvF,MAAMyF,EAAK,CACTxF,OAAQ,SACRC,KAAMC,KAAKC,UAAUM,GACrBX,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,SAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GACJ+D,EAAS/D,EAAMmG,MAHnB,OAKS,SAAAlE,GACL8B,OAASiD,EAAWb,YAxB5BpB,EAAM,EAAK0G,SAAWF,EAAQ,OA7XpB,0BA+aE,SAACS,GAAyD,IAA1CC,EAA0C,uDAAnC,GAAIC,EAA+B,uCAAzBnI,EAAyB,4DAAdiD,EAC1DxG,KAAa0F,MAAK,SAAAC,GAChB,IAAKA,EACH,MAAM,IAAItB,GAAc,eAG1B,IAAME,EAAM,EAAK0G,SAAW,YAAcO,EAAgB,IAC1D1M,MAAMyF,EAAK,CACTxF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEuM,KAAMA,EAAMC,KAAMA,IACzC7M,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,SAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EAAIpG,OACDmG,MAAK,SAAAlG,GAAI,OAAI+D,EAAS/D,MADzB,OAES,SAAAiC,GACLgC,QAAQC,IAAIjC,GACZ8B,OAASiD,eAncP,qBAmdH,SAAC3K,EAAMU,GAAgC,IAAzBgH,EAAyB,4DAAdiD,EAC9BuE,EAAQ,OACRxG,EAAM,EAAK0G,SAAWF,EAAQ,IAAMlP,EAAO,IAC/C,QAAa2K,IAAT3K,EAAJ,CAIA,IAAI+P,EAAWrP,EAAMiF,KAAI,SAAAP,GACvB,MAAO,CAAE4K,cAAe5K,EAAI4K,cAAehQ,KAAMoF,EAAIpF,SAEjDiQ,EAAgB,CACpBC,UAAW,KAGb/L,KAAa0F,MAAK,SAAAC,GAChB7G,MAAMyF,EAAK,CACTxF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAErC,IAAKiP,EAAetM,KAAMoM,IACjD/M,QAAS,CACP,eAAgB,mBAChBqM,cAAe,UAAF,OAAYnN,SAE1B2H,MAAK,SAAAC,GACFpC,GACFoC,EACGpG,OACAmG,MAAK,SAAAlG,GACJ+D,EAAS/D,EAAMmG,MAHnB,OAKS,SAAAlE,GACL8B,OAASiD,EAAWb,iBA1B5BpB,EAAM,EAAK0G,SAAWF,EAAQ,OAtdhCtN,KAAKyO,KAAL,UAAehR,OAAO2E,SAASsM,SAA/B,YAA2CjR,OAAO2E,SAASuM,MAC3D,IAAMJ,EAAuC,WAA7B9Q,OAAO2E,SAASoM,SAChCxO,KAAK0S,OAAL,UAAiBnE,EAAU,MAAQ,KAAnC,cAA6CvO,KAAKyO,KAAlD,kBACAzO,KAAKwN,SAAL,UAAmB/P,OAAO2E,SAASoM,SAAnC,aAAgDxO,KAAKyO,KAArD,YACAzO,KAAK2S,UAAY,GACjB3S,KAAK0K,cAAgB,GACrB1K,KAAKuJ,QAAU,IACfvJ,KAAK6J,eAAYd,EACjB/I,KAAKgK,WCkHM8I,GA5HD,wDAAH,OCJI,i3XDIJ,ymEEJUC,G,WACnB,aAAuB,IAAXC,EAAW,uDAAJ,GAAI,YACrBhT,KAAKgT,KAAOA,EACZhT,KAAKiT,UAAY,IAAIC,GAAMF,GAC3BhT,KAAKmT,UAAY,IAAID,GAAMF,G,gCAG7B,SAAKI,GACHA,EAAeC,WACfrT,KAAKiT,UAAU7O,KAAKgP,GACpBpT,KAAKmT,UAAY,IAAID,GAAMlT,KAAKgT,Q,mBAGlC,SAAMI,GACJpT,KAAKiT,UAAU7O,KAAKgP,GACpBpT,KAAKmT,UAAY,IAAID,GAAMlT,KAAKgT,Q,kBAGlC,SAAKM,GACH,IAAMF,EAAiBpT,KAAKiT,UAAUM,MAClCH,IACFA,EAAeI,WAAWF,GAC1BtT,KAAKmT,UAAU/O,KAAKgP,M,kBAIxB,SAAKE,GACH,IAAMF,EAAiBpT,KAAKmT,UAAUI,MAClCH,IACFA,EAAeC,SAASC,GACxBtT,KAAKiT,UAAU7O,KAAKgP,O,4BAIxB,WACE,OAAO,IAAIK,O,KAITA,G,WACJ,aAAc,YACZzT,KAAK0T,UAAY,KACjB1T,KAAK2T,YAAc,K,oCAGrB,SAASC,GAEP,OADA5T,KAAK0T,UAAYE,EACV5T,O,wBAGT,SAAW4T,GAET,OADA5T,KAAK2T,YAAcC,EACZ5T,O,mBAGT,WACE,GAAI,CAACA,KAAK2T,YAAa3T,KAAK2T,aAAaE,MAAK,SAAAzQ,GAAC,OAAS,MAALA,KACjD,KAAM,uCACR,MAAO,CAAEiQ,SAAUrT,KAAK0T,UAAWF,WAAYxT,KAAK2T,iB,KAIlDT,G,WACJ,aAAuB,IAAXF,EAAW,uDAAJ,GAAI,YACrBhT,KAAKgT,KAAOA,EACZhT,KAAK8T,MAAQ,G,gCAGf,SAAKC,GACC/T,KAAK8T,MAAMtO,SAAWxF,KAAKgT,MAC7BhT,KAAK8T,MAAME,QAEbhU,KAAK8T,MAAM1P,KAAK2P,K,iBAGlB,WACE,OAAO/T,KAAK8T,MAAMP,U,KCzEDU,G,WACnB,aACE,GADY,YACRA,EAAU9N,SAAU,OAAO8N,EAAU9N,SACzC8N,EAAU9N,SAAWnG,KACrBA,KAAKkU,MAAQ,GACblU,KAAKmU,QAAU7P,KAAKE,S,8BAMtB,WACE,OAAOxE,KAAKkU,S,oBAOd,SAAa9U,GACX,IAAMgV,EAAO,IAAIH,EACb7U,UAAYgV,EAAKF,MAAM9U,K,kBAO7B,SAAYA,GAEV,IAAMgV,EAAO,IAAIH,EACjB,OAAO7U,EAAMgV,EAAKrS,KAAK3C,GAAOgV,EAAKrS,O,mBAQrC,SAAa3C,EAAKN,GAChB,OAAQ,IAAImV,GAAYC,MAAM9U,GAAON,I,kBAOvC,SAAYA,GACVmV,EAAUI,OAAM,IAAIJ,GAAYE,QAASrV,K,mBAM3C,WAEE,OAAOmV,EAAUK,MAAK,IAAIL,GAAYE,a,KCG3BI,GA3Db,aAAc,2CAQJ,WACR,IAAMnT,EAAU,CACd,eAAgB,mBAChBqM,cAAe,UAAF,OAAY3N,EAAeQ,aAElClC,EAAS,EAAKsE,UAAU3C,QAAxB3B,KACF0I,EAAM,GAAH,OAAM,EAAK0N,QAAX,YAAsBpW,EAAtB,KAET,OAAO,IAAIoL,SAAQ,SAAC6D,EAAS1D,GAC3B,IAAM8K,GAAW,IAAI9R,MAAOC,UAG5B,GAAI6R,EAAW,EAAKC,WAAa,EAAKC,SAAW,EAAK5S,KACpD,OAAOsL,EAAQ,CAAE3L,SAAU,EAAKK,OAGlC,EAAK2S,UAAYD,EAEjBpT,MAAMyF,EAAK,CAAE1F,YACV6G,MAAK,SAAAvG,GAECA,EAAS8N,IACZ7F,EAAO,CAAEhJ,MAAOe,EAASzB,aAI3ByB,EACGI,OACAmG,MAAK,SAAAlG,GACJ,EAAKA,KAAOA,EACZsL,EAAQ,CAAE3L,SAAUK,OAJxB,OAMS,SAAApB,GACL,EAAKoB,KAAO,KACZ4H,EAAO,CAAEhJ,gBAhBjB,OAmBS,SAAAA,GAEL,EAAKoB,KAAO,KACZ4H,EAAO,CAAEhJ,mBAhDH,qCAqDA,8BAAAM,EAAA,sEACO,EAAK2T,UADZ,cACN7S,EADM,0BAELA,SAAA,UAAAA,EAAML,gBAAN,eAAgBmT,aAAa,GAFxB,4CApDZ7U,KAAKwU,QAAL,UAAkB/W,OAAO2E,SAASE,OAAlC,gBACAtC,KAAK0C,UAAY5C,EAAegV,eAChC9U,KAAK+B,KAAO,KACZ/B,KAAK0U,UAAY,KACjB1U,KAAK2U,QAAU,K,2BCFEI,G,WACnB,WAAYC,EAASC,EAAOC,EAAUnJ,GAAU,+CAmBlC,WAGZ,OAFA,EAAKA,SAASjH,SAAQ,SAAAqF,GAAO,OAAI,EAAKgL,WAAWhL,MAE1C,KAtBuC,uBAyBnC,SAAAA,GACX,EAAKiL,GAAGlE,UACN/G,GACA,SAAApI,GAAI,OAAI,EAAKsT,cAActT,MAC3B,SAAAA,GAAI,OAAI,EAAKuT,YAAYvT,SA7BmB,8BAiC5B,SAAAgK,GAClB,IAAMwJ,EAAkB,CAAEpE,MAAO,EAAK8D,MAAO5D,KAAM,KAC7CmE,EAAYzJ,GAAsBwJ,EACxC,OAAOxI,MAAM0I,QAAQD,GAAaA,EAAY,CAACA,MApCD,gBAsD1C,SAAAhF,GACJ,OAAO,EAAKkF,OAAOhX,IAAI8R,MAvDuB,mBA0DvC,WACP,OAAO,EAAKkF,OAAO/J,YA3D2B,2BA8D/B,SAAAvM,GACf,OACE,EAAKV,IAAIU,IACT,EAAKuW,IAAIvW,EAAK,CACZhB,KAAMgB,EACNoE,IAAK,GACLgN,GAAIpR,IACHV,IAAIU,MArEqC,gBAyE1C,SAACA,EAAK2C,GACV,OAAO,EAAK2T,OAAOnN,IAAInJ,EAAK2C,MA1EkB,mBA6EvC,SAAA3C,GACP,EAAKsW,OAAL,OAAmBtW,MA9E2B,oBAiFtC,WACR,EAAK2M,SAASjH,SAAQ,SAAAqF,GAAO,OAAI,EAAKiL,GAAG7D,YAAYpH,SAlFP,wBAwFlC,SAAC3G,EAAK0L,GAClB,IAAI0G,EAAU,KAEd,GAAIC,KAAOC,QAAQD,KAAOnX,IAAI8E,EAAK0L,EAAM,KAAM,CAE7C0G,EAAUC,KAAOE,KAAKvS,EAAK0L,GAE3B,IAAM8G,EAAU9G,EAAK3B,MAAM,KAEvByI,EAAQxQ,OAAS,IACnBoQ,EAAU,EAAKK,YAAYL,EAASI,EAAQ/Q,MAAM,GAAI,GAAGiR,KAAK,OAIlE,OAAON,GAAWpS,KAtG4B,0BA6GhC,SAAAzB,GACd,IAAMyB,EAAMqS,KAAOnX,IAAIqD,EAAX,cAAwB,EAAKkT,OAAS,IAElD1W,OAAO4G,KAAK3B,GAAKsB,SAAQ,SAAA1F,GACvB,IAAM+W,EAAQ,EAAKC,eAAehX,GAElC,GAAmB,QAAf2C,EAAK8D,MAAiB,CAExB,IAAMqJ,EAAO3Q,OAAO4G,KAAKhC,EAAMuC,cAAclC,EAAIpE,KAAO,GAExD+W,EAAM3S,IAAM,EAAKyS,YAAYJ,KAAOE,KAAKI,EAAM3S,IAAK0L,GAAOA,GAGvD2G,KAAOC,QAAQK,EAAM3S,MACvB,EAAK6S,OAAOjX,QAIdyW,KAAOS,MAAMH,EAAM3S,IAAKA,EAAIpE,IAG9B,EAAKmX,SAASC,KAAK,CAAEzU,KAAMoU,EAAOtQ,MAAO9D,EAAK8D,cAlIF,wBAsIlC,SAAA9D,GACZ,IAAMyB,EAAMqS,KAAOnX,IAAIqD,EAAX,gBAA0B,EAAKkT,OAAS,IAEpD1W,OAAO4G,KAAK3B,GAAKsB,SAAQ,SAAA1F,GAKvB,IAAM+W,EAAQ,EAAKC,eAAehX,GAClCyW,KAAOS,MAAMH,EAAM3S,IAAKA,EAAIpE,SAGxB,EAAKqX,aAAe,IACxB,EAAKC,SAAW,EAAKC,UAAUC,UAnJa,oBAuJtC,SAAA9Q,GACJ,EAAK4Q,WAAa,EAAKC,UAAUC,MACnC,EAAKC,eAAe3F,WAClB,eACA,eACA,kBAAMpL,OAGRA,OA/J4C,qBAmKrC,SAAAA,GACT,EAAKyQ,SAASrF,UAAUpL,MAnKxB9F,KAAK2W,UAAYpY,OAAOuY,OAAO,CAAEnW,OAAQ,EAAGoW,QAAS,EAAGH,MAAO,IAC/D5W,KAAKoV,GAAKF,EACVlV,KAAKiV,MAAQA,EACbjV,KAAKgV,QAAUA,EAEfhV,KAAKuW,SAAW,IAAIS,WACpBhX,KAAK0V,OAAS,IAAI9G,IAClB5O,KAAK6W,eAAiB,IAAII,mBAAgB,GAC1CjX,KAAKkX,UAAYlX,KAAK2W,UAAUI,QAEhC/W,KAAK+L,SAAW/L,KAAKmX,kBAAkBpL,GACvC/L,KAAKyW,YAAczW,KAAK+L,SAASvG,OAIjCxF,KAAKoX,c,kCAuBP,WACE,OAAOpX,KAAKkX,W,IAGd,SAAapY,GACPA,IAAUkB,KAAKkX,YACjBlX,KAAKkX,UAAYpY,EACbA,IAAUkB,KAAK2W,UAAUC,MAC3B5W,KAAK6W,eAAeL,KAAK1X,GAEzBkB,KAAK6W,eAAeQ,gB,KCrDPC,G,WACnB,aAAc,+CAOA,WACZ,GAAIzB,KAAOC,QAAQ,EAAKyB,QACtB,MAAM,IAAI3N,MAAM,mBAYlB,OATArL,OAAO4G,KAAK,EAAKoS,QAAQzS,SAAQ,SAAA1F,GAC/B,IAAMmE,EAAOnE,EAAI2F,OAAO,GAAGJ,cAAgBvF,EAAI6F,MAAM,GAErD1G,OAAOC,eAAe,EAAM+E,EAAM,CAChC7E,IAAK,WACH,OAAO,EAAK6Y,OAAOnY,SAIlB,EAAKoY,2BArBA,kCAwBU,WAItB,OAHAjZ,OAAO4G,KAAK,EAAKoS,QAAQzS,SAAQ,SAAA1F,GAC/B,EAAKmY,OAAOnY,GAAKqY,SAAQ,kBAAM,EAAKC,eAAetY,SAE9C,KA5BK,2BA+BG,SAAA6V,GACf,EAAK0C,SAAW,EACZ,EAAKA,UAAYpZ,OAAO4G,KAAK,EAAKoS,QAAQ/R,QAC5C,EAAKqR,eAAeQ,cAlCV,qBA4CH,SAACO,EAAa9R,GACvB,OAAO8R,EAAY3G,SAASnL,MA7ChB,oBAgDJ,SAAAA,GACJ,EAAK4Q,WAAa,EAAKC,UAAUC,MACnC,EAAKC,eAAe3F,WAClB,eACA,eACA,kBAAMpL,OAGRA,OAvDF9F,KAAKuX,OAAS,GACdvX,KAAK2W,UAAYpY,OAAOuY,OAAO,CAAEnW,OAAQ,EAAGoW,QAAS,EAAGH,MAAO,IAC/D5W,KAAK2X,QAAU,EACf3X,KAAK6W,eAAiB,IAAII,mBAAgB,G,kCAkC5C,WACE,OAAOjX,KAAK2X,UAAYpZ,OAAO4G,KAAKnF,KAAKuX,QAAQ/R,OAC7CxF,KAAK2W,UAAUC,MACf5W,KAAK2W,UAAUI,Y,8kBCyGRc,G,WA9Ib,cAAiE,WAAnDC,EAAmD,EAAnDA,KAAM1Z,EAA6C,EAA7CA,KAA6C,IAAvC2Z,iBAAuC,MAA3B,SAA2B,EAAjBC,EAAiB,EAAjBA,QAAS9I,EAAQ,EAARA,KAAQ,8BAKzD,SAAC4I,EAAM1Z,EAAM2Z,EAAWC,EAAS9I,GACvC,EAAK+I,WAAWF,EAAWD,EAAM1Z,EAAM4Z,EAAS9I,GAChD,EAAKgJ,gBAAanP,EAClB,EAAKmM,SAAWrG,EAChB,EAAK9M,KAAO,MATmD,uBAapD,SAACgW,EAAWD,EAAM1Z,EAAM4Z,EAAS9I,GAC5C,OAA8CA,GAAQ,IAAI3B,MAAM,KAAhE,WAAO4K,EAAP,KAAmBC,EAAnB,KAA0BC,EAA1B,KAAiCC,EAAjC,KAEA,EAAKP,UAAYI,GAAcJ,EAC/B,EAAKD,KAAOM,GAASN,EACrB,EAAK1Z,KAAOia,GAASja,EACrB,EAAK4Z,QAAUM,GAAYN,KAnBoC,iBAoD1D,WAAuB,IAAtBO,EAAsB,uDAAT,KACXT,EAAe,EAAfA,KAAM1Z,EAAS,EAATA,KACR8Q,EACW,OAAfqJ,EAAA,aACQT,EADR,YACgB1Z,EADhB,qBAEW,EAAK8Q,MAElB,OAAOc,EAAKtR,IAAI,CAAEwQ,SAAQjH,MAAK,SAAAlG,GAE7B,OADA,EAAKA,KAAOA,EACU,OAAfwW,EACHxW,EACAA,EAAK+V,GAAM1Z,SA/D8C,mBAuExD,SAAAmD,GACP,IAAQuW,EAAe,EAAfA,KAAM1Z,EAAS,EAATA,KACR8Q,EAAO,MAAH,OAAS4I,EAAT,YAAiB1Z,EAAjB,KAEV,OAAO4R,EAAKwI,IAAI,CAAEtJ,OAAM3N,YA3EuC,sBAoFrD,SAAAuE,GACV,EAAK2S,YAAY3S,MArF8C,wBA4FnD,SAAAA,GACR,EAAK4S,WAET,EAAKnH,cAEL,EAAK2G,WAAa,IAAInD,GAAU,GAAI,EAAK+C,KAAM,EAAK5C,SAAU,CAC5D,CAAE/D,MAAO,EAAK2G,KAAMzG,KAAM,EAAKjT,QAGjC,EAAK8Z,WAAWjH,UAAS,WAAM,MACxB,EAAKiH,aACV,EAAKnW,MAAO,YAAKmW,WAAWxZ,IAAI,EAAKN,aAAzB,eAAgCoF,MAAO,GACnDsC,EAAS,EAAK/D,cAxG+C,wBA+GnD,WACR,EAAKmW,YAAY,EAAKA,WAAWS,UACrC,EAAKT,WAAa,QAhHlBlY,KAAK4Y,MAAMd,EAAM1Z,EAAM2Z,EAAWC,EAAS9I,G,kCA0B7C,WACE,MAA0B,WAAnBlP,KAAK+X,Y,eAOd,WACE,OAAO/X,KAAKkP,O,gBAMd,WACE,IAAQ6I,EAAmC/X,KAAnC+X,UAAWD,EAAwB9X,KAAxB8X,KAAM1Z,EAAkB4B,KAAlB5B,KAAM4Z,EAAYhY,KAAZgY,QAC/B,gBAAUD,EAAV,YAAuBD,EAAvB,YAA+B1Z,EAA/B,YAAuC4Z,M,qBA+EzC,YAAyC,IAAzBF,EAAyB,EAAzBA,KAAM1Z,EAAmB,EAAnBA,KAAmB,IAAbmD,YAAa,MAAN,GAAM,EACjC2N,EAAO,MAAH,OAAS4I,EAAT,KAEV,OAAO9H,EAAKN,KAAK,CAAER,OAAM3N,KAAM,CAAEQ,KAAM,SAAKR,GAAP,IAAasX,MAAOza,S,oBAS3D,YAAoC,IAApB0Z,EAAoB,EAApBA,KAAM1Z,EAAc,EAAdA,KAAMmD,EAAQ,EAARA,KACpB2N,EAAO,MAAH,OAAS4I,EAAT,YAAiB1Z,EAAjB,KAEV,OAAO4R,EAAI,OAAQ,CAAEd,OAAM3N,a,ygBC5IzBuX,G,uMAIG,WACL,cAAQf,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,KAAM1Z,EAAzB,EAAyBA,KAAM4Z,EAA/B,EAA+BA,QACzB9I,EAAO,SAAH,OAAY6I,EAAZ,YAAyBD,EAAzB,YAAiC1Z,EAAjC,YAAyC4Z,GAEnD,OAAOhI,EAAKtR,IAAI,CAAEwQ,SAAQjH,MAAK,SAAAlG,GAE7B,OADA,EAAKA,KAAOA,EACLA,Q,sBAQF,SAAAR,GACP,cAAQwW,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,KAAM1Z,EAAzB,EAAyBA,KAAM4Z,EAA/B,EAA+BA,QACzB9I,EAAO,SAAH,OAAY6I,EAAZ,YAAyBD,EAAzB,YAAiC1Z,EAAjC,YAAyC4Z,GAEnD,OAAOhI,EAAKwI,IAAI,CAAEtJ,OAAM3N,Y,8BAUT,YAA+B,IAA5BwX,EAA4B,EAA5BA,aAAcf,EAAc,EAAdA,QAChC,UAAQD,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,KAAM1Z,EAAzB,EAAyBA,KAEzB,OAAO4a,SAAS7Z,OAAO,CACrB4Z,eACAE,aAAclB,EACdD,OACA1Z,OACA4Z,e,4BAOW,WACb,cAAQD,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,KAAM1Z,EAAzB,EAAyBA,KAEzB,OAAO4a,SAASE,OAAO,CACrBnB,YACAD,OACA1Z,Y,yCAYJ,YAAyC,IAAzB0Z,EAAyB,EAAzBA,KAAM1Z,EAAmB,EAAnBA,KAAM2Z,EAAa,EAAbA,UACpB7I,EAAO,SAAH,OAAY6I,EAAZ,YAAyBD,EAAzB,YAAiC1Z,GACrCmD,EAAO,CAAEsX,MAAOza,GAEtB,OAAO4R,EAAKN,KAAK,CAAER,OAAM3N,W,oBAU3B,YAA0D,IAA1CuW,EAA0C,EAA1CA,KAAM1Z,EAAoC,EAApCA,KAAMmD,EAA8B,EAA9BA,KAA8B,IAAxBwW,UAC1B7I,EAAO,SAAH,YAD8C,MAAZ,SAAY,EAC9C,YAAyB4I,EAAzB,YAAiC1Z,GAE3C,OAAO4R,EAAI,OAAQ,CAAEd,OAAM3N,a,GAlFNsW,I,IAAnBiB,G,WA2Fa,YAA8B,IAA3Bf,EAA2B,EAA3BA,UAAWzK,EAAgB,EAAhBA,MAAOkD,EAAS,EAATA,GAC9B2I,EAAS7L,EAAQ,IAAH,OAAOA,GAAU,GAC/B8L,EAAM9L,GAASkD,EAAK,IAAH,OAAOA,GAAa,GACrCtB,EAAO,SAAH,OAAY6I,GAAZ,OAAwBoB,GAAxB,OAAiCC,GAE3C,OAAOpJ,EAAKtR,IAAI,CAAEwQ,YAIP4J,UCvGTO,GAAiB,SAAUC,GAC/B,MAAO,CACLC,GAAI1B,GACJ2B,GAAIV,IACJQ,IAkDWG,G,WA9Cb,WAAYxL,GAAyB,IAAnBqL,EAAmB,uDAAN,KAE7B,OAFmC,YAE5B,IAAKD,GAAeC,GAApB,CAAiCrL,G,uCAU1C,SAAcA,GAAyB,IAAnBqL,EAAmB,uDAAN,KAC/B,OAAOD,GAAeC,GAAYna,OAAO8O,K,oBAQ3C,SAAcA,GAAyB,IAAnBqL,EAAmB,uDAAN,KAC/B,OAAOD,GAAeC,GAAf,OAAkCrL,K,uBAW3C,SAAiByL,GAAuB,IAAhBC,EAAgB,uDAAR,OACxBC,EAAMF,EAAMnM,MAAM,KAElBwK,EAAY6B,EAAIpU,OAAS,EAAIoU,EAAI,GAAK,SACtC9B,EAAO8B,EAAI,IAAMD,EACjBvb,EAAOwb,EAAI,IAAMF,EACjB1B,EAAU4B,EAAI,IAAM,kBACpB1K,EAAO,GAAH,OAAM6I,EAAN,YAAmBD,EAAnB,YAA2B1Z,EAA3B,YAAmC4Z,GAE7C,MAAO,CAAED,YAAWD,OAAM1Z,OAAM4Z,UAAS9I,Y,KCnDvCZ,GAAY,CAElBA,OAAmB,WACjB,MAAM,IAAI1E,MAAM,oBAElB0E,OAAmB,WACjB,MAAM,IAAI1E,MAAM,oBAMlB0E,OAAmB,WAGjB,OAAO0B,EAAKtR,IAAI,CAAEwQ,KAFL,WAWfZ,QAAoB,YAA8B,IAA3ByJ,EAA2B,EAA3BA,UAAWzK,EAAgB,EAAhBA,MAAOkD,EAAS,EAATA,GACjC2I,EAAS7L,EAAQ,IAAH,OAAOA,GAAU,GAC/B8L,EAAM9L,GAASkD,EAAK,IAAH,OAAOA,GAAa,GACrCtB,EAAO,SAAH,OAAY6I,GAAZ,OAAwBoB,GAAxB,OAAiCC,GAE3C,OAAOpJ,EAAKtR,IAAI,CAAEwQ,WAGLZ,MChCT0K,GAAW,CAWjBA,QAAmB,YAA2B,IAAxB9S,EAAwB,EAAxBA,OAAwB,IAAhB3E,YAAgB,MAAT,GAAS,EACpCwW,EAAmC7R,EAAnC6R,UAAWD,EAAwB5R,EAAxB4R,KAAM1Z,EAAkB8H,EAAlB9H,KAAM4Z,EAAY9R,EAAZ8R,QAEzB9I,EAAO,SAAH,OAAY6I,EAAZ,YAAyBD,EAAzB,YAAiC1Z,EAAjC,YAAyC4Z,GAEnD,OAAOhI,EAAKN,KAAK,CAAER,OAAM3N,UAY3ByX,OAAkB,YAA2B,IAAxB9S,EAAwB,EAAxBA,OAAwB,IAAhB3E,YAAgB,MAAT,GAAS,EAC3CyX,GAASa,QAAQ,CAAE3T,SAAQ3E,KAAM,CAAEQ,KAAMR,MAY3CyX,YAAuB,YAAwB,IAArB9S,EAAqB,EAArBA,OAAQK,EAAa,EAAbA,OAC1BhF,EAAO,CACXuY,IAAK,GAAF,OAAKvT,EAAOwR,UAAZ,YAAyBxR,EAAOuR,KAAhC,YAAwCvR,EAAOnI,KAA/C,YAAuDmI,EAAOyR,UAGnE,OAAOgB,GAASa,QAAQ,CAAE3T,SAAQK,SAAQhF,UAM5CyX,OAAkB,WAChB,MAAM,IAAIpP,MAAM,oBAUlBoP,KAAgB,YAAwC,IAArCjB,EAAqC,EAArCA,UAAWD,EAA0B,EAA1BA,KAAM1Z,EAAoB,EAApBA,KAAM4Z,EAAc,EAAdA,QAClC9I,EAAO,SAAH,OAAY6I,EAAZ,YAAyBD,EAAzB,YAAiC1Z,EAAjC,YAAyC4Z,GAEnD,OAAOhI,EAAKtR,IAAI,CAAEwQ,UAYpB8J,QAAmB,YAAwB,IAArB9S,EAAqB,EAArBA,OAAQK,EAAa,EAAbA,OAG5B,OAFAL,EAAO6R,UAAY,SAEZiB,GAASe,YAAY,CAAE7T,SAAQK,YASxCyS,OAAkB,YAA+B,IAA5BjB,EAA4B,EAA5BA,UAAWD,EAAiB,EAAjBA,KAAM1Z,EAAW,EAAXA,KAC9B8Q,EAAO,SAAH,OAAY6I,EAAZ,YAAyBD,EAAzB,YAAiC1Z,GAE3C,OAAO4R,EAAKtR,IAAI,CAAEwQ,WAGL8J","file":"dist/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Movai\"] = factory();\n\telse\n\t\troot[\"Movai\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","module.exports = require(\"@babel/runtime/helpers/esm/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/esm/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/esm/createClass\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"lodash\");","module.exports = require(\"@babel/runtime/helpers/esm/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/esm/asyncToGenerator\");","module.exports = require(\"rxjs\");","module.exports = require(\"@babel/runtime/helpers/esm/slicedToArray\");","module.exports = require(\"jwt-decode\");","module.exports = require(\"monet\");","module.exports = require(\"@babel/runtime/helpers/esm/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/esm/typeof\");","module.exports = require(\"@babel/runtime/helpers/esm/inherits\");","module.exports = require(\"@babel/runtime/helpers/esm/possibleConstructorReturn\");","import jwtDecode from \"jwt-decode\";\n\nconst Authentication = {};\n\nAuthentication.AuthException = function (message) {\n  this.message = message;\n  this.statusText = message;\n  this.name = \"AuthException\";\n};\n\nAuthentication.getToken = () => {\n  const token = window.localStorage.getItem(\"movai.token\");\n  return token ? token : false;\n};\n\nAuthentication.getRefreshToken = () => {\n  const refreshToken = window.localStorage.getItem(\"movai.refreshToken\");\n  return refreshToken ? refreshToken : false;\n};\n\nAuthentication.getTokenData = () => {\n  try {\n    const token = Authentication.getToken();\n    const message = jwtDecode(token).message;\n\n    const tokenData = {\n      message: message,\n      auth_token: false,\n      refresh_token: Authentication.getRefreshToken(),\n      error: false,\n      access_token: token\n    };\n\n    return tokenData;\n  } catch (error) {\n    return {\n      message: {},\n      error: true\n    };\n  }\n};\n\nAuthentication.login = async (username, password, remember) => {\n  // Cleanup...\n  window.localStorage.removeItem(\"movai.token\");\n  window.localStorage.removeItem(\"movai.refreshToken\");\n  window.localStorage.removeItem(\"movai.tokenRemember\");\n  window.sessionStorage.removeItem(\"movai.session\");\n\n  let headers = {};\n  headers[\"Content-Type\"] = \"application/json\";\n\n  const url = `/token-auth/`;\n\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        remember: remember\n      })\n    });\n\n    const { status } = response;\n    const contentType = response.headers.get(\"content-type\");\n    const isJsonType = contentType && contentType.includes(\"application/json\");\n    let data = \n      isJsonType \n        ? await response.json() \n        : { error: response.statusText };\n\n    if (status === 200) {\n      window.localStorage.setItem(\"movai.token\", data[\"access_token\"]);\n      window.localStorage.setItem(\"movai.refreshToken\", data[\"refresh_token\"]);\n      window.localStorage.setItem(\n        \"movai.tokenRemember\",\n        remember == \"undefined\" ? false : remember\n      );\n      window.sessionStorage.setItem(\"movai.session\", true);\n    }\n\n    return data;\n  } catch (e) {\n    // Returns exception error message\n    return { error: e.toString() }\n  }\n};\n\nAuthentication.logout = redirect => {\n  window.localStorage.removeItem(\"movai.token\");\n  window.localStorage.removeItem(\"movai.refreshToken\");\n  window.localStorage.removeItem(\"movai.tokenRemember\");\n  window.sessionStorage.removeItem(\"movai.session\");\n  window.location.replace(redirect || window.location.origin);\n};\n\nAuthentication.checkLogin = async () => {\n  const token = window.localStorage.getItem(\"movai.token\");\n  const refreshToken = window.localStorage.getItem(\"movai.refreshToken\");\n  const tokenRemember = window.localStorage.getItem(\"movai.tokenRemember\");\n  const sessionFlag = window.sessionStorage.getItem(\"movai.session\");\n\n  if (token === null || refreshToken === null) {\n    return false;\n  }\n\n  let tokenData = null;\n  try {\n    tokenData = jwtDecode(token);\n  } catch (e) {\n    return false;\n  }\n\n  // Check if token expired\n  if (tokenData[\"exp\"] > new Date().getTime() / 1000) {\n    return true;\n  }\n\n  // Check SessionStorage flag\n  if (tokenRemember == \"false\" && sessionFlag === null) {\n    Authentication.logout();\n    return false;\n  }\n\n  // Token has expired... Get new Token\n  if (refreshToken) {\n    // Try to get new token\n    try {\n      // Refresh Token\n      const refreshTokenData = jwtDecode(refreshToken);\n      if (refreshTokenData[\"exp\"] < new Date().getTime() / 1000) {\n        throw \"refresh token has expired\";\n      }\n\n      const url = `/token-refresh/`;\n      const headers = { \"Content-Type\": \"application/json\" };\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify({ token: refreshToken })\n      });\n\n      const { status } = response;\n      const contentType = response.headers.get(\"content-type\");\n      const isJsonType = contentType && contentType.includes(\"application/json\");\n      let data = \n        isJsonType \n          ? await response.json() \n          : null;\n\n      if (status === 200 && data) {\n        window.localStorage.setItem(\"movai.token\", data[\"access_token\"]);\n        window.localStorage.setItem(\n          \"movai.refreshToken\",\n          data[\"refresh_token\"]\n        );\n        return true;\n      }\n    } catch (e) {\n      // Pass\n    }\n  }\n\n  return false;\n};\n\nexport default Authentication;\n","// BroadcastChannel events\nexport const BROADCAST_EVENTS = {\n  ISOPEN: \"ISOPEN\",\n  RPL_ISOPEN: \"RPL-ISOPEN\",\n  OPENDOC: \"OPENDOC\",\n  RPL_OPENDOC: \"RPL-OPENDOC\"\n};\n\n// Robot Logger enum\nexport const LOGGER_STATUS = {\n  init: 0,\n  running: 1,\n  paused: 2,\n  terminated: 3\n};\n","import { Maybe } from \"monet\";\n\nconst Utils = {};\n\nUtils.ofNull = x => Maybe.fromNull(x);\n\nUtils.getter = prop => obj => obj[prop];\n\nUtils.dot = f => g => x => f(g(x));\n\nUtils.maybeGet = prop => Utils.dot(Utils.ofNull)(Utils.getter(prop));\n\nUtils.range = (init, end) => {\n  const { i, e } = Maybe.fromNull(end)\n    .map(x => ({ i: init, e: end }))\n    .orSome({ i: 0, e: init });\n  const ans = [];\n  for (let j = i; j < e; j++) ans.push(j);\n  return ans;\n};\n\nUtils.randomInt = (a, b) => Math.floor(Utils.random(a, b));\n\nUtils.random = (a, b) => {\n  const { init, end } = Maybe.fromNull(b)\n    .map(x => ({ init: a, end: b }))\n    .orSome({ init: 0, end: a });\n  return init + (end - init) * Math.random();\n};\n\nUtils.normalizeStr = str => {\n  // from https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n  return str\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .toLowerCase();\n};\n\n/**\n *\n * @param {*} array\n * @param {*} groupFunction : function x => group class;\n *\n * Usage example:\n *\n * groupBy([1,2,3,4,5,6,7,8,9], x => x % 3) // {0: [3,6,9], 1:[1,4,7], 2:[2,5,8]}\n */\nUtils.groupBy = (array, groupFunction) => {\n  const ans = {};\n  array.forEach(x => {\n    const key = groupFunction(x);\n    if (!ans[key]) ans[key] = [];\n    ans[key].push(x);\n  });\n  return ans;\n};\n\n// From https://flaviocopes.com/how-to-uppercase-first-letter-javascript/\nUtils.capitalize = s => {\n  if (typeof s !== \"string\") return \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\n/**\n * Positive mod function\n */\nUtils.mod = (x, n) => ((x % n) + n) % n;\n\n/**\n * flatten an object\n * https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/flattenObject.md\n */\nUtils.flattenObject = (obj, prefix = \"\") =>\n  Object.keys(obj).reduce((acc, k) => {\n    const pre = prefix.length ? prefix + \".\" : \"\";\n\n    if (typeof obj[k] === \"object\")\n      Object.assign(acc, Utils.flattenObject(obj[k], pre + k));\n    else acc[pre + k] = obj[k];\n\n    return acc;\n  }, {});\n\n/**\n * Generate random Guid\n *\n * eg: acb3792a-bc9c-48fc-8dfc-92b6ddc0ec8c\n */\nUtils.randomGuid = () => {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    // eslint-disable-next-line no-mixed-operators\n    var r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport default Utils;\n","import Utils from \"../Utils/Utils\";\n\nclass BroadcastChannel {\n  constructor(appName) {\n    this.appName = appName;\n    this.subscribed_events = {};\n    this.instance = new window.BroadcastChannel(\"channel\");\n    this.instance.onmessage = this._onMessage;\n    console.log(\"BroadcastChannel start for\", this.appName);\n  }\n\n  /**\n   * Subscribe to an event type.\n   * Whenever an event of this type is triggered, the callback will be executed.\n   *\n   * @param {String} event: event name -> should be a valid event name present in BROADCAST_EVENTS\n   * @param {Function} callback: function to be executed when the event is triggered\n   */\n  subscribe = (event, callback) => {\n    if (this.subscribed_events.hasOwnProperty(event)) return;\n    this.subscribed_events[event] = callback;\n    console.log(\"BroadcastChannel subscribe to\", event);\n  };\n\n  /**\n   * Unsubscribe to an event type.\n   *\n   * @param {String} event: event name -> should be a valid event name present in BROADCAST_EVENTS\n   */\n  unsubscribe = event => {\n    if (!this.subscribed_events.hasOwnProperty(event)) return;\n    delete this.subscribed_events[event];\n    console.log(\"BroadcastChannel unsubscribe to\", event);\n  };\n\n  /**\n   * Post message in broadcast\n   *\n   * @param {String} event: Event name -> should be a valid event name present in BROADCAST_EVENTS\n   * @param {String} target: App name that should receive the event\n   * @param {Object} data: Data to be passed to target app\n   */\n  postMessage = ({ event, target, data }) => {\n    console.log(\"BroadcastChannel postMessage to\", target);\n    this.instance.postMessage({\n      msgId: Utils.randomGuid(),\n      event: event,\n      source: this.appName,\n      target: target,\n      data: data || {}\n    });\n  };\n\n  /**\n   * Close broadcast channel instance\n   */\n  close = () => {\n    this.instance.close();\n    console.log(\"BroadcastChannel close for\", this.appName);\n  };\n\n  /**\n   * Private method that receives all messages from broadcast channel\n   * and sends to the apps if they are subscribed to that event\n   *\n   * @param {Event} message: Message event containing origin and data passed from the postMessage\n   */\n  _onMessage = message => {\n    const messageData = message.data;\n    // Ignore message received if event is not subscribed\n    if (!this.subscribed_events.hasOwnProperty(messageData.event)) return;\n    // Ignore message if target is not appName\n    if (messageData.target !== this.appName) return;\n    // Call subscribed event callback\n    this.subscribed_events[messageData.event](messageData);\n    console.log(\"BroadcastChannel postMessage from\", messageData.source);\n  };\n}\n\nexport default BroadcastChannel;\n","import Authentication from \"../Authentication/Authentication\";\n\nconst { checkLogin, getToken, AuthException } = Authentication;\n\nexport default class AuthWebSocket {\n  constructor({\n    url = this.wsUrl,\n    onOpen = null,\n    onClose = null,\n    onError = null,\n    onMessage = null,\n    connectionHandler = null\n  }) {\n    this.onOpen = onOpen === null ? this._onOpen : onOpen;\n    this.onClose = onClose === null ? this._onClose : onClose;\n    this.onError = onError === null ? this._onError : onError;\n    this.onMessage = onMessage === null ? this._onMessage : onMessage;\n    this.connectionHandler =\n      connectionHandler === null ? this._connectionHandler : connectionHandler;\n\n    this.wsUrl = url;\n    this.socket = false;\n    this.timerId = false;\n    this.connected = false;\n  }\n\n  _onOpen = evt => {\n    console.log(\"Socket Open: \", evt);\n  };\n\n  _onClose = evt => {\n    console.log(\"Socket Close: \", evt);\n\n    this.connected = false;\n\n    // Deal with reconnecting the socket\n    this.socket = null;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n    }\n    this.timerId = setTimeout(() => {\n      this.createSocket();\n    }, 5000);\n  };\n\n  _onError = evt => {\n    this.connected = false;\n    console.log(\"Socket Error: \", evt);\n  };\n\n  _onMessage = evt => {\n    console.log(\"Socket Message: \", evt);\n  };\n\n  _connectionHandler = value => {\n    console.log(\"Invalid Token, no handler specified! \", value);\n  };\n\n  createSocket(url = false) {\n    let sock = false;\n\n    checkLogin()\n      .then(res => {\n        if (!res) {\n          throw new AuthException(\"login error\");\n        }\n\n        url = url !== false ? url : this.wsUrl;\n        //const wsUrl = `${url}?token=${getToken()}`;\n\n        let wsUrl = new URL(url);\n        let params = new URLSearchParams(wsUrl.search.slice(1));\n        params.set(\"token\", getToken());\n        wsUrl.search = params;\n\n        sock = new WebSocket(wsUrl.toString());\n        sock.onopen = this.onOpen;\n        sock.onerror = this.onError;\n        sock.onclose = this.onClose;\n        sock.onmessage = this.onMessage;\n\n        this.socket = sock;\n      })\n      .catch(e => {\n        if (e.name === \"AuthException\") {\n          this.connectionHandler(false);\n        }\n      });\n  }\n\n  send(data) {\n    checkLogin()\n      .then(res => {\n        if (!res) {\n          throw new AuthException(\"login error\");\n        }\n\n        this.socket.send(data);\n      })\n      .catch(e => {\n        switch (e.name) {\n          case \"AuthException\":\n            this.connectionHandler(false);\n            break;\n\n          case \"InvalidStateError\":\n            // In case of the socket is not-ready, re-try sending the message until success\n            var self = this;\n            let sub_interval = undefined;\n            sub_interval = setInterval(\n              () => {\n                if (self.socket.readyState === 1) {\n                  clearInterval(sub_interval);\n                  self.socket.send(data);\n                }\n              },\n              400,\n              sub_interval\n            );\n            break;\n        }\n      });\n  }\n\n  close() {\n    if (this.socket) {\n      this.socket.close();\n      clearTimeout(this.timerId);\n      this.connected = false;\n    }\n  }\n}\n","import AuthWebSocket from \"../AuthWebSocket/AuthWebSocket\";\nimport Authentication from \"../Authentication/Authentication\";\nconst { getToken, AuthException, checkLogin } = Authentication;\n\nconst WSSUB_STATES = {\n  NOT_INIT: 0,\n  INIT: 1,\n  CONNECTING: 2,\n  OPEN: 3,\n  CLOSED: 4\n};\n\nconst CONNECTION = {\n  online: 0,\n  offline: 1\n};\n\n/**\n * WSSub - class to handle redis subscribers using authenticated websockets\n */\nclass WSSub {\n  constructor() {\n    const isHttps = window.location.protocol === \"https:\";\n    this.host = `${window.location.hostname}:${window.location.port}`;\n    this.url = `${isHttps ? \"wss\" : \"ws\"}://${this.host}/ws/subscriber`;\n    this.REST_API = `${window.location.protocol}//${this.host}/api/v1/`;\n    this.RECONN_TIMEOUT = 3000;\n    this.RECONN_VALIDATION_TIMEOUT = 5000;\n    this.RESEND_TIMEOUT = 1000;\n    this.RETRIES = 3;\n    this.NORMAL_CLOSE_EVT = 1000;\n\n    // supported commands\n    this.commands = {\n      SUBSCRIBE: \"subscribe\",\n      UNSUBSCRIBE: \"unsubscribe\",\n      LIST: \"list\",\n      EXECUTE: \"execute\"\n    };\n\n    this.onOnline = () => {};\n    this.onOffline = () => {};\n    this.connectionState = CONNECTION.online;\n\n    this.websocket = null;\n    // map with callbacks related with pattern subscription\n    this.sub_callbacks = new Map();\n    // map with callbacks related with event subscription\n    this.evt_callbacks = new Map();\n    // to abort a pending fetch\n  }\n\n  fetchTimeout = (url, options, timeout = 5000) => {\n    return Promise.race([\n      fetch(url, options),\n      new Promise((_, reject) =>\n        setTimeout(() => {\n          reject(new Error(\"Timeout\"));\n        }, timeout)\n      )\n    ]);\n  };\n\n  /**\n   * get the connection state\n   * https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/readyState\n   */\n  getState = () => {\n    return this.websocket?.socket?.readyState || WebSocket.CLOSED;\n  };\n\n  /**\n   * initialize the socket instance\n   */\n\n  initSocket = () => {\n    if (this.websocket) return this;\n    this.status = WSSUB_STATES.INIT;\n\n    const { url, onOpen, onClose, onError, onMessage, onAuthError } = this;\n\n    // TODO extend WSSub from AuthWebSocket instead\n    this.websocket = new AuthWebSocket({\n      url,\n      onOpen,\n      onClose,\n      onError,\n      onMessage,\n      connectionHandler: onAuthError\n    });\n\n    this.connect();\n    return this;\n  };\n\n  /**\n   * connection initialization\n   */\n  connect = () => {\n    this.status = WSSUB_STATES.CONNECTING;\n    this.websocket.createSocket();\n\n    return this;\n  };\n\n  /**\n   * try to reconnect\n   */\n  reConnect = () => {\n    const { CONNECTING, OPEN } = WSSUB_STATES;\n\n    if ([CONNECTING, OPEN].includes(this.status)) return;\n\n    this.status = CONNECTING;\n\n    setTimeout(this.connect, this.RECONN_TIMEOUT);\n  };\n\n  /**\n   * creates a new pair if does not exits and returns it\n   * @param {Map} map sub_callbacks or evt_callbacks\n   * @param {string} pattern is the map key\n   *\n   * @returns {array} the value associated with the pattern\n   */\n  getOrCreate = (map, pattern) => {\n    return map.get(pattern) || map.set(pattern, []).get(pattern);\n  };\n\n  /**\n   * push callback to the map\n   * @param {Map} sub_callbacks or evt_callbacks\n   * @param {string} pattern is the map key\n   * @param {function} callback function to execute\n   */\n  pushCallback = (map, pattern, callback) => {\n    this.getOrCreate(map, pattern).push(callback);\n\n    return this;\n  };\n\n  /**\n   * add subscriber callback\n   * @param {function} callback function to execute\n   * @param {string} pattern pattern to subscribe to\n   */\n  addSubscriberCallback = (callback, pattern) => {\n    if (typeof callback !== \"function\") return this;\n\n    return this.pushCallback(this.sub_callbacks, pattern, callback);\n  };\n\n  /**\n   * add event callback\n   * @param {strin} command command to send; event to subscribe\n   * @param {function} callback function to execute\n   * @param {string} pattern pattern to subscribe to\n   */\n  addEventCallback = (command, callback, pattern) => {\n    if (typeof callback !== \"function\") return this;\n\n    const _sufix = pattern ? `/${pattern}` : \"\";\n    const _pattern = `${command}${_sufix}`;\n\n    return this.pushCallback(this.evt_callbacks, _pattern, callback);\n  };\n\n  /**\n   * sends a message to the server\n   * @param {any} message to send to the server\n   */\n  send = (message, retry = 0) => {\n    try {\n      // do not keep trying to send the message after 3 times\n      if (retry >= this.RETRIES) throw new Error(\"Timeout sending message\");\n      // stringify the message before sending it\n      // try to resend if the connection is not yet open\n      this.getState() !== WebSocket.OPEN\n        ? setTimeout(this.send, this.RESEND_TIMEOUT, message, retry + 1)\n        : this.websocket.send(JSON.stringify(message));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  /**\n   * execute callbacks subscribed to events or patterns\n   * @param {string} pattern pattern or event\n   * @param {bool} is_command when true callback only executes once\n   * @param {any} message data to pass to the callback\n   */\n  dispatch = (pattern, is_command = true, message) => {\n    const _map = is_command ? this.evt_callbacks : this.sub_callbacks;\n    const _callbacks = _map.get(pattern) || [];\n\n    _callbacks.forEach(cb => {\n      setTimeout(cb, 0, message);\n    });\n\n    if (is_command) _map.delete(pattern);\n  };\n\n  /**\n   * format the message to send to the server\n   * @param {string} event event to send to the server\n   * @param {string} pattern pattern to send to the server\n   */\n  fmtMessage = (event, pattern) => ({ event, pattern });\n\n  /**\n   * triggered when the socket opens\n   */\n  onOpen = evt => {\n    this.status = WSSUB_STATES.OPEN;\n\n    // send current subscriptions to the server\n    this.reSubscribe();\n    this.dispatch(\"onopen\");\n  };\n\n  /**\n   * triggered when the socket closes\n   */\n  onClose = evt => {\n    this.dispatch(\"onclose\");\n    this.status = WSSUB_STATES.CLOSED;\n\n    // reconnect if the connection was not closed on purpose\n    if (evt.code !== this.NORMAL_CLOSE_EVT) {\n      this.reConnect();\n    }\n  };\n\n  /**\n   * triggered when the socket raises an error\n   */\n  onError = evt => {\n    this.dispatch(\"onerror\");\n  };\n\n  /**\n   * triggered whit authentication error\n   */\n  onAuthError = () => {\n    // reconnect on authentication error\n    this.reConnect();\n  };\n\n  /**\n   * triggered when the socket receives a message\n   */\n  onMessage = msg => {\n    try {\n      const data = JSON.parse(msg.data);\n      if (data.error) throw new Error(data.error);\n\n      const { event } = data;\n      const is_command = Object.values(this.commands).includes(event);\n      const { LIST, EXECUTE } = this.commands;\n\n      const rcv_patterns = [LIST, EXECUTE].includes(event)\n        ? [event]\n        : data.patterns;\n\n      rcv_patterns.forEach(pattern => {\n        const _prefix = is_command ? `${event}/` : \"\";\n        const _pattern = `${_prefix}${JSON.stringify(pattern)}`;\n\n        this.dispatch(_pattern, is_command, data);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  /**\n   * Start offline validation\n   * @param {Object} callback\n   *  {\n   *    onOnline  -> function to be called when the user is back online\n   *    onOffline -> function to be called when the user is offline\n   *  }\n   * @returns MasterDB instance\n   */\n  offlineValidation = ({\n    onOnline = this.onOnline,\n    onOffline = this.onOffline\n  }) => {\n    this.onOnline = onOnline;\n    this.onOffline = onOffline;\n    // Set interval to send heartbeat\n    clearInterval(this.connectionCheckTimeout);\n    this.connectionCheckTimeout = setInterval(\n      this.checkConnection,\n      this.RECONN_VALIDATION_TIMEOUT\n    );\n    // Return MasterDB instance\n    return this;\n  };\n\n  /**\n   * Retry connection\n   * @returns connection (heartbeat) promise\n   */\n  retryConnection = () => {\n    // Check connection again\n    const connectionPromise = this.checkConnection();\n    // Clear interval to start again\n    clearInterval(this.connectionCheckTimeout);\n    this.connectionCheckTimeout = setInterval(\n      this.checkConnection,\n      this.RECONN_VALIDATION_TIMEOUT\n    );\n    // Return promise\n    return connectionPromise;\n  };\n\n  /**\n   * Check connection state by doing requests\n   * @returns Heartbeat fetch promise\n   */\n  checkConnection = () => {\n    return fetch(`/token-verify/`, {\n      method: \"POST\",\n      body: JSON.stringify({ token: \"\" })\n    })\n      .then(res => {\n        if (this.connectionState === CONNECTION.online) return;\n        this.connectionState = CONNECTION.online;\n        this.onOnline();\n      })\n      .catch(err => {\n        if (this.connectionState === CONNECTION.offline) return;\n        this.connectionState = CONNECTION.offline;\n        this.onOffline();\n      });\n  };\n\n  /**\n   * subscribe to a redis pattern\n   * @param {string} pattern pattern to subscribe to\n   * @param {function} callback function to execute on changes\n   * @param {function} evt_callback function to execute on the subscription event\n   *\n   */\n  subscribe = (pattern, callback, evt_callback) => {\n    const { SUBSCRIBE } = this.commands;\n    const message = this.fmtMessage(SUBSCRIBE, pattern);\n    const _pattern = JSON.stringify(pattern);\n\n    this.initSocket()\n      .addSubscriberCallback(callback, _pattern)\n      .addEventCallback(SUBSCRIBE, evt_callback, _pattern)\n      .send(message);\n  };\n\n  /**\n   * send current subscriptions to the server\n   */\n  reSubscribe = () => {\n    const { SUBSCRIBE } = this.commands;\n\n    Array.from(this.sub_callbacks.keys()).forEach(key => {\n      const message = this.fmtMessage(SUBSCRIBE, JSON.parse(key));\n      this.send(message);\n    });\n  };\n\n  /**\n   * unsubscribe from changes related to the pattern\n   * @param {string} pattern pattern to unsubscribe\n   * @param {function} callback function to execute on event unsubscribe\n   *\n   */\n  unsubscribe = (pattern, callback) => {\n    const { UNSUBSCRIBE } = this.commands;\n    const message = this.fmtMessage(UNSUBSCRIBE, pattern);\n    const _pattern = JSON.stringify(pattern);\n\n    this.initSocket()\n      .addEventCallback(UNSUBSCRIBE, callback, _pattern)\n      .send(message);\n  };\n\n  /**\n   * get the list of the current pattern subscriptions\n   * @param {function} evt_callback function to execute on event\n   */\n  list = evt_callback => {\n    const { LIST } = this.commands;\n    const message = this.fmtMessage(LIST);\n\n    this.initSocket().addEventCallback(LIST, evt_callback).send(message);\n  };\n\n  /**\n   * execute - executes a remote procedure call\n   * @param {string} remote_callback name of the remote callback to execute\n   * @param {object} data data to send to the remote callback\n   * @param {function} evt_callback function to execute on event\n   */\n  execute = (remote_callback, data, evt_callback) => {\n    const { EXECUTE } = this.commands;\n    const message = { event: EXECUTE, callback: remote_callback, ...data };\n\n    this.initSocket().addEventCallback(EXECUTE, evt_callback).send(message);\n  };\n\n  /**\n   * subscribe to events onopen, onclose, onerror\n   * @param {string} event name of the event to subscribe\n   * @param {function} callback function to execute on event\n   */\n  onEvent = (event, callback) => {\n    this.initSocket().addEventCallback(event, callback);\n  };\n\n  /**\n   * close the socket connection\n   */\n  close = () => {\n    this.websocket.close();\n    this.websocket = null;\n  };\n\n  /**\n   * the following code should be moved to a separate class\n   * added to support current applications\n   * TODO. review and move\n   */\n\n  checkTest = (pattern, data, is_pattern, one_shot) => {\n    return new Promise((resolve, reject) => {\n      this.dispatch(pattern, data, is_pattern, one_shot);\n      if (true) {\n        resolve(\"DONE\");\n      }\n    });\n  };\n\n  /* Get value from key in Var, scope fleet or global */\n  getVar = (key, callback = undefined, scope = \"global\") => {\n    if (![\"global\", \"fleet\"].includes(scope)) {\n      throw \"Only fleet and global scopes available.\";\n    }\n    if (scope === \"fleet\") {\n      // key format: robot_name@key_name\n      if (key.split(\"@\").length < 2) {\n        throw \"Wrong key format (robot_name@key_name)\";\n      }\n    }\n    const url = this.REST_API + \"database/\" + scope + \"/\" + key + \"/\";\n\n    checkLogin().then(res => {\n      fetch(url)\n        .then(response => response.json())\n\n        .then(data => {\n          if (callback) {\n            callback(data);\n          } else {\n            //NOTHING\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    });\n  };\n\n  /* Set value from key in Var, scope fleet or global */\n  setVar = (key, value, callback = undefined, scope = \"global\") => {\n    if (![\"global\", \"fleet\"].includes(scope)) {\n      throw \"Only fleet and global scopes available.\";\n    }\n    if (scope === \"fleet\") {\n      // key format: robot_name@key_name\n      const values = key.split(\"@\");\n      if (key.split(\"@\").length < 2) {\n        throw \"Wrong key format (robot_name@key_name)\";\n      }\n    }\n    const data = { key: key, scope: scope, value: value };\n    const url = this.REST_API + \"database/\";\n\n    checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          callback(res);\n        }\n      });\n    });\n  };\n\n  /**\n   * GET value from url\n   * @param url String\n   * @param callback function\n   * @memberof Database\n   */\n  get = async (url, callback = undefined) => {\n    checkLogin().then(async res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n      this.fetchTimeout(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      })\n        .then(res => {\n          if (callback) {\n            res\n              .json()\n              .then(data => {\n                callback(data, res);\n              })\n              .catch(e => {\n                callback(undefined, e);\n              });\n          }\n        })\n        .catch(e => callback(undefined, e));\n    });\n  };\n\n  /**\n   * Set value from key in Scope\n   * @param scope String\n   * @param name String - Instance Name\n   * @param key String - Key to override\n   * @param value Obj\n   * @param callback function\n   * @memberof Database\n   */\n  post = (scope, name, key, value, callback = undefined) => {\n    let url = this.REST_API + scope + \"/\" + name + \"/\";\n    if (name === undefined) {\n      url = this.REST_API + scope + \"/\";\n    }\n\n    checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({ key: key, data: value }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res\n            .json()\n            .then(data => {\n              callback(data, res);\n            })\n            .catch(e => {\n              callback(undefined, e);\n            });\n        }\n      });\n    });\n  };\n\n  upload = (packageName, key, value, callback = undefined) => {\n    const url = `${this.REST_API}upload/${packageName}/`;\n    const formData = new FormData();\n    formData.append(\"name\", key);\n    formData.append(`data`, value);\n    fetch(url, {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        Authorization: `Bearer ${getToken()}`\n      }\n    })\n      .then(res => res.json())\n      .then(callback);\n  };\n\n  /**\n   * Update key\n   * @param scope String\n   * @param name String - Instance Name\n   * @param value Obj\n   * @param callback function\n   * @memberof Database\n   */\n  put = (scope, name, value, callback = undefined) => {\n    let url = this.REST_API + scope + \"/\" + name + \"/\";\n\n    if (name === undefined) {\n      url = this.REST_API + scope + \"/\";\n    }\n\n    checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"PUT\",\n        body: JSON.stringify(value),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res\n            .json()\n            .then(data => {\n              callback(data, res);\n            })\n            .catch(e => {\n              callback(undefined, res);\n\n              if (process.env.NODE_ENV === \"development\") {\n                alert(\n                  \"Development Mode \\n\" +\n                    \"Status: \" +\n                    res.status +\n                    \"\\n\" +\n                    \"Error: \" +\n                    res.statusText\n                );\n              }\n            });\n        }\n      });\n    });\n  };\n\n  /**\n   * Set value from key in Scope\n   * @param scope String\n   * @param name String - Instance Name\n   * @param key String - Key to override\n   * @param value Obj\n   * @param callback function\n   * @memberof Database\n   */\n  delete = (scope, name, callback = undefined, data = {}) => {\n    let url = this.REST_API + scope + \"/\" + name + \"/\";\n    if (name === undefined) {\n      url = this.REST_API + scope + \"/\";\n      return;\n    }\n\n    checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"DELETE\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res\n            .json()\n            .then(data => {\n              callback(data, res);\n            })\n            .catch(e => {\n              callback(undefined, res);\n\n              if (process.env.NODE_ENV === \"development\") {\n                alert(\n                  \"Development Mode \\n\" +\n                    \"Status: \" +\n                    res.status +\n                    \"\\n\" +\n                    \"Error: \" +\n                    res.statusText\n                );\n              }\n            });\n        }\n      });\n    });\n  };\n\n  /**\n   * Set value from key in Scope\n   * @param cloudFunction String - callback name\n   * @param func String - Function in the callback. default \"\"\n   * @param args Object - Args {key:value}... key is the param in the function\n   * @param callback func - Callback to parse the response\n   * @memberof Database\n   */\n  cloudFunction = (cloudFunction, func = \"\", args, callback = undefined) => {\n    return checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      const url = this.REST_API + \"function/\" + cloudFunction + \"/\";\n      return fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({ func: func, args: args }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res\n            .json()\n            .then(data => callback(data))\n            .catch(e => {\n              console.log(\"cloudFunction error\", e);\n              callback({ result: false, error: e });\n            });\n        }\n      });\n    });\n  };\n\n  /**\n   * Set tabs in a currentUser\n   * @param scope String\n   * @param name String - Instance Name\n   * @param key String - Key to override\n   * @param value Obj\n   * @param callback function\n   * @memberof Database\n   */\n  postTabs = (name, value, callback = undefined) => {\n    let scope = \"User\";\n    let url = this.REST_API + scope + \"/\" + name + \"/\";\n    if (name === undefined) {\n      url = this.REST_API + scope + \"/\";\n      return;\n    }\n    let newValue = value.map(obj => {\n      return { componentName: obj.componentName, name: obj.name };\n    });\n    const key_workspace = {\n      Workspace: \"*\"\n    };\n\n    checkLogin().then(res => {\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({ key: key_workspace, data: newValue }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res\n            .json()\n            .then(data => {\n              callback(data, res);\n            })\n            .catch(e => {\n              callback(undefined, res);\n\n              if (process.env.NODE_ENV === \"development\") {\n                alert(\n                  \"Development Mode \\n\" +\n                    \"Status: \" +\n                    res.status +\n                    \"\\n\" +\n                    \"Error: \" +\n                    res.statusText\n                );\n              }\n            });\n        }\n      });\n    });\n  };\n}\n\nexport default WSSub;\n","import WSSub from \"./WSSub\";\n/**\n * A Database singleton\n */\nconst MasterDB = new WSSub();\nexport default MasterDB;\n","const RestBase = {};\n\n/**\n * Encodes the values of an object\n * @param {Object} data Object to encode\n */\nRestBase.encodeURI = data => {\n  const output = {};\n  for (const [key, value] of Object.entries(data)) {\n    output[key] = encodeURIComponent(value);\n  }\n  return output;\n};\n\n/**\n * Get composed url\n * @param {String} path Relative path\n */\nRestBase.getUrl = ({ path, search = {} }) => {\n  const host = `${window.location.hostname}:${window.location.port}`;\n\n  const params = new URLSearchParams(RestBase.encodeURI(search));\n\n  return `${\n    window.location.protocol\n  }//${host}/api/${path}?${params.toString()}`;\n};\n\n/**\n * Execute request\n * @param {String} path Relative path\n * @param {String} method Request method\n * @param {Object} body Request payload\n */\nRestBase._request = ({\n  url,\n  path,\n  method = \"GET\",\n  body = {},\n  search,\n  customHeaders = {}\n}) => {\n  const headers = customHeaders;\n  const requestUrl = url ? url : RestBase.getUrl({ path, search });\n  const skipBody = [\"HEAD\", \"GET\"];\n\n  const payload = {\n    method,\n    headers\n  };\n\n  if (!skipBody.includes(method)) payload.body = JSON.stringify(body);\n\n  return fetch(requestUrl, payload).then(response => {\n    if (!response.ok) {\n      return Promise.reject(response);\n    }\n    return response.json();\n  });\n};\n\n/**\n * Execute GET request\n * @param {String} path Relative path\n * @param {String} search Search parameters\n */\n\nRestBase.get = ({ url, path, search, customHeaders = {} }) => {\n  return RestBase._request({ url, path, search, customHeaders });\n};\n\n/**\n * Execute POST request\n * @param {String} path Relative path\n * @param {Object} body Request payload\n */\nRestBase.post = ({ url, path, body, customHeaders = {} }) => {\n  const method = \"POST\";\n\n  return RestBase._request({ url, path, method, body, customHeaders });\n};\n\n/**\n * Execute PUT request\n * @param {String} path Relative path\n * @param {Object} body Request payload\n */\nRestBase.put = ({ url, path, body, customHeaders = {} }) => {\n  const method = \"PUT\";\n\n  return RestBase._request({ url, path, method, body, customHeaders });\n};\n\n/**\n * Execute DELETE request\n * @param {String} path Relative path\n */\nRestBase.delete = ({ url, path, body, customHeaders = {} }) => {\n  const method = \"DELETE\";\n\n  return RestBase._request({ url, path, method, body, customHeaders });\n};\n\n/**\n * Upload file to a specific Package\n * @param {String} packageName Package name\n * @param {String} key Key to insert in the package\n * @param {String} value Value of the key\n */\nRestBase.upload = ({ packageName, key, value, customHeaders = {} }) => {\n  const path = `v1/upload/${packageName}/`;\n  const body = new FormData();\n  body.append(\"name\", key);\n  body.append(\"data\", value);\n\n  return RestBase.post({ path, body, customHeaders });\n};\n\n/**\n * Execute remote procedure call\n * @param {String} cbName Callback name\n * @param {String} func Function in the callback\n * @param {Object} args Args to pass to the function\n */\nRestBase.cloudFunction = ({ cbName, func = \"\", args, customHeaders = {} }) => {\n  const path = `v1/function/${cbName}/`;\n  const body = { func, args };\n\n  return RestBase.post({ path, body, customHeaders }).then(response =>\n    response.json()\n  );\n};\n\nRestBase.validScope = scope => [\"global\", \"fleet\"].includes(scope);\nRestBase.validKey = key => key.split(\"@\") >= 2;\nRestBase.validateVar = (key, scope) => {\n  const validators = [\n    {\n      fn: scope => RestBase.validScope(scope),\n      error: \"Invalid scope\"\n    },\n    {\n      fn: key => RestBase.validKey(key),\n      error: \"Key format should be <robot name>@<key name>\"\n    }\n  ];\n\n  validators.forEach(obj => {\n    if (!obj.fn()) {\n      throw new Error(obj.error);\n    }\n  });\n};\n\nRestBase.getVar = ({ key, scope = \"global\", customHeaders = {} }) => {\n  RestBase.validateVar(key, scope);\n\n  const path = `v1/database/${scope}/${key}/`;\n\n  return RestBase.get({ path, customHeaders }).then(response =>\n    response.json()\n  );\n};\n\nRestBase.setVar = ({ key, value, scope = \"global\", customHeaders = {} }) => {\n  RestBase.validateVar(key, scope);\n\n  const path = `v1/database/`;\n  const body = { key, scope, value };\n\n  return RestBase.post({ path, body, customHeaders }).then(response =>\n    response.json()\n  );\n};\n\nexport default RestBase;\n","import Authentication from \"../Authentication/Authentication\";\nconst { checkLogin, AuthException, getToken } = Authentication;\n\nconst withAuth = (obj, props = {}) => {\n  const handler = {\n    __checkLogin: (target, prop) => {\n      return args =>\n        checkLogin().then(res => {\n          // check login error\n          if (!res) {\n            throw new AuthException(\"Login error\");\n          }\n\n          // inject authorization headers\n          const customHeaders = {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getToken()}`\n          };\n\n          // return the original call with custom headers and original arguments\n          return Reflect.get(target, prop)({ customHeaders, ...args });\n        });\n    },\n\n    get: function (target, prop) {\n      return this.__checkLogin(target, prop);\n    }\n  };\n\n  return new Proxy(Object.assign(obj, props), handler);\n};\n\nexport default withAuth;\n","import RestBase from \"./RestBase\";\nimport withAuth from \"./WithAuth\";\n\nconst Rest = withAuth(RestBase);\n\nexport default Rest;\n","import MasterDB from \"../Database/MasterDB\";\nimport Util from \"../Utils/Utils\";\nimport Rest from \"../Rest/Rest\";\nimport { LOGGER_STATUS } from \"../Utils/constants\";\n\nclass Robot {\n  constructor(id, ip = \"\", name = \"\") {\n    this.id = id;\n    this.ip = ip;\n    this.name = name;\n    this.logs = [];\n    this.logger = {\n      status: LOGGER_STATUS.init,\n      timeout: null,\n      time: 3000\n    };\n    this.logSubscriptions = {};\n    this.onGetIPCallback = () => {};\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                      Class methods                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   * Subscribe to a robot property from redis\n   *\n   * @param {String} property: Property name\n   * @param {String} propValue: Property value\n   * @param {Function} loadCallback: Function to be called on data load\n   * @param {Function} updateCallback: Function to be called on data updated\n   */\n  subscribe({\n    property,\n    propValue = \"*\",\n    onLoad = () => {},\n    onUpdate = () => {}\n  }) {\n    MasterDB.subscribe(\n      {\n        Scope: Robot.SCOPE,\n        Name: this.id,\n        [property]: propValue\n      },\n      update => onUpdate(update),\n      data => onLoad(data)\n    );\n  }\n\n  /**\n   * Unsubscribe to a robot property from redis\n   *\n   * @param {String} property: Property name\n   * @param {String} propValue: Property value\n   */\n  unsubscribe({ property, propValue = \"*\" }) {\n    MasterDB.unsubscribe({\n      Scope: Robot.SCOPE,\n      Name: this.id,\n      [property]: propValue\n    });\n  }\n\n  /**\n   * Unsubscribe to a robot property from redis\n   *\n   * @param {Function} callback: Function to be called on robot IP data load\n   */\n  getIP(callback = () => {}) {\n    if (this.ip !== \"\") return this.ip;\n    // Request IP\n    this.onGetIPCallback = callback;\n    this.subscribe(\"IP\", this._loadIP(this));\n  }\n\n  /**\n   * Start robot logger\n   */\n  startLogger() {\n    this.logger.status = LOGGER_STATUS.running;\n    this._getLogs();\n  }\n\n  /**\n   * Stop robot logger\n   */\n  stopLogger() {\n    this.logger.status = LOGGER_STATUS.paused;\n    clearTimeout(this.logger.timeout);\n  }\n\n  /**\n   * Subscribe to the robot logs\n   *\n   * @param {Function} callback: Function to be called on get logs\n   */\n  subscribeToLogs(callback) {\n    const subscriptionId = Util.randomGuid();\n    this.logSubscriptions[subscriptionId] = { send: callback };\n    if (this.logger.status !== LOGGER_STATUS.running) this.startLogger();\n    else if (this.logs) callback(this.logs);\n    return subscriptionId;\n  }\n\n  /**\n   * Unsubscribe to the robot logs\n   *\n   * @param {String} subscriptionId: Subscription id that needs to be canceled\n   */\n  unsubscribeToLogs(subscriptionId) {\n    if (!subscriptionId || !this.logSubscriptions[subscriptionId]) return;\n    delete this.logSubscriptions[subscriptionId];\n    if (Object.keys(this.logSubscriptions).length === 0) this.stopLogger();\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Private functions                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   * Get robot logs\n   */\n  _getLogs() {\n    if (Object.keys(this.logSubscriptions).length === 0) return; // Stop if there's no active subscriptions\n    if (this.logger.status !== LOGGER_STATUS.running) return; // Or if logger status is not \"running\"\n    if (!this.ip) return; // Or if robot has no IP\n    // Get logs from server\n    const url = `http://${this.ip}/api/v1/logs/?level=info,error,warning,critical&limit=50&tags=ui`;\n    Rest.get({ url })\n      .then(response => {\n        if (!response || !response.data || !response.data.length) return;\n        // Cache log data and send response to active subscriptions\n        this.logs = response.data;\n        for (const key in this.logSubscriptions) {\n          this.logSubscriptions[key].send(response.data);\n        }\n        // Enqueue next request\n        this._enqueueNextRequest();\n      })\n      .catch(err => {\n        // Enqueue next request\n        this.logger.time += 1000;\n        this._enqueueNextRequest();\n      });\n  }\n\n  /**\n   * Enqueue next request to get logs\n   */\n  _enqueueNextRequest() {\n    clearTimeout(this.logger.timeout);\n    this.logger.timeout = setTimeout(() => this._getLogs(), this.logger.time);\n  }\n\n  /**\n   * Function to be called when robot IP subscribed loads\n   *\n   * @param {Object} data: Data returned on IP subscribe event\n   */\n  _loadIP(robot) {\n    return data => {\n      if (data.value) {\n        robot.ip = data.value.Robot[robot.id].IP;\n        robot.onGetIPCallback(robot.ip);\n      }\n      // Set local IP as null\n      else robot.ip = null;\n    };\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Static attributes                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   * Robot scope name\n   */\n  static SCOPE = \"Robot\";\n}\n\nexport default Robot;\n","import MasterDB from \"../Database/MasterDB\";\nimport Util from \"../Utils/Utils\";\nimport Robot from \"./Robot\";\n\nclass RobotManager {\n  constructor() {\n    if (instance) return instance;\n    this.randomId = Util.randomGuid();\n    this.robots = {};\n    this.cachedRobots = {};\n    this.subscribeToRedis();\n    instance = this;\n  }\n\n  subscribeToRedis() {\n    MasterDB.subscribe(\n      { Scope: \"Robot\", RobotName: \"*\", IP: \"*\" },\n      () => {},\n      data => {\n        if (data.value) {\n          this.cachedRobots = data.value.Robot;\n        }\n      }\n    );\n  }\n\n  getAll() {\n    return this.cachedRobots;\n  }\n\n  getRobot(id) {\n    if (this.robots[id]) return this.robots[id];\n    let newRobot;\n    const cached = this.cachedRobots[id];\n    // If requested robot id is already in cache\n    if (cached) {\n      newRobot = new Robot(id, cached.IP, cached.RobotName);\n    }\n    // If requested robot is not in cache\n    else {\n      newRobot = new Robot(id);\n    }\n    // Add robot to cache and return\n    this.robots[id] = newRobot;\n    return newRobot;\n  }\n}\n\nvar instance = null;\nexport default RobotManager;\n","import Authentication from \"../Authentication/Authentication\";\nimport AuthWebSocket from \"../AuthWebSocket/AuthWebSocket\";\nconst { getToken, AuthException, checkLogin } = Authentication;\n\nclass Database {\n  constructor() {\n    this.host = `${window.location.hostname}:${window.location.port}`;\n    const isHttps = window.location.protocol === \"https:\";\n    this.WS_API = `${isHttps ? \"wss\" : \"ws\"}://${this.host}/ws/subscriber`;\n    this.REST_API = `${window.location.protocol}//${this.host}/api/v1/`;\n    this.callbacks = {};\n    this.evt_callbacks = {};\n    this.timeout = 3000;\n    this.websocket = undefined;\n    this.connect();\n  }\n\n  connect = () => {\n    this.websocket = new AuthWebSocket({\n      url: this.WS_API,\n      onOpen: this.onOpen,\n      onClose: this.onClose,\n      onError: this.onError,\n      onMessage: this.onMessage,\n      connectionHandler: null\n    });\n    this.websocket.createSocket();\n  };\n\n  onOpen = evt => {\n    this.dispatch(\"onopen\", undefined);\n  };\n\n  onClose = evt => {\n    this.dispatch(\"onclose\", undefined);\n    if (evt.code !== 1000) {\n      window.setTimeout(this.connect(), this.timeout);\n    }\n  };\n\n  onMessage = evt => {\n    let data;\n    try {\n      data = JSON.parse(evt.data);\n    } catch (err) {\n      console.error(err);\n      return;\n    }\n    if (data.error) {\n      console.error(data.error);\n      return;\n    }\n    let patterns = data.patterns;\n    let is_pattern = true;\n    let one_shot = false;\n    if ([\"list\", \"unsubscribe\", \"subscribe\"].includes(data.event)) {\n      patterns = patterns.map(p => {\n        if (data.event === \"unsubscribe\") {\n          delete this.callbacks[JSON.stringify(p)];\n        }\n        return data.event + \"/\" + JSON.stringify(p);\n      });\n      if (data.event === \"list\") {\n        patterns = [\"list\"];\n      }\n\n      is_pattern = false;\n      one_shot = true;\n    }\n\n    patterns.map(pattern => {\n      this.dispatch(pattern, data, is_pattern, one_shot);\n    });\n  };\n\n  /////TEST\n  checkTest = (pattern, data, is_pattern, one_shot) => {\n    return new Promise((resolve, reject) => {\n      this.dispatch(pattern, data, is_pattern, one_shot);\n      if (true) {\n        resolve(\"DONE\");\n      }\n    });\n  };\n\n  onError = evt => {\n    this.dispatch(\"onerror\", undefined);\n  };\n\n  /* Subscribe to websocket events onopen, onclose, onerror*/\n  onEvent = (event_name, callback = undefined) => {\n    this.evt_callbacks[event_name] = this.evt_callbacks[event_name] || [];\n    this.evt_callbacks[event_name].push(callback);\n  };\n\n  close = () => this.websocket.close();\n\n  /* Subscribe to redis pattern */\n  subscribe = (_pattern, callback = undefined, evt_callback = undefined) => {\n    const message = { event: \"subscribe\", pattern: _pattern };\n    let pattern = JSON.stringify(_pattern);\n    this.callbacks[pattern] = this.callbacks[pattern] || [];\n    this.callbacks[pattern].push(callback);\n    if (evt_callback) {\n      this.evt_callbacks[\"subscribe/\" + pattern] =\n        this.evt_callbacks[\"subscribe\" + pattern] || [];\n      this.evt_callbacks[\"subscribe/\" + pattern].push(evt_callback);\n    }\n    this._send(message);\n  };\n\n  unsubscribe = (_pattern, evt_callback = undefined) => {\n    console.log(\"Unsubscribe called \" + JSON.stringify(_pattern));\n    const message = { event: \"unsubscribe\", pattern: _pattern };\n    var pattern = JSON.stringify(_pattern);\n    if (evt_callback) {\n      this.evt_callbacks[\"unsubscribe/\" + pattern] =\n        this.evt_callbacks[\"unsubscribe/\" + pattern] || [];\n      this.evt_callbacks[\"unsubscribe/\" + pattern].push(evt_callback);\n    }\n    this._send(message);\n  };\n\n  /* List all subscribed patterns */\n  list = (evt_callback = undefined) => {\n    const message = { event: \"list\" };\n    this.evt_callbacks[\"list\"] = this.evt_callbacks[\"list\"] || [];\n    this.evt_callbacks[\"list\"].push(evt_callback);\n    this._send(message);\n  };\n\n  _send = message => {\n    this.websocket.send(JSON.stringify(message));\n  };\n\n  /* Trigger callbacks attached to patterns and events*/\n  dispatch = (_pattern, message, is_pattern = false, one_shot = false) => {\n    /*if is_pattern is false then pattern is an event thus trigger evt_callbacks */\n    let _callbacks = undefined;\n    var pattern = _pattern;\n    if (is_pattern === true) {\n      pattern = JSON.stringify(_pattern);\n      _callbacks = this.callbacks[pattern];\n    } else {\n      _callbacks = this.evt_callbacks[pattern];\n    }\n\n    if (_callbacks === undefined) return;\n    for (let i = 0; i < _callbacks.length; i++) {\n      if (typeof _callbacks[i] === \"function\") {\n        _callbacks[i](message);\n      }\n    }\n    if (_callbacks) {\n      if (one_shot === true) {\n        _callbacks = [];\n      } else {\n        //NOTHING\n      }\n    }\n  };\n\n  /**\n   * STOPPED HERE\n   */\n\n  /* Get value from key in Var, scope fleet or global */\n  getVar = (key, callback = undefined, scope = \"global\") => {\n    if (![\"global\", \"fleet\"].includes(scope)) {\n      throw \"Only fleet and global scopes available.\";\n    }\n    if (scope === \"fleet\") {\n      // key format: robot_name@key_name\n      if (key.split(\"@\").length < 2) {\n        throw \"Wrong key format (robot_name@key_name)\";\n      }\n    }\n    const url = this.REST_API + \"database/\" + scope + \"/\" + key + \"/\";\n\n    checkLogin().then(res => {\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          if (callback) {\n            callback(data);\n          } else {\n            //NOTHING\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    });\n  };\n\n  /* Set value from key in Var, scope fleet or global */\n  setVar = (key, value, callback = undefined, scope = \"global\") => {\n    if (![\"global\", \"fleet\"].includes(scope)) {\n      throw \"Only fleet and global scopes available.\";\n    }\n    if (scope === \"fleet\") {\n      // key format: robot_name@key_name\n      const values = key.split(\"@\");\n      if (key.split(\"@\").length < 2) {\n        throw \"Wrong key format (robot_name@key_name)\";\n      }\n    }\n    const data = { key: key, scope: scope, value: value };\n    const url = this.REST_API + \"database/\";\n\n    checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          callback(res);\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    });\n  };\n\n  /**\n   * GET value from url\n   * @param url String\n   * @param callback function\n   * @memberof Database\n   */\n  get = (url, callback = undefined) => {\n    checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res\n            .json()\n            .then(data => {\n              callback(data, res);\n            })\n            .catch(e => {\n              callback(undefined, e);\n            });\n        }\n      });\n    });\n  };\n\n  /**\n   * Set value from key in Scope\n   * @param scope String\n   * @param name String - Instance Name\n   * @param key String - Key to override\n   * @param value Obj\n   * @param callback function\n   * @memberof Database\n   */\n  post = (scope, name, key, value, callback = undefined) => {\n    let url = this.REST_API + scope + \"/\" + name + \"/\";\n    if (name === undefined) {\n      url = this.REST_API + scope + \"/\";\n    }\n\n    checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({ key: key, data: value }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res\n            .json()\n            .then(data => {\n              callback(data, res);\n            })\n            .catch(e => {\n              callback(undefined, e);\n            });\n        }\n      });\n    });\n  };\n\n  upload = (packageName, key, value, callback = undefined) => {\n    const url = `${this.REST_API}upload/${packageName}/`;\n    const formData = new FormData();\n    formData.append(\"name\", key);\n    formData.append(`data`, value);\n    fetch(url, { method: \"POST\", body: formData })\n      .then(res => res.json())\n      .then(callback)\n      .catch(e => {\n        console.log('upload error', e);\n        callback(undefined);\n      });\n  };\n\n  /**\n   * Update key\n   * @param scope String\n   * @param name String - Instance Name\n   * @param value Obj\n   * @param callback function\n   * @memberof Database\n   */\n  put = (scope, name, value, callback = undefined) => {\n    let url = this.REST_API + scope + \"/\" + name + \"/\";\n    console.log(\"database put\", url);\n    if (name === undefined) {\n      url = this.REST_API + scope + \"/\";\n    }\n\n    checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"PUT\",\n        body: JSON.stringify(value),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res\n            .json()\n            .then(data => {\n              callback(data, res);\n            })\n            .catch(e => {\n              callback(undefined, res);\n\n              if (process.env.NODE_ENV === \"development\") {\n                alert(\n                  \"Development Mode \\n\" +\n                    \"Status: \" +\n                    res.status +\n                    \"\\n\" +\n                    \"Error: \" +\n                    res.statusText\n                );\n              }\n            });\n        }\n      });\n    });\n  };\n\n  /**\n   * Set value from key in Scope\n   * @param scope String\n   * @param name String - Instance Name\n   * @param key String - Key to override\n   * @param value Obj\n   * @param callback function\n   * @memberof Database\n   */\n  delete = (scope, name, callback = undefined, data = {}) => {\n    let url = this.REST_API + scope + \"/\" + name + \"/\";\n    if (name === undefined) {\n      url = this.REST_API + scope + \"/\";\n      return;\n    }\n\n    checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      fetch(url, {\n        method: \"DELETE\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res\n            .json()\n            .then(data => {\n              callback(data, res);\n            })\n            .catch(e => {\n              callback(undefined, res);\n\n              if (process.env.NODE_ENV === \"development\") {\n                alert(\n                  \"Development Mode \\n\" +\n                    \"Status: \" +\n                    res.status +\n                    \"\\n\" +\n                    \"Error: \" +\n                    res.statusText\n                );\n              }\n            });\n        }\n      });\n    });\n  };\n\n  /**\n   * Set value from key in Scope\n   * @param cloudFunction String - callback name\n   * @param func String - Function in the callback. default \"\"\n   * @param args Object - Args {key:value}... key is the param in the function\n   * @param callback func - Callback to parse the response\n   * @memberof Database\n   */\n  cloudFunction = (cloudFunction, func = \"\", args, callback = undefined) => {\n    checkLogin().then(res => {\n      if (!res) {\n        throw new AuthException(\"login error\");\n      }\n\n      const url = this.REST_API + \"function/\" + cloudFunction + \"/\";\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({ func: func, args: args }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res.json()\n            .then(data => callback(data))\n            .catch(e => { \n              console.log(e); \n              callback(undefined); \n            });\n        }\n      });\n    });\n  };\n\n  /**\n   * Set tabs in a currentUser\n   * @param scope String\n   * @param name String - Instance Name\n   * @param key String - Key to override\n   * @param value Obj\n   * @param callback function\n   * @memberof Database\n   */\n  postTabs = (name, value, callback = undefined) => {\n    let scope = \"User\";\n    let url = this.REST_API + scope + \"/\" + name + \"/\";\n    if (name === undefined) {\n      url = this.REST_API + scope + \"/\";\n      return;\n    }\n    let newValue = value.map(obj => {\n      return { componentName: obj.componentName, name: obj.name };\n    });\n    const key_workspace = {\n      Workspace: \"*\"\n    };\n\n    checkLogin().then(res => {\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({ key: key_workspace, data: newValue }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(res => {\n        if (callback) {\n          res\n            .json()\n            .then(data => {\n              callback(data, res);\n            })\n            .catch(e => {\n              callback(undefined, res);\n\n              if (process.env.NODE_ENV === \"development\") {\n                alert(\n                  \"Development Mode \\n\" +\n                    \"Status: \" +\n                    res.status +\n                    \"\\n\" +\n                    \"Error: \" +\n                    res.statusText\n                );\n              }\n            });\n        }\n      });\n    });\n  };\n}\n\nexport default Database;\n","import icons from \"../../resources/fonts/icomoon.woff\";\n\n// font generated in https://icomoon.io/\n\nconst Style = `\n@font-face {\n  font-family: 'mov.ai';\n  src: url(${icons}) format(\"woff\");\n  font-weight: normal;\n  font-style: normal;\n  font-display: block;\n}\n\n[class^=\"icon-\"], [class*=\" icon-\"] {\n  /* use !important to prevent issues with browser extensions that change fonts */\n  font-family: 'mov.ai' !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n\n  /* Better Font Rendering =========== */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-widget:before {\n  content: \"\\\\e900\";\n}\n.icon-tree:before {\n  content: \"\\\\e903\";\n}\n.icon-Statistics:before {\n  content: \"\\\\e906\";\n}\n.icon-Scenes:before {\n  content: \"\\\\e907\";\n}\n.icon-Sad:before {\n  content: \"\\\\e908\";\n}\n.icon-repeat:before {\n  content: \"\\\\e909\";\n}\n.icon-packages:before {\n  content: \"\\\\e90c\";\n}\n.icon-outline-off:before {\n  content: \"\\\\e90d\";\n}\n.icon-outline:before {\n  content: \"\\\\e90e\";\n}\n.icon-out:before {\n  content: \"\\\\e90f\";\n}\n.icon-Nodes:before {\n  content: \"\\\\e911\";\n}\n.icon-Layouts:before {\n  content: \"\\\\e913\";\n}\n.icon-info:before {\n  content: \"\\\\e914\";\n}\n.icon-in:before {\n  content: \"\\\\e915\";\n}\n.icon-Happy:before {\n  content: \"\\\\e916\";\n}\n.icon-grid:before {\n  content: \"\\\\e917\";\n}\n.icon-Filters:before {\n  content: \"\\\\e918\";\n}\n.icon-expand_more:before {\n  content: \"\\\\e919\";\n}\n.icon-expand_less:before {\n  content: \"\\\\e91a\";\n}\n.icon-Empty:before {\n  content: \"\\\\e91b\";\n}\n.icon-edit:before {\n  content: \"\\\\e91c\";\n}\n.icon-drag_indicator:before {\n  content: \"\\\\e91d\";\n}\n.icon-download:before {\n  content: \"\\\\e91e\";\n}\n.icon-details:before {\n  content: \"\\\\e91f\";\n}\n.icon-delete:before {\n  content: \"\\\\e920\";\n}\n.icon-create_new_folder:before {\n  content: \"\\\\e921\";\n}\n.icon-chevron_right:before {\n  content: \"\\\\e923\";\n}\n.icon-chevron_left:before {\n  content: \"\\\\e924\";\n}\n.icon-heck_circle:before {\n  content: \"\\\\e925\";\n}\n.icon-carts:before {\n  content: \"\\\\e926\";\n}\n.icon-Callbacks:before {\n  content: \"\\\\e928\";\n}\n.icon-Annotations:before {\n  content: \"\\\\e929\";\n}\n.icon-add:before {\n  content: \"\\\\e92b\";\n}\n`;\nexport default Style;\n\nconst previousStyle = `\n.icon-AddGlobal:before {\n  content: \"\\\\e900\";\n}\n.icon-out:before {\n  content: \"\\\\e901\";\n}\n.icon-in:before {\n  content: \"\\\\e902\";\n}\n.icon-account_circle:before {\n  content: \"\\\\e903\";\n}\n.icon-data_setting:before {\n  content: \"\\\\e904\";\n}\n.icon-supervisor_account:before {\n  content: \"\\\\e905\";\n}\n.icon-add_box:before {\n  content: \"\\\\e906\";\n}\n.icon-time .path1:before {\n  content: \"\\\\e907\";\n  color: rgb(0, 178, 188);\n}\n.icon-time .path2:before {\n  content: \"\\\\e908\";\n  margin-left: -1em;\n  color: rgb(250, 250, 250);\n}\n.icon-carts .path1:before {\n  content: \"\\\\e909\";\n  color: rgb(0, 178, 188);\n}\n.icon-carts .path2:before {\n  content: \"\\\\e90a\";\n  margin-left: -1em;\n  color: rgb(250, 250, 250);\n}\n.icon-tree:before {\n  content: \"\\\\e90b\";\n}\n.icon-expand_more:before {\n  content: \"\\\\e90c\";\n}\n.icon-expand_less:before {\n  content: \"\\\\e90d\";\n}\n.icon-chevron_right:before {\n  content: \"\\\\e90e\";\n}\n.icon-chevron_left:before {\n  content: \"\\\\e90f\";\n}\n.icon-Statistics:before {\n  content: \"\\\\e910\";\n}\n.icon-Scenes:before {\n  content: \"\\\\e911\";\n}\n.icon-Sad:before {\n  content: \"\\\\e912\";\n}\n.icon-Normal:before {\n  content: \"\\\\e913\";\n}\n.icon-Nodes:before {\n  content: \"\\\\e914\";\n}\n.icon-Layouts:before {\n  content: \"\\\\e915\";\n}\n.icon-Happy:before {\n  content: \"\\\\e916\";\n}\n.icon-Flows:before {\n  content: \"\\\\e917\";\n}\n.icon-Filters:before {\n  content: \"\\\\e918\";\n}\n.icon-Empty:before {\n  content: \"\\\\e919\";\n}\n.icon-Callbacks:before {\n  content: \"\\\\e91a\";\n}\n.icon-Annotations:before {\n  content: \"\\\\e91b\";\n}\n.icon-create_new_folder:before {\n  content: \"\\\\e91c\";\n}\n.icon-widgets:before {\n  content: \"\\\\e91d\";\n}\n.icon-log:before {\n  content: \"\\\\e91e\";\n}\n.icon-outlined_hidden:before {\n  content: \"\\\\e91f\";\n}\n.icon-outlined:before {\n  content: \"\\\\e920\";\n}\n.icon-repeat:before {\n  content: \"\\\\e921\";\n  color: #2090b7;\n}\n.icon-edit:before {\n  content: \"\\\\e922\";\n  color: #2091b7;\n}\n.icon-download:before {\n  content: \"\\\\e923\";\n  color: #2091b7;\n}\n.icon-details:before {\n  content: \"\\\\e924\";\n}\n.icon-delete:before {\n  content: \"\\\\e925\";\n  color: #2091b7;\n}\n.icon-check_circle-copy:before {\n  content: \"\\\\e926\";\n}\n.icon-add:before {\n  content: \"\\\\e927\";\n  color: #2091b7;\n}\n.icon-drag_indicator-24px-3:before {\n  content: \"\\\\e928\";\n}\n`;\n","export default \"data:font/woff;base64,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\"","export default class UndoManager {\n  constructor(size = 50) {\n    this.size = size;\n    this.undoStack = new Queue(size);\n    this.redoStack = new Queue(size);\n  }\n\n  doIt(undoAbleAction) {\n    undoAbleAction.doAction();\n    this.undoStack.push(undoAbleAction);\n    this.redoStack = new Queue(this.size);\n  }\n\n  addIt(undoAbleAction) {\n    this.undoStack.push(undoAbleAction);\n    this.redoStack = new Queue(this.size);\n  }\n\n  undo(paramsObject) {\n    const undoAbleAction = this.undoStack.pop();\n    if (undoAbleAction) {\n      undoAbleAction.undoAction(paramsObject);\n      this.redoStack.push(undoAbleAction);\n    }\n  }\n\n  redo(paramsObject) {\n    const undoAbleAction = this.redoStack.pop();\n    if (undoAbleAction) {\n      undoAbleAction.doAction(paramsObject);\n      this.undoStack.push(undoAbleAction);\n    }\n  }\n\n  static actionBuilder() {\n    return new UndoAbleActionBuilder();\n  }\n}\n\nclass UndoAbleActionBuilder {\n  constructor() {\n    this._doAction = null;\n    this._undoAction = null;\n  }\n\n  doAction(lambda) {\n    this._doAction = lambda;\n    return this;\n  }\n\n  undoAction(lambda) {\n    this._undoAction = lambda;\n    return this;\n  }\n\n  build() {\n    if ([this._undoAction, this._undoAction].some(x => x == null))\n      throw \"Forgot to set doAction or undoAction\";\n    return { doAction: this._doAction, undoAction: this._undoAction };\n  }\n}\n\nclass Queue {\n  constructor(size = 50) {\n    this.size = size;\n    this.queue = [];\n  }\n\n  push(el) {\n    if (this.queue.length === this.size) {\n      this.queue.shift();\n    }\n    this.queue.push(el);\n  }\n\n  pop() {\n    return this.queue.pop();\n  }\n}\n","/**\n * Clipboard singleton\n */\nexport default class Clipboard {\n  constructor() {\n    if (Clipboard.instance) return Clipboard.instance;\n    Clipboard.instance = this;\n    this._data = {};\n    this.copyKey = Math.random();\n  }\n\n  /**\n   *  get clipboard data\n   */\n  get data() {\n    return this._data;\n  }\n\n  /**\n   *\n   * @param {string} key base key to clear\n   */\n  static clear(key) {\n    const inst = new Clipboard();\n    if (key) delete inst._data[key];\n  }\n\n  /**\n   *\n   * @param {string} key base key to read\n   */\n  static read(key) {\n    // consider return a maybe\n    const inst = new Clipboard();\n    return key ? inst.data[key] : inst.data;\n  }\n\n  /**\n   *\n   * @param {string} key base key to write\n   * @param {any} value object, primitive, etc, to write\n   */\n  static write(key, value) {\n    return (new Clipboard()._data[key] = value);\n  }\n\n  /**\n   * Copies value\n   * @param {*} value\n   */\n  static copy(value) {\n    Clipboard.write(new Clipboard().copyKey, value);\n  }\n\n  /**\n   * Retrieve copied object\n   */\n  static paste() {\n    // consider making deep copy\n    return Clipboard.read(new Clipboard().copyKey);\n  }\n}\n","import Authentication from \"../Authentication/Authentication\";\n\nclass User {\n  constructor() {\n    this.baseUrl = `${window.location.origin}/api/v1/User`;\n    this.tokenData = Authentication.getTokenData();\n    this.data = null;\n    this.timestamp = null;\n    this.TIMEOUT = 3000; // milisec\n  }\n\n  getData = () => {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${Authentication.getToken()}`\n    };\n    const { name } = this.tokenData.message;\n    const url = `${this.baseUrl}/${name}/`;\n\n    return new Promise((resolve, reject) => {\n      const currTime = new Date().getTime();\n\n      // send cached value\n      if (currTime - this.timestamp <= this.TIMEOUT && this.data) {\n        return resolve({ response: this.data });\n      }\n\n      this.timestamp = currTime;\n\n      fetch(url, { headers })\n        .then(response => {\n          // request error\n          if (!response.ok) {\n            reject({ error: response.statusText });\n          }\n\n          // parse response\n          response\n            .json()\n            .then(data => {\n              this.data = data;\n              resolve({ response: data });\n            })\n            .catch(error => {\n              this.data = null;\n              reject({ error });\n            });\n        })\n        .catch(error => {\n          // error while parsing request\n          this.data = null;\n          reject({ error });\n        });\n    });\n  };\n\n  isSuperUser = async () => {\n    const data = await this.getData();\n    return data?.response?.Superuser || false;\n  };\n}\n\nexport default User;\n","import { Subject, BehaviorSubject } from \"rxjs\";\nimport lodash from \"lodash\";\n\nimport Utils from \"../../Utils/Utils\";\n//import RestApi from \"../../RestApi\";\n\nexport default class BaseModel {\n  constructor(manager, model, database, patterns) {\n    this.db_states = Object.freeze({ error: -1, loading: 0, ready: 1 });\n    this.db = database;\n    this.model = model;\n    this.manager = manager;\n\n    this._subject = new Subject();\n    this._cache = new Map();\n    this._subject_state = new BehaviorSubject(0);\n    this._db_state = this.db_states.loading;\n\n    this.patterns = this._validatePatterns(patterns);\n    this.nr_patterns = this.patterns.length;\n\n    //this.api = new RestApi(this.model);\n\n    this._initialize();\n  }\n\n  _initialize = () => {\n    this.patterns.forEach(pattern => this._subscribe(pattern));\n\n    return this;\n  };\n\n  _subscribe = pattern => {\n    this.db.subscribe(\n      pattern,\n      data => this._onDataChange(data),\n      data => this._onDataLoad(data)\n    );\n  };\n\n  _validatePatterns = patterns => {\n    const default_pattern = { Scope: this.model, Name: \"*\" };\n    const _patterns = patterns ? patterns : default_pattern;\n    return Array.isArray(_patterns) ? _patterns : [_patterns];\n  };\n\n  get db_state() {\n    return this._db_state;\n  }\n\n  set db_state(value) {\n    if (value !== this._db_state) {\n      this._db_state = value;\n      if (value !== this.db_states.ready) {\n        this._subject_state.next(value);\n      } else {\n        this._subject_state.complete();\n      }\n    }\n  }\n\n  get = id => {\n    return this._cache.get(id);\n  };\n\n  getAll = () => {\n    return this._cache.values();\n  };\n\n  _get_or_create = key => {\n    return (\n      this.get(key) ||\n      this.add(key, {\n        name: key,\n        obj: {},\n        id: key\n      }).get(key)\n    );\n  };\n\n  add = (key, data) => {\n    return this._cache.set(key, data);\n  };\n\n  remove = key => {\n    this._cache.delete(key);\n  };\n\n  destroy = () => {\n    this.patterns.forEach(pattern => this.db.unsubscribe(pattern));\n  };\n\n  /**\n   * removes empty objects, returning changed object\n   */\n  removeEmpty = (obj, path) => {\n    let new_obj = null;\n\n    if (lodash.isEmpty(lodash.get(obj, path, {}))) {\n      // remove empty\n      new_obj = lodash.omit(obj, path);\n\n      const up_path = path.split(\".\");\n      // check up level is empty\n      if (up_path.length > 1) {\n        new_obj = this.removeEmpty(new_obj, up_path.slice(0, -1).join(\".\"));\n      }\n    }\n\n    return new_obj || obj;\n  };\n\n  /**\n   *    Events\n   */\n\n  _onDataChange = data => {\n    const obj = lodash.get(data, `key.${this.model}`, {});\n\n    Object.keys(obj).forEach(key => {\n      const entry = this._get_or_create(key);\n\n      if (data.event === \"del\") {\n        // deleting an entry\n        const path = Object.keys(Utils.flattenObject(obj[key]))[0];\n\n        entry.obj = this.removeEmpty(lodash.omit(entry.obj, path), path);\n\n        // completly remove object\n        if (lodash.isEmpty(entry.obj)) {\n          this.remove(key);\n        }\n      } else {\n        // updating an entry\n        lodash.merge(entry.obj, obj[key]);\n      }\n\n      this._subject.next({ data: entry, event: data.event });\n    });\n  };\n\n  _onDataLoad = data => {\n    const obj = lodash.get(data, `value.${this.model}`, {});\n\n    Object.keys(obj).forEach(key => {\n      /*this.add(key, {\n        obj: obj[key],\n        id: key\n      });*/\n      const entry = this._get_or_create(key);\n      lodash.merge(entry.obj, obj[key]);\n    });\n\n    if (--this.nr_patterns <= 0) {\n      this.db_state = this.db_states.ready;\n    }\n  };\n\n  onReady = callback => {\n    if (this.db_state !== this.db_states.ready) {\n      this._subject_state.subscribe(\n        () => {},\n        () => {},\n        () => callback()\n      );\n    } else {\n      callback();\n    }\n  };\n\n  onUpdate = callback => {\n    this._subject.subscribe(callback);\n  };\n}\n","import lodash from \"lodash\";\nimport { BehaviorSubject } from \"rxjs\";\n\nexport default class DataManagerBase {\n  constructor() {\n    this.models = {};\n    this.db_states = Object.freeze({ error: -1, loading: 0, ready: 1 });\n    this.isReady = 0;\n    this._subject_state = new BehaviorSubject(0);\n  }\n\n  _initialize = () => {\n    if (lodash.isEmpty(this.models)) {\n      throw new Error(\"No models added\");\n    }\n\n    Object.keys(this.models).forEach(key => {\n      const prop = key.charAt(0).toLowerCase() + key.slice(1);\n\n      Object.defineProperty(this, prop, {\n        get: () => {\n          return this.models[key];\n        }\n      });\n    });\n    return this._subscribeModelsReady();\n  };\n\n  _subscribeModelsReady = () => {\n    Object.keys(this.models).forEach(key => {\n      this.models[key].onReady(() => this._setModelReady(key));\n    });\n    return this;\n  };\n\n  _setModelReady = model => {\n    this.isReady += 1;\n    if (this.isReady === Object.keys(this.models).length) {\n      this._subject_state.complete();\n    }\n  };\n\n  get db_state() {\n    return this.isReady === Object.keys(this.models).length\n      ? this.db_states.ready\n      : this.db_states.loading;\n  }\n\n  onUpdate = (subscribeTo, callback) => {\n    return subscribeTo.onUpdate(callback);\n  };\n\n  onReady = callback => {\n    if (this.db_state !== this.db_states.ready) {\n      this._subject_state.subscribe(\n        () => {},\n        () => {},\n        () => callback()\n      );\n    } else {\n      callback();\n    }\n  };\n}\n","import BaseModel from \"../Database/Models/BaseModel\";\nimport MasterDB from \"../Database/MasterDB\";\nimport Rest from \"../Rest/Rest\";\n\n/**\n * Document class to use with the Rest api V1\n */\nclass DocumentV1 {\n  constructor({ type, name, workspace = \"global\", version, path }) {\n    this._init(type, name, workspace, version, path);\n  }\n\n  /** Initialization */\n  _init = (type, name, workspace, version, path) => {\n    this._parseArgs(workspace, type, name, version, path);\n    this.subscriber = undefined;\n    this.database = MasterDB;\n    this.data = {};\n  };\n\n  /** Parse instance args */\n  _parseArgs = (workspace, type, name, version, path) => {\n    const [_workspace, _type, _name, _version] = (path || \"\").split(\"/\");\n\n    this.workspace = _workspace || workspace;\n    this.type = _type || type;\n    this.name = _name || name;\n    this.version = _version || version;\n  };\n\n  /** Document properties */\n\n  /**\n   * Get document read only status\n   */\n  get readOnly() {\n    return this.workspace !== \"global\";\n  }\n\n  /**\n   * Get document url\n   * Same as path\n   */\n  get url() {\n    return this.path;\n  }\n\n  /**\n   * Get document path\n   */\n  get path() {\n    const { workspace, type, name, version } = this;\n    return `${workspace}/${type}/${name}/${version}`;\n  }\n\n  /** Document handlers */\n\n  /**\n   * Get document data\n   */\n  read = (apiVersion = \"v1\") => {\n    const { type, name } = this;\n    const path = \n      apiVersion === \"v1\" \n      ? `v1/${type}/${name}/`\n      : `v2/db/${this.path}`;\n\n    return Rest.get({ path }).then(data => {\n      this.data = data;\n      return apiVersion === \"v1\" \n        ? data\n        : data[type][name];\n    });\n  };\n\n  /**\n   * Update the document using PUT request\n   * @param {Object} body Request payload\n   */\n  update = body => {\n    const { type, name } = this;\n    const path = `v1/${type}/${name}/`;\n\n    return Rest.put({ path, body });\n  };\n\n  /** Subscribers */\n\n  /**\n   * Subscribe to document changes (notifications only available in the global workspace)\n   * @param {Function} callback Callback to execute when the document is updated\n   */\n  subscribe = callback => {\n    this.resubscribe(callback);\n  };\n\n  /**\n   * Resubscribe to document changes (notifications only available in the global workspace)\n   * @param {Function} callback Callback to execute when the document is updated\n   */\n  resubscribe = callback => {\n    if (this.readOnly) return;\n\n    this.unsubscribe();\n\n    this.subscriber = new BaseModel({}, this.type, this.database, [\n      { Scope: this.type, Name: this.name }\n    ]);\n\n    this.subscriber.onUpdate(() => {\n      if (!this.subscriber) return;\n      this.data = this.subscriber.get(this.name)?.obj || {};\n      callback(this.data);\n    });\n  };\n\n  /**\n   * Unsubscribe from document changes\n   */\n  unsubscribe = () => {\n    if (this.subscriber) this.subscriber.destroy();\n    this.subscriber = null;\n  };\n\n  /** Static handlers */\n\n  /**\n   *\n   * @param {String} type Type of the document\n   * @param {String} name Name of the document\n   */\n  static create({ type, name, body = {} }) {\n    const path = `v1/${type}/`;\n\n    return Rest.post({ path, body: { data: { ...body, Label: name } } });\n  }\n\n  /**\n   * Delete document or partial deletion of the document\n   * @param {String} type Type of the document\n   * @param {String} name Name of the document\n   * @param {Object} body Data of the document\n   */\n  static delete({ type, name, body }) {\n    const path = `v1/${type}/${name}/`;\n\n    return Rest.delete({ path, body });\n  }\n}\n\nexport default DocumentV1;\n","import DocumentV1 from \"./DocumentV1\";\nimport Rest from \"../Rest/Rest\";\n\n/**\n * Document class to use with the Rest api V2\n */\nclass DocumentV2 extends DocumentV1 {\n  /**\n   * Get document data\n   */\n  read = () => {\n    const { workspace, type, name, version } = this;\n    const path = `v2/db/${workspace}/${type}/${name}/${version}`;\n\n    return Rest.get({ path }).then(data => {\n      this.data = data;\n      return data;\n    });\n  };\n\n  /**\n   * Update the document using PUT request\n   * @param {Object} body Request payload\n   */\n  update = body => {\n    const { workspace, type, name, version } = this;\n    const path = `v2/db/${workspace}/${type}/${name}/${version}`;\n\n    return Rest.put({ path, body });\n  };\n\n  /** Snapshot handlers */\n\n  /**\n   *\n   * @param {String} trgWorkspace Workspace where to create the snapshot\n   * @param {String} version Snapshot version\n   */\n  createSnapshot = ({ trgWorkspace, version }) => {\n    const { workspace, type, name } = this;\n\n    return Snapshot.create({\n      trgWorkspace,\n      srcWorkspace: workspace,\n      type,\n      name,\n      version\n    });\n  };\n\n  /**\n   * Get list of snapshots for the current document in the current workspace\n   */\n  getSnapShots = () => {\n    const { workspace, type, name } = this;\n\n    return Snapshot.getAll({\n      workspace,\n      type,\n      name\n    });\n  };\n\n  /** Static handlers */\n\n  /**\n   *\n   * @param {String} type Type of the document\n   * @param {String} name Name of the document\n   * @param {String} workspace Workspace of the document\n   */\n  static create({ type, name, workspace }) {\n    const path = `v2/db/${workspace}/${type}/${name}`;\n    const body = { Label: name };\n\n    return Rest.post({ path, body });\n  }\n\n  /**\n   * Delete document or partial deletion of the document\n   * @param {String} type Type of the document\n   * @param {String} name Name of the document\n   * @param {Object} body Data of the document\n   * @param {String} workspace Workspace of the document\n   */\n  static delete({ type, name, body, workspace = \"global\" }) {\n    const path = `v2/db/${workspace}/${type}/${name}`;\n\n    return Rest.delete({ path, body });\n  }\n\n  /**\n   * Get all existing documents in a workspace\n   * @param {String} workspace workspace to search\n   * @param {String} type filter documents by type\n   * @param {String} id further filter documents by type and id\n   */\n  static getDocs = ({ workspace, scope, id }) => {\n    const _scope = scope ? `/${scope}` : \"\";\n    const _id = scope ? (id ? `/${id}` : \"\") : \"\";\n    const path = `v2/db/${workspace}${_scope}${_id}`;\n\n    return Rest.get({ path });\n  };\n}\n\nexport default DocumentV2;\n","import DocumentV1 from \"./DocumentV1\";\nimport DocumentV2 from \"./DocumentV2\";\n\nconst withDocVersion = function (docVersion) {\n  return {\n    v1: DocumentV1,\n    v2: DocumentV2\n  }[docVersion];\n};\n\nclass Document {\n  constructor(args, docVersion = \"v1\") {\n    // create instance of DocumentV1 or DocumentV2\n    return new (withDocVersion(docVersion))(args);\n  }\n\n  /** Static handlers */\n\n  /**\n   * Forward create call to the correct Document version\n   * @param {Object} args Object with arguments to forward\n   * @param {String} docVersion Document version to use\n   */\n  static create(args, docVersion = \"v1\") {\n    return withDocVersion(docVersion).create(args);\n  }\n\n  /**\n   * Forward delete call to the correct version\n   * @param {Object} args Object with arguments to forward\n   * @param {String} docVersion Document version to use\n   */\n  static delete(args, docVersion = \"v1\") {\n    return withDocVersion(docVersion).delete(args);\n  }\n\n  /**\n   * Parse path into an object\n   * @param {String} path The path to parse\n   * @param {String} dtype Default type\n   *\n   * @return {Object} An object with workspace, type, name, version\n   */\n\n  static parsePath(_path, dtype = \"Node\") {\n    const spl = _path.split(\"/\");\n\n    const workspace = spl.length > 1 ? spl[0] : \"global\";\n    const type = spl[1] || dtype;\n    const name = spl[2] || _path;\n    const version = spl[3] || \"__UNVERSIONED__\";\n    const path = `${workspace}/${type}/${name}/${version}`;\n\n    return { workspace, type, name, version, path };\n  }\n}\n\nexport default Document;\n","import Rest from \"../Rest/Rest\";\n\nconst Workspace = {};\n\nWorkspace.create = () => {\n  throw new Error(\"Not implemented\");\n};\nWorkspace.delete = () => {\n  throw new Error(\"Not implemented\");\n};\n\n/**\n * Get a list of all locally available workspaces\n */\nWorkspace.getAll = () => {\n  const path = \"v2/db\";\n\n  return Rest.get({ path });\n};\n\n/**\n * Get all existing documents in a workspace\n * @param {String} workspace workspace to search\n * @param {String} type filter documents by type\n * @param {String} id further filter documents by type and id\n */\nWorkspace.getDocs = ({ workspace, scope, id }) => {\n  const _scope = scope ? `/${scope}` : \"\";\n  const _id = scope ? (id ? `/${id}` : \"\") : \"\";\n  const path = `v2/db/${workspace}${_scope}${_id}`;\n\n  return Rest.get({ path });\n};\n\nexport default Workspace;\n","import Rest from \"../Rest/Rest\";\n\nconst Snapshot = {};\n\n/**\n * Create a snapshot from a specific document\n * @param {Object} target Object with the following params\n * @param {Object} source Object with the following params\n *  @param {String} workspace Target workspace where the document will be\n *  @param {String} type Type of the document\n *  @param {String} name Source name of the document\n *  @param {String} version Source version of the snapshot\n */\nSnapshot._create = ({ target, body = {} }) => {\n  const { workspace, type, name, version } = target;\n\n  const path = `v2/db/${workspace}/${type}/${name}/${version}`;\n\n  return Rest.post({ path, body });\n};\n\n/**\n * Create a snapshot from a specific document\n * @param {Object} target Object with the following params\n *  @param {String} workspace Target workspace where the document will be\n *  @param {String} type Type of the document\n *  @param {String} name Source name of the document\n *  @param {String} version Source version of the snapshot\n * @param {Object} body Document data\n */\nSnapshot.create = ({ target, body = {} }) => {\n  Snapshot._create({ target, body: { data: body } });\n};\n\n/**\n * Create document by referencing an existing document\n * @param {Object} target Object with the following params\n * @param {Object} source Object with the following params\n *  @param {String} workspace Target workspace where the document will be\n *  @param {String} type Type of the document\n *  @param {String} name Source name of the document\n *  @param {String} version Source version of the snapshot\n */\nSnapshot.createByRef = ({ target, source }) => {\n  const body = {\n    src: `${source.workspace}/${source.type}/${source.name}/${source.version}`\n  };\n\n  return Snapshot._create({ target, source, body });\n};\n\n/**\n * Delete a specific snapshot\n */\nSnapshot.delete = () => {\n  throw new Error(\"Not implemented\");\n};\n\n/**\n * Get the data of a snapshot\n * @param {String} workspace Workspace to read from\n * @param {String} type Type of the document\n * @param {String} name Name of the snapshot\n * @param {String} version Version of the snapshot\n */\nSnapshot.read = ({ workspace, type, name, version }) => {\n  const path = `v2/db/${workspace}/${type}/${name}/${version}`;\n\n  return Rest.get({ path });\n};\n\n/**\n * Create document in the global workspace\n * @param {Object} target Object with the following params\n * @param {Object} source Object with the following params\n *  @param {String} workspace Target workspace where the document will be\n *  @param {String} type Type of the document\n *  @param {String} name Source name of the document\n *  @param {String} version Source version of the snapshot\n */\nSnapshot.restore = ({ target, source }) => {\n  target.workspace = \"global\";\n\n  return Snapshot.createByRef({ target, source });\n};\n\n/**\n * Get all the snapshots of a document\n * @param {String} workspace Workspace to read from\n * @param {String} type Type of the document\n * @param {String} name Name of the document\n */\nSnapshot.getAll = ({ workspace, type, name }) => {\n  const path = `v2/db/${workspace}/${type}/${name}`;\n\n  return Rest.get({ path });\n};\n\nexport default Snapshot;\n"],"sourceRoot":""}